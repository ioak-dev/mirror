{"version":3,"sources":["images/cover.jpg","images/mirror_white_small.svg","reducers/AuthReducer.ts","reducers/ProfileReducer.ts","reducers/index.ts","actions/types.ts","store.ts","events/SearchEvent.ts","components/Ux/SearchBar.tsx","components/Constants.ts","events/MessageService.ts","components/Lib/RestTemplate.ts","components/Ux/OakDialog.tsx","components/Ux/OakTextField.tsx","components/Utils.ts","components/Ux/OakPrompt.tsx","components/Home/index.tsx","components/Tenant/TenantService.ts","actions/AuthActions.ts","components/Ux/OakText.tsx","components/Auth/AuthService.ts","components/Auth/Login.tsx","components/Landing/index.tsx","components/Auth/PrivateRoute.tsx","components/Auth/AuthInit.tsx","actions/ProfileActions.ts","components/App/Backdrop.tsx","components/Notification/index.tsx","components/Navigation/Links.tsx","components/Navigation/Desktop.tsx","components/Navigation/Mobile.tsx","components/Navigation/index.tsx","components/Tenant/index.tsx","components/Ux/ViewResolver.tsx","components/Ux/View.tsx","components/Ux/Sidebar.tsx","components/Stages/index.tsx","components/Settings/index.tsx","components/Faq/Link.tsx","components/Ux/OakSelect.tsx","components/Ux/OakPagination.tsx","components/Ux/OakTable.tsx","components/Faq/index.tsx","components/ServiceRequests/view.tsx","components/ServiceRequests/index.tsx","components/App/Content.tsx","components/App/index.tsx","serviceWorker.js","index.tsx","images/mirror_white.svg"],"names":["module","exports","__webpack_require__","p","initialState","isAuth","firstname","lastname","theme","tenant","combineReducers","authorization","state","arguments","length","undefined","action","type","console","log","_objectSpread","payload","profile","ProfileReducer_objectSpread","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","searchTextChangedEvent$","BehaviorSubject","searchEvent$","Subject","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_isMounted","onSubmit","event","preventDefault","next","searchText","handleChange","target","value","_this2","subscribe","data","setState","react_default","a","createElement","method","noValidate","className","alt","name","spellCheck","autoComplete","autoFocus","placeholder","required","onChange","xmlns","width","height","viewBox","d","Component","constants","API_URL_TENANT","API_URL_TENANT_BANNER","API_URL_TENANT_CREATE","API_TENANT_URL","API_URL_PRESIGNUP","API_URL_RESET","API_URL_CODE","API_URL_USER_DETAILS","API_URL_STAGE","API_URL_PREDICT","API_URL_ARTICLE","API_URL_CATEGORY","API_URL_FAQ","API_URL_SR","API_URL","API_SIGNIN","API_SIGNUP","API_KEYS","API_JWT","subject","sendMessage","signal","receiveMessage","asObservable","baseUrl","process","httpGet","endpoint","headers","axios","get","httpPost","post","httpPut","put","OakDialog","escFunction","keyCode","visible","toggleVisibility","nextProps","window","scrollTo","document","addEventListener","removeEventListener","small","onClick","children","OakTextField","id","label","error","rows","multiline","rest","objectWithoutProperties","TextField","assign","e","margin","variant","fullWidth","isEmptyOrSpaces","str","match","OakPrompt","components_Ux_OakDialog","text","Fragment","pageYOffsetCutoff","Home","search","searchTitle","requestId","params","Authorization","token","then","response","predictionMap","prediction","forEach","element","rank","faqs","searchResults","catch","handleScroll","currentScrollPos","pageYOffset","showMainSearchBar","prevScrollpos","notHelpful","toggleEditDialog","toggleNotLoggedInPrompt","isCreateRequestDialogOpen","isNotLoggedInPromptOpen","redirectToLogin","history","push","Home_objectSpread","defineProperty","addRequest","assertThisInitialized","request","title","description","searchDescription","message","duration","status","_id","banner","setProfile","tenantName","_this3","Promise","resolve","cover","_this4","Ux_OakTextField","Ux_OakPrompt","src","components_Ux_SearchBar","map","item","key","question","answer","React","getAuth","dispatch","addAuth","removeAuth","OakText","disabled","errorFields","preSignup","signin","problem","solution","password","ciphertext","JSON","stringify","sjcl","decrypt","email","encrypt","salt","config","cipher","iter","ks","CryptoJS","enc","Base64","Utf8","parse","queryString","require","Login","loginViaJwt","jwt","jwtToken","success","login","signup","that","test","toggle","logout","cookies","remove","secret","set","newuser","Login_objectSpread","currentTarget","sentEmailWithCode","sentPasswordChangeEmail","rand","Math","random","resetCode","location","query","Ux_OakText","connect","withCookies","Landing","react_router_dom","to","activeClassName","PrivateRoute","react_router","path","render","AuthInit","getProfile","Backdrop","backdrop","Notification","spinner","notification","lastNotificationType","setTimeout","Links","toggleMenu","menu","Desktop","showSearchBar","showSettings","transparent","mirror_white","Navigation_Links","toggleSettings","Mobile","mirror_white_small","Navigation","toggleDarkMode","Navigation_objectSpread","changeTextSize","size","textSize","changeThemeColor","color","themeColor","mobilemenu","chooseTheme","transparentNavBar","firstLoad","Navigation_Desktop","Navigation_Mobile","withRouter","Tenant","_objectSpread3","Tenant_objectSpread","sentTenantUrl","submit","clearError","validate","createTenant","handleImageChange","files","preSignupData","formData","FormData","append","jwtPassword","Content-Type","pageNo","created","gotoTenantPage","repeatPassword","fieldName","setError","accept","ViewResolver","viewPort","matchMedia","viewPortChange","port","mobileViewPort","matches","toggleSideView","showSide","views","initializeViews","addListener","Children","toArray","node","main","side","sideLabel","toUpperCase","View","Sidebar","show","hide","elements","icon","number","animate","Stages","handleAddStage","stage","concat","handleChangeStage","evt","idx","localStage","toConsumableArray","Stages_objectSpread","handleRemoveStage","filter","s","sidx","saveStages","resetStages","Settings","chooseSection","section","Settings_objectSpread","sidebarElements","user","ownerEmail","components_Ux_ViewResolver","Ux_View","Stages_Stages","components_Ux_Sidebar","Link","edit","editFaq","faq","delete","confirmDeleteFaq","category","useStyles","makeStyles","root","display","flexWrap","formControl","minWidth","selectEmpty","marginTop","spacing","OakSelect","classes","objects","first","firstAction","dropdownList","MenuItem","FormControl","InputLabel","htmlFor","Select","inputProps","autoWidth","maxWidth","OakPagination","previousPage","pageChanged","onChangePage","rowsPerPage","nextPage","ceil","totalRows","handleRowCountChange","_objectSpread2","OakPagination_objectSpread","Ux_OakSelect","OakTable","view","slice","material","dense","header","row","column","components_Ux_OakPagination","Faq","isEditDialogOpen","editDialogLabel","toggleDeleteDialog","isDeleteDialogOpen","newCategory","faqId","deleteFaq","initializeFaq","searchByWord","faqName","addFaq","Faq_objectSpread","existingCategories","article","createData","calories","fat","carbs","protein","listview","Faq_Link","components_Ux_OakTable","ServiceRequestView","clearRequest","toggleDialog","isDialogOpen","view_objectSpread","ServiceRequests","openRequest","selectedRequest","initializeRequest","ServiceRequests_objectSpread","serviceRequest","list","view_ServiceRequestView","themes","themecolor_1","getTheme","themecolor_2","themecolor_3","themecolor_4","createMuiTheme","palette","primary","secondary","Content","react_router_dom_min","Auth_AuthInit","App_Backdrop","components_Notification","ThemeProvider","components_Navigation","Home_Home","components_Auth_Login","exact","Landing_Landing","Tenant_Tenant","Auth_PrivateRoute","components_Settings","Faq_Faq","ServiceRequests_ServiceRequests","App","es","App_Content","Boolean","hostname","ReactDOM","es6","components_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ba3e9f4a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover.b89312c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mirror_white_small.7aed2e38.svg\";","import { GET_AUTH, ADD_AUTH, REMOVE_AUTH } from '../actions/types';\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    firstname: '',\r\n    lastname: ''\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_AUTH:\r\n            console.log('GET_AUTH reducer');\r\n            return {\r\n                ...state\r\n            };\r\n        case ADD_AUTH:\r\n            console.log('ADD_AUTH reducer');\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        \r\n        case REMOVE_AUTH:\r\n            console.log('REMOVE_AUTH reducer');\r\n            return {\r\n                ...state,\r\n                isAuth: false,\r\n                firstname: '',\r\n                lastname: ''\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_PROFILE, SET_PROFILE } from '../actions/types';\r\n\r\nconst initialState = {\r\n    theme: 'theme_light',\r\n    tenant: ''\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_PROFILE:\r\n            console.log('GET_PROFILE reducer');\r\n            return {\r\n                ...state\r\n            };\r\n        case SET_PROFILE:\r\n            console.log('SET_PROFILE reducer');\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport AuthReducer from './AuthReducer';\r\nimport ProfileReducer from './ProfileReducer';\r\n\r\nexport default combineReducers({\r\n    authorization: AuthReducer,\r\n    profile: ProfileReducer\r\n})","export const GET_AUTH = 'GET_AUTH';\r\nexport const ADD_AUTH = 'ADD_AUTH';\r\nexport const REMOVE_AUTH = 'REMOVE_AUTH';\r\n\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const SET_PROFILE = 'SET_PROFILE';","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware)//,\r\n        // (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;\r\n","import { BehaviorSubject, Subject } from 'rxjs';\r\n\r\nexport const searchTextChangedEvent$ = new BehaviorSubject<string>(\"\");\r\nexport const searchEvent$ = new Subject<string>();\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SearchBar.scss';\r\nimport { searchTextChangedEvent$, searchEvent$ } from '../../events/SearchEvent';\r\n\r\ninterface Props {\r\n  alt?: boolean\r\n}\r\n\r\ninterface State {\r\n  searchText: string\r\n}\r\n\r\nclass SearchBar extends Component<Props, State> {\r\n\r\n  _isMounted = false;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchText: \"\"\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    searchTextChangedEvent$.subscribe(data => {\r\n      if (this._isMounted) {\r\n        this.setState({\r\n          searchText: data\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n      this._isMounted = false;\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    searchEvent$.next(this.state.searchText);\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    searchTextChangedEvent$.next(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form method=\"GET\" onSubmit={this.onSubmit} noValidate>\r\n        <div className={\"search-bar\" + (this.props.alt ? \" alt\" : \"\")}>\r\n            <input name=\"searchText\" spellCheck={false} autoComplete=\"off\" autoFocus placeholder=\"Mirror, mirror, on the wall, who's the fairest of them all?\" required value={this.state.searchText} onChange={this.handleChange}></input>\r\n              <button className=\"icon\">\r\n                <i><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"></path></svg></i>\r\n              </button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","export const constants ={\r\n    API_URL_TENANT:\"/tenant\",\r\n    API_URL_TENANT_BANNER:\"/tenant/banner\",\r\n    API_URL_TENANT_CREATE:\"/tenant/create\",\r\n    API_TENANT_URL: \"/tenant/sendURL\",\r\n    \r\n    API_URL_PRESIGNUP: \"/auth/keys\",\r\n    API_URL_RESET: \"/auth/reset\",\r\n    API_URL_CODE:\"/auth/sendResetCode\",\r\n    API_URL_USER_DETAILS: \"/user/details\",\r\n\r\n    API_URL_STAGE:\"/stage\",\r\n    API_URL_PREDICT: \"/model/predict\",\r\n\r\n    API_URL_ARTICLE:\"/article\",\r\n    API_URL_CATEGORY:\"/category\",\r\n    API_URL_FAQ:\"/faq\",\r\n    API_URL_SR:\"/servicerequests\",\r\n    API_URL:\"/auth/\",\r\n    API_SIGNIN:\"/signin\",\r\n    API_SIGNUP:\"/signup\",\r\n    API_KEYS:\"/keys\",\r\n    API_JWT: \"/signin/jwt\"\r\n}\r\n    ","import { Subject, Observable, BehaviorSubject } from 'rxjs';\r\nimport { Message } from '../components/Types/GeneralTypes';\r\n\r\nconst subject = new Subject<Message>();\r\n\r\nexport function sendMessage(name: string, signal: boolean = true, data?: {}) {\r\n    subject.next({\r\n        name: name,\r\n        signal: signal,\r\n        data: data\r\n    });\r\n}\r\n\r\nexport function clearMessages() {\r\n    subject.next();\r\n}\r\n\r\nexport function receiveMessage(): Observable<Message> {\r\n    return subject.asObservable();\r\n}","import axios from \"axios\";\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport function httpGet(endpoint: string, headers: any) {\r\n    return axios.get(baseUrl + endpoint, headers)\r\n        // .then(function(response) {\r\n        //     return Promise.resolve(response);\r\n        // }\r\n    // )\r\n}\r\n\r\nexport function httpPost(endpoint: string, payload: any, headers: any) {\r\n    return axios.post(baseUrl + endpoint, payload, headers)\r\n    //     .then(function(response) {\r\n    //         return Promise.resolve(response);\r\n    //     }\r\n    // )\r\n}\r\n\r\nexport function httpPut(endpoint: string, payload: any, headers: any) {\r\n    return axios.put(baseUrl + endpoint, payload, headers)\r\n    //     .then(function(response) {\r\n    //         return Promise.resolve(response);\r\n    //     }\r\n    // )\r\n}\r\n\r\nexport function httpDelete(endpoint: string, headers: any) {\r\n    return axios.delete(baseUrl + endpoint, headers)\r\n    //     .then(function(response) {\r\n    //         return Promise.resolve(response);\r\n    //     }\r\n    // )\r\n}\r\n","import React, { Component } from 'react';\r\nimport './OakDialog.scss';\r\nimport { sendMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n    visible: boolean,\r\n    toggleVisibility: any,\r\n    small?: boolean\r\n}\r\n\r\ninterface State {\r\n}\r\n\r\nclass OakDialog extends Component<Props, State> {\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.props.visible !== nextProps.visible) {\r\n            if (nextProps.visible) {\r\n                sendMessage('dialog');\r\n                window.scrollTo(500, 0);\r\n            } else {\r\n                sendMessage('dialog', false);\r\n            }\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n      document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n      document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    escFunction = (event) => {\r\n        if(event.keyCode === 27) {\r\n          if (this.props.visible) {\r\n            this.props.toggleVisibility();\r\n          }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.small ? \"oak-dialog small\" : \"oak-dialog\"}>\r\n                <div className={(this.props.visible ? \"dialog show\" : \"dialog hide\")}>\r\n                    <div className={(this.props.visible ? \"container\": \"container hidetext\")}>\r\n                        <div className=\"dialog-header\" onClick={this.props.toggleVisibility}><i className=\"material-icons\">close</i><div className=\"text-esc\">esc</div></div>\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OakDialog;","import React from 'react';\r\nimport { TextField } from '@material-ui/core';\r\n\r\ninterface Props {\r\n    id: string,\r\n    label: string,\r\n    handleChange: any,\r\n    error?: boolean,\r\n    data: any,\r\n    rows?: number,\r\n    multiline?: boolean,\r\n    type?: string\r\n};\r\nfunction OakTextField(props: Props) {\r\n    const { id, label, handleChange, error, rows, multiline, data, type,  ...rest } = props;\r\n    return (\r\n        <TextField\r\n                id={id}\r\n                label={label}\r\n                name={id}\r\n                value={data[id]}\r\n                onChange={e => handleChange(e)}\r\n                margin=\"normal\"\r\n                variant=\"standard\"\r\n                fullWidth\r\n                error={error}\r\n                multiline={multiline}\r\n                rows={rows}\r\n                type={type}\r\n                {...rest}\r\n                />\r\n    )\r\n}\r\n\r\nexport default OakTextField;\r\n","export function isEmptyOrSpaces(str){\r\n    return str === null || str.match(/^ *$/) !== null;\r\n}\r\n\r\nexport function match(text, words) {\r\n    let found = false;\r\n    if (words) {\r\n        words.split(' ').forEach(word => {\r\n            if (text.match(new RegExp('(\\\\w*'+ word +'\\\\w*)','gi'))) {\r\n                found = true;\r\n            }\r\n        });\r\n    }\r\n    return found;\r\n}\r\n\r\nexport function sort(array, property, isReverseOrder) {\r\n    const result = array.sort(function(o1,o2){\r\n        if (isReverseOrder) {\r\n            return o1[property] > o2[property] ? -1 : o1[property] < o2[property] ? 1 : 0;\r\n        } else {\r\n            return o1[property] < o2[property] ? -1 : o1[property] > o2[property] ? 1 : 0;\r\n        }\r\n    });\r\n\r\n    return result;\r\n}","import React, { Component } from 'react';\r\nimport './OakDialog.scss';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport OakDialog from './OakDialog';\r\n\r\ninterface Props {\r\n    visible: boolean,\r\n    toggleVisibility: any,\r\n    action: any,\r\n    text?: string\r\n}\r\n\r\ninterface State {\r\n}\r\n\r\nclass OakPrompt extends Component<Props, State> {    \r\n    componentDidMount(){\r\n      document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n      document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    escFunction = (event) => {\r\n        if(event.keyCode === 27) {\r\n          if (this.props.visible) {\r\n            this.props.toggleVisibility();\r\n          }\r\n        }\r\n    }\r\n\r\n    action = () => {\r\n        this.props.action();\r\n        this.props.toggleVisibility();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <OakDialog small visible={this.props.visible} toggleVisibility={this.props.toggleVisibility}>\r\n                <div className=\"dialog-body typography-4 space-top-4 space-bottom-4\">\r\n                    {this.props.text ? this.props.text : \"Are you sure you want to continue?\"}\r\n                </div>\r\n                <div className=\"dialog-footer\">\r\n                    {this.props.children && this.props.children}\r\n                    {!this.props.children && \r\n                        <>\r\n                            <button onClick={this.props.toggleVisibility} className=\"default animate in right align-left\"><i className=\"material-icons\">close</i>No</button>\r\n                            <button onClick={this.action} className=\"primary animate out right align-right\"><i className=\"material-icons\">double_arrow</i>Yes</button>\r\n                        </>\r\n                    }\r\n                </div>\r\n            </OakDialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OakPrompt;","import React from 'react';\r\nimport './style.scss';\r\nimport cover from '../../images/cover.jpg';\r\nimport SearchBar from '../Ux/SearchBar';\r\nimport { constants } from '../Constants';\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\nimport { searchTextChangedEvent$, searchEvent$ } from '../../events/SearchEvent';\r\nimport { getBanner } from '../Tenant/TenantService';\r\nimport { httpGet, httpPost, httpPut } from \"../Lib/RestTemplate\";\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport OakDialog from '../Ux/OakDialog';\r\nimport OakTextField from '../Ux/OakTextField';\r\nimport { isEmptyOrSpaces } from '../Utils';\r\nimport OakPrompt from '../Ux/OakPrompt';\r\n\r\nconst pageYOffsetCutoff = 10;\r\n\r\ninterface Props {\r\n  setProfile: Function,\r\n  profile: any,\r\n  match: any,\r\n  authorization: Authorization,\r\n  history: any\r\n}\r\n\r\ninterface State {\r\n  banner: any,\r\n  prevScrollpos: number,\r\n  showMainSearchBar: boolean,\r\n  searchResults: any[],\r\n  isCreateRequestDialogOpen: boolean,\r\n  isNotLoggedInPromptOpen: boolean,\r\n  searchTitle: string,\r\n  searchDescription: string,\r\n  requestId?: string\r\n}\r\n\r\nexport default class Home extends React.Component<Props, State> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      banner: null,\r\n      prevScrollpos: window.pageYOffset,\r\n      showMainSearchBar: true,\r\n      searchTitle: '',\r\n      searchDescription: '',\r\n      isCreateRequestDialogOpen: false,\r\n      isNotLoggedInPromptOpen: false,\r\n      searchResults: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // sendMessage('navbar-transparency', true);\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n    this.props.setProfile({\r\n      ...this.props.profile,\r\n      tenant: this.props.match.params.tenant\r\n    })\r\n\r\n    searchEvent$.subscribe(searchText => this.search(searchText))\r\n  }\r\n\r\n  search = (searchText: string) => {\r\n    this.setState({\r\n      searchTitle: searchText,\r\n      requestId: undefined\r\n    })\r\n    httpPost('/deeplearning/' + \r\n    this.props.match.params.tenant + constants.API_URL_PREDICT, searchText,\r\n    {headers: {\r\n        Authorization: this.props.authorization.token\r\n    }}\r\n    ).then ((response) => {\r\n      let predictionMap: any = {};\r\n      response.data.prediction.forEach(element => {\r\n        predictionMap[element.rank] = element.label\r\n      });\r\n      httpGet(constants.API_URL_FAQ + '/' + \r\n      this.props.match.params.tenant + '/category/' + predictionMap[response.data.prediction.length - 1],\r\n        {\r\n          headers:{\r\n            Authorization: this.props.authorization.token\r\n          }\r\n        })\r\n        .then((faqs) => {\r\n          this.setState({\r\n            searchResults: faqs.data.data\r\n          });\r\n        })\r\n    }).catch(() => {})\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.handleScroll);\r\n    sendMessage('show-navbar-element', false);\r\n    searchTextChangedEvent$.next(\"\");\r\n    // sendMessage('navbar-transparency', false);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n      if (nextProps.authorization) {\r\n        getBanner(this.props.match.params.tenant,  {\r\n          headers: {\r\n              Authorization: nextProps.authorization.token\r\n          }\r\n        }).then ((response) => {\r\n          if (response.status === 200 && response.data) {\r\n            this.setState({banner: 'data:image/jpeg;base64,' + response.data});\r\n          } else {\r\n            this.setState({banner: cover});\r\n          }\r\n        }).catch(() => {\r\n          this.setState({banner: cover});\r\n        })\r\n      }\r\n  }\r\n\r\n  handleScroll = () => {\r\n    // const { prevScrollpos } = this.state;\r\n  \r\n    const currentScrollPos = window.pageYOffset;\r\n    const showMainSearchBar = currentScrollPos < pageYOffsetCutoff;\r\n\r\n    if (this.state.showMainSearchBar !== showMainSearchBar) {\r\n      if (!showMainSearchBar) {\r\n        // sendMessage('navbar-transparency', false);\r\n        sendMessage('show-navbar-element', true);\r\n      } else {\r\n        // sendMessage('navbar-transparency', true);\r\n        sendMessage('show-navbar-element', false);\r\n      }\r\n    }\r\n  \r\n    this.setState({\r\n      prevScrollpos: currentScrollPos,\r\n      showMainSearchBar\r\n    });\r\n  };\r\n\r\n  notHelpful = () => {\r\n    console.log(this.props.authorization);\r\n    if (this.props.authorization && this.props.authorization.token) {\r\n      this.toggleEditDialog();\r\n    } else {\r\n      this.toggleNotLoggedInPrompt();\r\n    }\r\n  }\r\n\r\n  toggleEditDialog = () => {\r\n      this.setState({\r\n          isCreateRequestDialogOpen: !this.state.isCreateRequestDialogOpen\r\n          // editDialogLabel: 'Add'\r\n      })\r\n  }\r\n\r\n  toggleNotLoggedInPrompt = () => {\r\n    this.setState({\r\n      isNotLoggedInPromptOpen: !this.state.isNotLoggedInPromptOpen\r\n    })\r\n  }\r\n\r\n  redirectToLogin = () => {\r\n    this.props.history.push(\"/\" + this.props.match.params.tenant + \"/login\");\r\n  }\r\n\r\n  handleChange = (event) => {\r\n      this.setState(\r\n          {\r\n              ...this.state,\r\n              [event.target.name]: event.target.value\r\n          }\r\n      )\r\n  }\r\n\r\n\r\n  addRequest = () => {\r\n    const that = this;\r\n    let request = {\r\n        title: this.state.searchTitle,\r\n        description: this.state.searchDescription,\r\n    }\r\n    if (isEmptyOrSpaces(request.title)) {\r\n        sendMessage('notification', true, {type: 'failure', message: 'Title is missing', duration: 5000});\r\n        return;\r\n    }\r\n\r\n    if (isEmptyOrSpaces(request.description)) {\r\n        sendMessage('notification', true, {type: 'failure', message: 'Description is missing', duration: 5000});\r\n        return;\r\n    }\r\n\r\n    httpPut(constants.API_URL_SR + '/' + \r\n    this.props.match.params.tenant + '/',\r\n    request,\r\n    {\r\n      headers: {\r\n        Authorization: this.props.authorization.token\r\n      }\r\n    })\r\n    .then((response) => {\r\n        if (response.status === 200) {\r\n            sendMessage('notification', true, {type: 'success', message: 'Request created [' + response.data._id + ']', duration: 10000});\r\n            this.toggleEditDialog();\r\n            this.setState({\r\n              requestId: response.data._id\r\n            })\r\n        }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home full\">\r\n        <OakDialog visible={this.state.isCreateRequestDialogOpen} toggleVisibility={this.toggleEditDialog}>\r\n            <div className=\"dialog-body\">\r\n                <OakTextField label=\"Title\" data={this.state} id=\"searchTitle\" handleChange={e => this.handleChange(e)} />\r\n                <OakTextField label=\"Description\" data={this.state} id=\"searchDescription\" handleChange={e => this.handleChange(e)} />\r\n            </div>\r\n            <div className=\"dialog-footer\">\r\n                <button onClick={this.toggleEditDialog} className=\"default animate in right align-left\"><i className=\"material-icons\">close</i>Cancel</button>\r\n                <button onClick={this.addRequest} className=\"primary animate out right align-right\"><i className=\"material-icons\">double_arrow</i>Create Service Request</button>\r\n            </div>\r\n        </OakDialog>\r\n        <OakPrompt action={this.redirectToLogin} visible={this.state.isNotLoggedInPromptOpen} toggleVisibility={this.toggleNotLoggedInPrompt} text=\"You are not logged in. Do you want to login to submit a service request?\" />\r\n          <div className='cover'>\r\n            <img src={this.state.banner} alt=\"Red dot\" />\r\n          </div>\r\n          {this.state.showMainSearchBar && <SearchBar />}\r\n\r\n          <div className='search-results'>\r\n            <div className=\"action-bar\">\r\n              <button className=\"primary animate in right align-left\">Helpful</button>\r\n              <button className=\"primary animate in right align-right\" onClick={this.notHelpful}>Not Helpful</button>\r\n            </div>\r\n            {this.state.searchResults && this.state.searchResults.map(item =>\r\n              <div key={item.question} className=\"result-record\">\r\n                <div className=\"question typography-4 space-bottom-2\">{item.question}</div>\r\n                <div className=\"answer typography-5\">{item.answer}</div>\r\n              </div>\r\n            )}\r\n            {this.state.requestId &&\r\n              <div className=\"request-created\">\r\n                <div className=\"request-icon\"><i className=\"material-icons\">file_copy</i></div>\r\n                <div className=\"request-id typography-4\">{this.state.requestId}</div>\r\n                <div className=\"request-message typography-5\">Your request has been created and an email has been sent to your inbox with details</div>\r\n              </div>\r\n            }\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import { httpGet, httpPost, httpPut } from \"../Lib/RestTemplate\";\r\nimport { constants } from '../Constants';\r\n\r\nexport function createTenant(data) {\r\n    return httpPost(constants.API_URL_TENANT_CREATE, data, null)\r\n        .then(function(response) {\r\n            return Promise.resolve(response);\r\n        })\r\n}\r\n\r\nexport function sentTenantUrl(data) {\r\n    return httpPost(constants.API_TENANT_URL, data, null)\r\n        .then(function(response) {\r\n            return Promise.resolve(response.status);\r\n        })\r\n}\r\n    \r\n\r\n\r\nexport function getTenant(tenantName, headers) {\r\n    return httpGet(constants.API_URL_TENANT + '/' + tenantName, headers)\r\n        .then(function(response) {\r\n            return Promise.resolve(response);\r\n        })\r\n}\r\n\r\n\r\nexport function getBanner(tenantName, headers) {\r\n    return httpGet(constants.API_URL_TENANT_BANNER + '/' + tenantName, headers)\r\n        .then(function(response) {\r\n            return Promise.resolve(response);\r\n        })\r\n}","import { GET_AUTH, REMOVE_AUTH, ADD_AUTH } from './types';\r\n\r\nexport const getAuth = () => dispatch => {\r\n    dispatch({\r\n        type: GET_AUTH\r\n    });\r\n}\r\n\r\nexport const addAuth = (data) => dispatch => {\r\n    dispatch({\r\n        type: ADD_AUTH,\r\n        payload: data\r\n    });\r\n}\r\n\r\nexport const removeAuth = () => dispatch => {\r\n    dispatch({\r\n        type: REMOVE_AUTH\r\n    });\r\n}","import React from 'react';\r\nimport './OakText.scss';\r\n\r\ninterface Props {\r\n    label: string,\r\n    id: string,\r\n    data: any,\r\n    type?: string,\r\n    handleChange: any,\r\n    errorFields?: any,\r\n    disabled?: boolean\r\n}\r\nfunction OakText(props: Props) {\r\n    return (\r\n        <div className=\"oak-text-field\">\r\n            <label>{props.label}</label>\r\n            <input disabled={props.disabled} autoComplete=\"off\"\r\n                className={(props.errorFields && props.errorFields[props.id] ? \"error\" : \"\") + (props.disabled ? \" disabled\" : \"\")}\r\n                type={props.type ? props.type : \"text\"} name={props.id} value={props.data[props.id]} onChange={props.handleChange}></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nOakText.propTypes = {\r\n};\r\n\r\nexport default OakText;\r\n","import { httpGet, httpPost, httpPut } from \"../Lib/RestTemplate\";\r\nimport sjcl from 'ioak-sjcl';\r\nimport CryptoJS from 'crypto-js';\r\nimport { constants } from '../Constants';\r\n\r\n\r\nexport function preSignup(data) {\r\n    return httpGet(constants.API_URL+data.name+constants.API_KEYS, null)\r\n        .then(function(response) {\r\n          return Promise.resolve(response);\r\n        })\r\n}\r\n\r\nexport function signup(data) {\r\n    return httpPost(constants.API_URL+data.tenantName+constants.API_SIGNUP, {\r\n        email: data.email,\r\n        problem: encrypt(data.password, data.solution, data.salt),\r\n        solution: data.solution\r\n        }, null)\r\n        .then(function(response) {\r\n            return Promise.resolve(response.status);\r\n        })\r\n}\r\n\r\nexport function createTenant(data) {\r\n    const formData = new FormData();\r\n    formData.append('tenantName', data.tenantName);\r\n    formData.append('email', data.email);\r\n    formData.append('jwtPassword', data.jwtPassword);\r\n    formData.append('problem', encrypt(data.password, data.solution, data.salt));\r\n    formData.append('solution', data.solution);\r\n    if(data.banner) {\r\n        formData.append('banner', data.banner, 'banner.jpg');\r\n    }\r\n    return httpPost(constants.API_URL_TENANT_CREATE, formData, {'Content-Type': 'multipart/form-data'})\r\n        .then(function(response) {\r\n            return Promise.resolve(response);\r\n        })\r\n}\r\n\r\nexport function preSignin(data) {\r\n    return httpGet(constants.API_URL+data.name+constants.API_KEYS + '/' + data.email, null)\r\n        .then(response => Promise.resolve(response))\r\n        .catch(error => Promise.resolve(error.response))\r\n}\r\n\r\nexport function signin(data, problem) {\r\n    try {\r\n        let solution = decrypt(data.password, JSON.stringify(problem));\r\n        return httpPost(constants.API_URL+data.name+constants.API_SIGNIN, {\r\n            email: data.email, \r\n            solution: solution\r\n            }, null)\r\n            .then(function(response) {\r\n                return Promise.resolve(response);\r\n            })\r\n        \r\n    } catch(error) {\r\n        if (error.message === \"ccm: tag doesn't match\") {\r\n            return Promise.resolve({\r\n                status: 401\r\n            });\r\n        } else {\r\n            return Promise.resolve(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function signinWithJwt(data){\r\n\r\n    return httpPost(constants.API_URL + data.tenantName + constants.API_JWT, {\r\n        jwtToken: data.jwt\r\n    }, null)\r\n        .then(function(response){\r\n            return Promise.resolve(response);\r\n        });\r\n}\r\n\r\nexport function sentPasswordChangeEmail(data, type) {\r\n\r\n    return httpPost(constants.API_URL_CODE, data, null)\r\n        .then(function(response) {\r\n            return Promise.resolve(response.status);\r\n        })\r\n}\r\n\r\nexport function resetPassword(data, type) {\r\n\r\n    return httpGet(constants.API_URL_PRESIGNUP, null)\r\n        .then(function(response) {\r\n            if (response.status === 200) {\r\n                let newData = {};\r\n                if (type && type === 'password') {\r\n                    newData = {\r\n                        problem: encrypt(data.password, response.data.solution, response.data.salt),\r\n                        solution: response.data.solution,\r\n                        resetCode: data.resetCode\r\n                    }\r\n\r\n                }\r\n\r\n                return httpPost(constants.API_URL_RESET, newData, null)\r\n                    .then(function(response) {\r\n                        return Promise.resolve(response.status);\r\n                    })\r\n\r\n\r\n            }\r\n        })\r\n}\r\n\r\n\r\n\r\nfunction encrypt(password, message, salt) {\r\n    const config = {\r\n        cipher: 'aes',\r\n        iter: '12000',\r\n        ks: 256,\r\n        salt: CryptoJS.enc.Base64.stringify((CryptoJS.enc.Utf8.parse(salt)))\r\n    }\r\n    return sjcl.encrypt(password, message, config);\r\n}\r\n\r\nfunction decrypt(password, ciphertext) {\r\n    return sjcl.decrypt(password, ciphertext);\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport {withCookies} from 'react-cookie';\r\nimport './Login.scss';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport OakText from '../Ux/OakText';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport {signinWithJwt, signin, preSignin,sentPasswordChangeEmail, preSignup, signup} from './AuthService';\r\nimport {isEmptyOrSpaces} from \"../Utils\";\r\n\r\nconst queryString = require('query-string');\r\n\r\ninterface Props {\r\n    setProfile: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    cookies: any,\r\n    history: any,\r\n    profile:any,\r\n    match: any,\r\n    location:any,\r\n    authorization: Authorization\r\n}\r\n\r\ninterface State {\r\n    newuser: boolean,\r\n    name: string,\r\n    email: string,\r\n    password: string\r\n}\r\n\r\nclass Login extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newuser: false,\r\n            name:'',\r\n            email:'',\r\n            password:''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.location.search){\r\n            const query = queryString.parse(this.props.location.search)\r\n            if (query && query.type === 'signup') {\r\n                this.setState({\r\n                    newuser : true\r\n                })\r\n            }\r\n            if (query && query.jwt) {\r\n                this.loginViaJwt(query.jwt);\r\n            }\r\n        }\r\n\r\n        this.props.setProfile({\r\n            ...this.props.profile,\r\n            tenant: this.props.match.params.tenant\r\n        })\r\n    }\r\n\r\n    loginViaJwt = (jwt: string) => {\r\n        signinWithJwt({\r\n            tenantName: this.props.match.params.tenant,\r\n            jwt:jwt\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 200) {\r\n                sendMessage('notification', true, {message: 'Signed In successfully', type: 'success', duration: 3000});\r\n                this.success(response.data);\r\n            } else if (response.status === 500) {\r\n                sendMessage('notification', true, {message: 'Signature verification failed', type: 'failure', duration: 3000});\r\n            } else {\r\n                sendMessage('notification', true, {message: 'Unknown response from server. Please try again or at a later time', type: 'failure', duration: 3000});\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            sendMessage('notification', true, {'type': 'failure', message: 'Unknown error. Please try again or at a later time', duration: 3000});\r\n        });\r\n    }\r\n\r\n    login = (event) => {\r\n        event.preventDefault();\r\n        sendMessage('notification', false);\r\n        sendMessage('spinner');\r\n        if (this.state.email && this.state.password) {\r\n            preSignin({\r\n                name:this.props.profile.tenant,\r\n                email:this.state.email})\r\n                .then((response) => {\r\n                    if (response.status === 200) {\r\n                    signin({\r\n                        name:this.props.profile.tenant,\r\n                        email: this.state.email,\r\n                        password: this.state.password\r\n                        }, response.data)\r\n                        .then((response) => {\r\n                            if (response.status === 200) {\r\n                                sendMessage('notification', true, {message: 'Signed In successfully', type: 'success', duration: 3000});\r\n                                this.success(response.data);\r\n                            } else if (response.status === 401) {\r\n                                sendMessage('notification', true, {message: 'Incorrect passphrase', type: 'failure', duration: 3000});\r\n                            } else {\r\n                                sendMessage('notification', true, {message: 'Unknown response from server. Please try again or at a later time', type: 'failure', duration: 3000});\r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                            sendMessage('notification', true, {'type': 'failure', message: 'Unknown error. Please try again or at a later time', duration: 3000});\r\n                        })\r\n                } else if (response.status === 404) {\r\n                    sendMessage('notification', true, {message: 'User name does not exist', type: 'failure', duration: 3000});\r\n                }\r\n            })\r\n\r\n            \r\n        } else {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Username/password cannot be empty', duration: 3000});\r\n        }\r\n    }\r\n\r\n    \r\n    signup =(event) =>{\r\n        event.preventDefault()\r\n        const that = this\r\n        sendMessage('notification', false)\r\n        sendMessage('spinner')\r\n        if(this.state.name && this.state.password && this.state.email){\r\n            if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.state.email))) {\r\n                sendMessage('notification', true, {type: 'failure', message: 'Email ID is invalid', duration: 3000});\r\n                return;\r\n            }\r\n            preSignup({name:that.props.profile.tenant}).then((response) =>{\r\n                if(response.status ===200){\r\n                    signup({\r\n                        tenantName: that.props.profile.tenant,\r\n                        email: that.state.email,\r\n                        password: that.state.password,\r\n                        solution: response.data.solution,\r\n                        salt: response.data.salt\r\n                    })\r\n                    .then(function(status){\r\n                        if(status===200){\r\n                            sendMessage('notification', true, {'type': 'success', message: 'Your account has been created. You can login now', duration: 3000});\r\n                            that.setState({\r\n                                email:'',\r\n                                password:''\r\n                            }); \r\n                            that.toggle();\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        sendMessage('notification', true, {'type': 'failure', message: 'Unknown error. Please try again or at a later time', duration: 3000});\r\n                    });\r\n                }\r\n            });\r\n        }  else if (!this.state.name) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Name cannot be empty', duration: 3000});\r\n        } else if (!this.state.email) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Email cannot be empty', duration: 3000});\r\n        } else if (!this.state.password) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Password cannot be empty', duration: 3000});\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        this.props.removeAuth();\r\n        this.props.cookies.remove('isAuth');\r\n    }\r\n\r\n    success = (data) => {\r\n        this.props.addAuth({\r\n            isAuth: true,\r\n            token: data.token,\r\n            secret: data.secret,\r\n            name: data.name\r\n\r\n        });\r\n        sendMessage('loggedin', true);\r\n        console.log(data);\r\n        this.props.cookies.set('isAuth', true);\r\n        this.props.cookies.set('token', data.token);\r\n        this.props.cookies.set('secret', data.secret);\r\n        this.props.cookies.set('name', data.name);\r\n        this.props.cookies.set('email', data.email);\r\n        this.props.history.push(\"/\");    \r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            newuser: !this.state.newuser\r\n        });\r\n    }\r\n\r\n    handleChange= (event) => {\r\n        this.setState(\r\n            {\r\n                ...this.state,\r\n                [event.currentTarget.name]: event.currentTarget.value\r\n            }\r\n        )\r\n    }\r\n\r\n    sentEmailWithCode = () => {\r\n        if (isEmptyOrSpaces(this.state.email)) {\r\n            sendMessage('notification', true, {message: 'Email cannot be empty', type: 'failure', duration: 5000});\r\n            return;\r\n        }\r\n\r\n        this.sentPasswordChangeEmail('password');\r\n\r\n    }\r\n\r\n    sentPasswordChangeEmail = (type) => {\r\n        const min = 1;\r\n        const max = 100;\r\n        const rand = min + Math.random() * (max - min);\r\n        sentPasswordChangeEmail({\r\n            email: this.state.email,\r\n            resetCode: rand\r\n        }, type)\r\n            .then((response: any) => {\r\n                if (response === 200) {\r\n                    if (type === 'password') {\r\n                        sendMessage('notification', true, {message: 'Password sent successfully', type: 'success', duration: 3000});\r\n                    }\r\n                } else {\r\n                    sendMessage('notification', true, {'type': 'failure', message: 'Invalid Email error', duration: 3000});\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                sendMessage('notification', true, {'type': 'failure', message: 'Bad request', duration: 3000});\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"login\">\r\n                {!this.state.newuser && <div className=\"container\">\r\n                    <form method=\"GET\" onSubmit={this.login} noValidate>\r\n                        \r\n                        <div className=\"form\">\r\n                            <OakText label=\"E-mail\" id=\"email\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                            <OakText label=\"Password\" type=\"password\"  id=\"password\"   data={this.state} handleChange={e => this.handleChange(e)} />\r\n                        </div>\r\n                        <br />\r\n                        <button className=\"primary animate out right\"  onClick={this.login}>Sign In</button>\r\n                        <br /> <br />\r\n                        Don't have an account? <button className=\"default animate right small\"  onClick={this.toggle}>Sign Up</button>\r\n                    </form>\r\n                    <br />\r\n                    <button className=\"default animate right small\" onClick={this.sentEmailWithCode}>Forgot password ?</button>\r\n                </div>}\r\n\r\n                {this.state.newuser && <div className=\"container\">\r\n                    <form method=\"GET\" onSubmit={this.signup} noValidate>\r\n                        <h1>Sign Up</h1>\r\n                        <div className=\"form\">\r\n                        <OakText label=\"Name\" id=\"name\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                        <OakText label=\"E-mail\" id=\"email\" data={this.state} handleChange ={e=> this.handleChange(e)} />\r\n                        <OakText label=\"Password\" type=\"password\" id=\"password\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                        <OakText label=\"Repeat Password\" type=\"password\"  id=\"repeatpassword\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                        </div>\r\n                        <br />\r\n                        <button className=\"primary block\" onClick={this.signup}>Create Account</button>\r\n                        <br /> <br />\r\n                        Already have an account? <button className=\"secondary block\" onClick={this.toggle}>Sign In</button> \r\n                    </form>\r\n                </div>\r\n                }\r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authorization: state.authorization\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(withCookies(Login));","import React from 'react';\r\nimport './style.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default class Landing extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"space-bottom-4\">\r\n          <h3>Mirror rorriM</h3>\r\n          <p><em><b>Queen</b></em> Magic Mirror on the wall, who now is the fairest one of all?</p>\r\n          <p><em><b>Magic Mirror</b></em> Over the seven jewelled hills, beyond the seventh fall, in the cottage of the seven dwarfs, dwells Snow White, fairest one of all.</p>\r\n          <p><em><b>Queen</b></em> Snow White lies dead in the forest.  The huntsman has brought me proof. [holds up her opened box] Behold, her heart.</p>\r\n          <p><em><b>Magic Mirror</b></em> Snow White still lives, the fairest in the land. 'Tis the heart of a pig you hold in your hand.</p>\r\n          <p><em><b>Queen</b></em> [repulsed] The heart of a pig?! Then I've been tricked!</p>\r\n        </div>\r\n        <div className=\"action\">\r\n          <NavLink to=\"/tenant\" className=\"navitem\" activeClassName=\"active\"><button className=\"primary animate out right\">Create Tenant</button></NavLink>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth } from '../../actions/AuthActions';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n  authorization: Authorization,\r\n  getAuth: Function,\r\n  path: string,\r\n  render: any\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nclass PrivateRoute extends Component<Props, State> {\r\n  componentWillMount() {\r\n    console.log(this.props);\r\n    this.props.getAuth();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.authorization.isAuth && <Route path={this.props.path} render={this.props.render} />}\r\n        {/* {!this.props.authorization.isAuth && !this.props.path.endsWith('/home') && <Redirect to={{pathname: \"/home\"}} />} */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  authorization: state.authorization\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth })(PrivateRoute);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport PropTypes from 'prop-types';\r\nimport {withCookies, ReactCookieProps} from 'react-cookie';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\n\r\ninterface Props extends ReactCookieProps {\r\n    authorization: Authorization,\r\n    addAuth: Function,\r\n    getAuth: Function,\r\n    removeAuth: Function,\r\n    cookies: any\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nclass AuthInit extends Component<Props, State> {\r\n    componentWillMount() {\r\n        if (!this.props.authorization.isAuth && this.props.cookies.get('isAuth')) {\r\n            this.props.addAuth({\r\n                isAuth: true,\r\n                token: this.props.cookies.get('token'),\r\n                secret: this.props.cookies.get('secret'),\r\n                name: this.props.cookies.get('name')\r\n            });\r\n        }\r\n        this.props.getAuth();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authorization: state.authorization\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(withCookies(AuthInit));","import { GET_PROFILE, SET_PROFILE } from './types';\r\n\r\nexport const getProfile = () => dispatch => {\r\n    dispatch({\r\n        type: GET_PROFILE\r\n    });\r\n}\r\n\r\nexport const setProfile = (payload) => dispatch => {\r\n    dispatch({\r\n        type: SET_PROFILE,\r\n        payload: payload\r\n    });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { receiveMessage } from '../../events/MessageService';\r\nimport { Message } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n}\r\n\r\ninterface State {\r\n    backdrop: string\r\n}\r\n\r\nclass Backdrop extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            backdrop: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe(\r\n            message => {\r\n                if (message.name === 'dialog') {\r\n\r\n                }\r\n            }\r\n        )\r\n        // if (nextProps.event && nextProps.event.name === 'dialog') {\r\n        //     if (nextProps.event.signal) {\r\n        //         this.setState({\r\n        //             backdrop: 'backdrop-fade'\r\n        //         })\r\n        //     } else {\r\n        //         this.setState({\r\n        //             backdrop: ''\r\n        //         })\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.backdrop}></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Backdrop;","import React, { Component } from 'react';\r\nimport './style.scss';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n}\r\n\r\ninterface State {\r\n    notification: any,\r\n    spinner: boolean,\r\n    lastNotificationType?: string\r\n}\r\n\r\nclass Notification extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            spinner: false,\r\n            notification: null,\r\n            lastNotificationType: undefined\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        receiveMessage().subscribe(message => {\r\n            if (message.name === 'notification') {\r\n                if (!message.signal) {\r\n                    this.setState({\r\n                        notification: null,\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        notification: message.data,\r\n                        lastNotificationType: message.data.type,\r\n                        spinner: false\r\n                    })\r\n                    \r\n                    if (message.data && message.data.duration) {\r\n                        setTimeout(() => {\r\n                            sendMessage('notification', false);\r\n                        }, message.data.duration);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (message.name === 'spinner') {\r\n                this.setState({\r\n                    spinner: message.signal\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    processNextProps(nextProps) {\r\n        if (nextProps.event && nextProps.event.name === 'spinner') {\r\n            this.setState({\r\n                spinner: nextProps.event.signal\r\n            })\r\n        }\r\n\r\n        if (nextProps.event && nextProps.event.name === 'notification') {\r\n            if (!nextProps.event.signal) {\r\n                this.setState({\r\n                    notification: null,\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    notification: nextProps.event.data,\r\n                    lastNotificationType: nextProps.event.data.type,\r\n                    spinner: false\r\n                })\r\n                \r\n                if (nextProps.event.data.duration) {\r\n                    setTimeout(() => {\r\n                        // this.props.sendEvent('notification', false);\r\n                    }, nextProps.event.data.duration);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            {/* {this.state.notification && <div className={\"notification \" + this.state.notification.type}><div className=\"message\">{this.state.notification.message}</div></div>} */}\r\n            {<div className={\"notification \" + (this.state.notification ? \" show \" + this.state.notification.type : (\" hide \" + this.state.lastNotificationType))}><div className=\"message\">{this.state.notification? this.state.notification.message : \"\"}</div></div>}\r\n            {/* {this.state.spinner && <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>} */}\r\n            {/* {this.state.spinner && <div className=\"lds-facebook\"><div></div><div></div><div></div></div>} */}\r\n            {this.state.spinner && <div className=\"lds-dual-ring\"></div>}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Notification;","import React, { Component } from 'react';\r\n\r\nimport './style.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n    authorization: Authorization,\r\n    profile: Profile\r\n}\r\n\r\ninterface State {\r\n    menu: boolean\r\n}\r\n\r\nclass Links extends Component<Props, State> {\r\n    toggleMenu = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"links\">\r\n                {this.props.authorization.isAuth &&\r\n                    <>\r\n                    <NavLink to={\"/\" + this.props.profile.tenant + \"/home\"} className=\"navitem\" activeClassName=\"active\">Home</NavLink>\r\n                    <NavLink to={\"/\" + this.props.profile.tenant + \"/faq\"} className=\"navitem\" activeClassName=\"active\">FAQ</NavLink>\r\n                    <NavLink to={\"/\" + this.props.profile.tenant + \"/servicerequests\"} className=\"navitem\" activeClassName=\"active\">ServiceRequests</NavLink>\r\n                    <NavLink to={\"/\" + this.props.profile.tenant + \"/settings\"} className=\"navitem\" activeClassName=\"active\">Settings</NavLink>\r\n                    </>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Links;","import React, { Component } from 'react';\r\n\r\nimport './style.scss';\r\nimport mirror_white from '../../images/mirror_white.svg';\r\nimport mirror_black from '../../images/mirror_black.svg';\r\nimport Links from './Links';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\n// import SearchBar from '../Ux/SearchBar';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\nimport SearchBar from '../Ux/SearchBar';\r\n\r\ninterface Props {    \r\n    sendEvent: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    authorization: Authorization\r\n    getProfile: Function,\r\n    profile: Profile,\r\n    login: Function,\r\n    transparent: boolean,\r\n    logout: Function,\r\n    toggleSettings: any\r\n}\r\n\r\ninterface State {\r\n    showSettings: boolean,\r\n    showSearchBar: boolean\r\n}\r\n\r\nclass Desktop extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.state = {\r\n            showSearchBar: false,\r\n            showSettings: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe(message => {\r\n            if (message.name === 'show-navbar-element') {\r\n                this.setState({\r\n                    showSearchBar: message.signal\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    signin = (type) => {\r\n        this.props.login(type);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={(this.props.transparent ? \"navbar desktop transparent\" : \"navbar desktop\")}>\r\n                <div className=\"left\">\r\n                    {!this.props.transparent && this.props.profile.theme === 'theme_light' && <img className=\"logo\" src={mirror_white} alt=\"Curate logo\" />}\r\n                    {(this.props.transparent || this.props.profile.theme === 'theme_dark') && <img className=\"logo\" src={mirror_white} alt=\"Curate logo\" />}\r\n                    <Links authorization={this.props.authorization} profile={this.props.profile}/>\r\n                    {this.state.showSearchBar && <SearchBar alt />}\r\n                </div>\r\n                <div className=\"right\">\r\n                    <div className=\"action\">\r\n                        {/* <button className=\"default disabled small\" onClick={this.props.toggleSettings}><i className=\"material-icons\">palette</i>Theme</button> */}\r\n                        {this.props.authorization.isAuth && \r\n                            <button className=\"primary animate in alt right align-left small\" onClick={this.props.toggleSettings}><i className=\"material-icons\">brush</i>Action 1</button>}\r\n                        {this.props.authorization.isAuth && \r\n                            <button className=\"primary animate out alt right align-right small\" onClick={this.props.logout()}><i className=\"material-icons\">power_settings_new</i>Logout</button>}\r\n                        {!this.props.authorization.isAuth && \r\n                            <button className=\"primary animate in alt right align-left small\" onClick={() => this.signin('signin')}><i className=\"material-icons\">person</i>Login</button>}\r\n                        {!this.props.authorization.isAuth && \r\n                            <button className=\"primary animate in alt right align-right small\" onClick={() => this.signin('signup')}><i className=\"material-icons\">person_add</i>Signup</button>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Desktop;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './style.scss';\r\nimport mirror_white from '../../images/mirror_white.svg';\r\nimport mirror_white_small from '../../images/mirror_white_small.svg';\r\nimport mirror_black from '../../images/mirror_black.svg';\r\nimport Links from './Links';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport SearchBar from '../Ux/SearchBar';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\n// import SearchBar from '../Ux/SearchBar';\r\n\r\ninterface Props {    \r\n    sendEvent: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    authorization: Authorization\r\n    getProfile: Function,\r\n    profile: Profile,\r\n    login: Function,\r\n    transparent: boolean,\r\n    logout: Function,\r\n    toggleSettings: any\r\n}\r\n\r\ninterface State {\r\n    menu: boolean,\r\n    showSearchBar: boolean\r\n}\r\n\r\nclass Mobile extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.state = {\r\n            showSearchBar: false,\r\n            menu: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe(message => {\r\n            if (message.name === 'show-navbar-element') {\r\n                this.setState({\r\n                    showSearchBar: message.signal\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    signin = (type) => {\r\n        this.props.login(type);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className={(this.props.transparent ? \"navbar mobile transparent\" : \"navbar mobile\")}>\r\n                <div className=\"left\">\r\n                    {!this.state.showSearchBar && !this.props.transparent && this.props.profile.theme === 'theme_light' && <img className=\"logo\" src={mirror_white} alt=\"Mirror logo\" />}\r\n                    {!this.state.showSearchBar && (this.props.transparent || this.props.profile.theme === 'theme_dark') && <img className=\"logo\" src={mirror_white} alt=\"Mirror logo\" />}\r\n                    {this.state.showSearchBar && !this.props.transparent && this.props.profile.theme === 'theme_light' && <img className=\"logo\" src={mirror_white_small} alt=\"Mirror logo\" />}\r\n                    {this.state.showSearchBar && (this.props.transparent || this.props.profile.theme === 'theme_dark') && <img className=\"logo\" src={mirror_white_small} alt=\"Mirror logo\" />}\r\n                    {this.state.showSearchBar && <SearchBar alt />}\r\n                    {/* links */}\r\n                </div>\r\n                <div className=\"right\">\r\n                    {/* <div className=\"settings-icon\" onClick={this.props.toggleSettings}><i className=\"material-icons\">settings</i></div> */}\r\n                    <div className={(this.state.menu ? \"menu active\" : \"menu\")} onClick={this.toggleMenu}><div></div></div>\r\n                    {/* action login */}\r\n                </div>\r\n            </div>\r\n            <div className={(this.state.menu ? \"slider show\" : \"slider hide\")} onClick={this.toggleMenu}>\r\n                <div className={(this.state.menu ? \"container\": \"container hidetext\")} onClick={this.toggleMenu}>\r\n                    <div className=\"action\">\r\n                        <div className=\"settings-icon\" onClick={this.props.toggleSettings}>\r\n                            {this.props.authorization.isAuth && <button className=\"invert animate alt small\" onClick={this.props.toggleSettings}><i className=\"material-icons\">brush</i>Action 1</button>}\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                            {this.props.authorization.isAuth && <button className=\"invert animate alt small\" onClick={this.props.logout()}><i className=\"material-icons\">power_settings_new</i>Logout</button>}\r\n                            {!this.props.authorization.isAuth && <button className=\"invert animate alt small left\" onClick={() => this.signin('signin')}><i className=\"material-icons\">person</i>Login</button>}\r\n                            {!this.props.authorization.isAuth && <button className=\"invert animate alt small right\" onClick={() => this.signin('signup')}><i className=\"material-icons\">person_add</i>Signup</button>}\r\n                        </div>\r\n                    </div>\r\n                    <Links authorization={this.props.authorization} profile={this.props.profile}/>\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Mobile;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {withRouter} from 'react-router'\r\nimport { getProfile, setProfile } from '../../actions/ProfileActions';\r\nimport {withCookies} from 'react-cookie';\r\n\r\nimport './style.scss';\r\nimport Desktop from './Desktop';\r\nimport Mobile from './Mobile';\r\n\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\n\r\ninterface Props {    \r\n    sendEvent: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    authorization: Authorization,\r\n    getProfile: Function,\r\n    setProfile: Function,\r\n    profile: Profile,\r\n    login: Function,\r\n    transparent: boolean,\r\n    logout: Function,\r\n    toggleSettings: any,\r\n    history: any,\r\n    cookies: any,\r\n    location: any,\r\n    match: any\r\n}\r\n\r\ninterface State {\r\n    visible: boolean,\r\n    mobilemenu: string,\r\n    chooseTheme: boolean,\r\n    showSettings: boolean,\r\n    transparentNavBar: boolean,\r\n    firstLoad: boolean\r\n}\r\n\r\nclass Navigation extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.state = {\r\n            visible: false,\r\n            mobilemenu: 'hide',\r\n            chooseTheme: false,\r\n            showSettings: false,\r\n            transparentNavBar: false,\r\n            firstLoad: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe(message => {\r\n            if (message.name === 'navbar-transparency') {\r\n                this.setState({\r\n                    transparentNavBar: message.signal\r\n                })\r\n            }\r\n            if (message.name === 'loggedin') {\r\n                // this.props.reloadProfile(nextProps.authorization);\r\n                this.setState({\r\n                    firstLoad: false\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.state.firstLoad && nextProps.authorization && nextProps.authorization.isAuth) {\r\n            // this.props.reloadProfile(nextProps.authorization);\r\n            this.setState({\r\n                firstLoad: false\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleDarkMode = () => {\r\n        if (this.props.profile.theme === 'theme_dark') {\r\n            this.props.setProfile({\r\n                ...this.props.profile,\r\n                theme: 'theme_light'\r\n            })   \r\n        } else  {\r\n            this.props.setProfile({\r\n                ...this.props.profile,\r\n                theme: 'theme_dark'\r\n            })   \r\n        }\r\n    }\r\n\r\n    changeTextSize = (size) => {\r\n        this.props.setProfile({\r\n            ...this.props.profile,\r\n            textSize: size\r\n        })\r\n    }\r\n\r\n    changeThemeColor = (color) => {\r\n        this.props.setProfile({\r\n            ...this.props.profile,\r\n            themeColor: color\r\n        })\r\n    }\r\n\r\n    login = (type) => {\r\n        this.props.history.push('/' + this.props.profile.tenant + '/login?type=' + type);\r\n    }\r\n\r\n    toggleSettings = () => {\r\n        this.setState({\r\n            showSettings: !this.state.showSettings\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"nav\">\r\n                <Desktop {...this.props} logout={this.props.logout} login={this.login} toggleSettings={this.toggleSettings} transparent={this.state.transparentNavBar} />\r\n                <Mobile {...this.props} logout={this.props.logout} login={this.login} toggleSettings={this.toggleSettings} transparent={this.state.transparentNavBar} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProfile, setProfile })(withCookies(withRouter(Navigation)));","import React from 'react';\r\nimport './style.scss';\r\nimport OakText from '../Ux/OakText';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport { sentTenantUrl } from './TenantService'\r\nimport {preSignup, createTenant } from '../Auth/AuthService'\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport { isEmptyOrSpaces } from '../Utils';\r\n\r\ninterface Props {\r\n  getProfile: Function,\r\n  profile: Profile,\r\n  history: any\r\n}\r\ninterface State {\r\n  name: string,\r\n  email: string,\r\n  pageNo: number,\r\n  password: string,\r\n  repeatPassword: string,\r\n  jwtPassword:string,\r\n  banner: any,\r\n  created: boolean,\r\n  errorFields: {\r\n    name: boolean,\r\n    email: boolean,\r\n    password: boolean,\r\n    repeatPassword: boolean,\r\n    jwtPassword:boolean\r\n  }\r\n}\r\nexport default class Tenant extends React.Component<Props, State> {\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.props.getProfile();\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      repeatPassword: '',\r\n      jwtPassword:'',\r\n      banner: null,\r\n      pageNo: 1,\r\n      created: false,\r\n      errorFields: {\r\n        name: false,\r\n        email: false,\r\n        password: false,\r\n        repeatPassword: false,\r\n        jwtPassword: false\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n      this.setState(\r\n          {\r\n              ...this.state,\r\n              [event.currentTarget.name]: event.currentTarget.value,\r\n              errorFields: {\r\n                ...this.state.errorFields,\r\n                [event.currentTarget.name]: false\r\n              }\r\n          }\r\n      )\r\n  }\r\n\r\n  sentTenantUrl =() =>{\r\n    sentTenantUrl({\r\n      name: this.state.name,\r\n      })\r\n      .then((response: any) => {\r\n          if (response === 200) {\r\n            sendMessage('notification', true, {message: 'Password sent successfully', type: 'success', duration: 3000});\r\n          } else {\r\n            sendMessage('notification', true, {'type': 'failure', message: 'Invalid Email error', duration: 3000});\r\n          }\r\n      })\r\n      .catch((error) => {\r\n          sendMessage('notification', true, {'type': 'failure', message: 'Bad request', duration: 3000});\r\n      })\r\n  }\r\n\r\n  clearError() {\r\n    this.setState({\r\n      errorFields: {\r\n        name: false,\r\n        email: false,\r\n        password: false,\r\n        repeatPassword: false,\r\n        jwtPassword:false\r\n      }\r\n    })\r\n  }\r\n\r\n  setError(fieldName) {\r\n    this.setState({\r\n      errorFields: {\r\n        ...this.state.errorFields,\r\n        [fieldName]: true\r\n      }\r\n    })\r\n  }\r\n\r\n  validate() {\r\n    if (isEmptyOrSpaces(this.state.name)) {\r\n      this.setError('name');\r\n      sendMessage('notification', true, {type: 'failure', message: 'Tenant name cannot be empty', duration: 3000});\r\n      return false;\r\n    }\r\n    if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.state.email))) {\r\n      this.setError('email');\r\n      sendMessage('notification', true, {type: 'failure', message: 'Email ID is invalid', duration: 3000});\r\n      return false;\r\n    } \r\n    \r\n    if (isEmptyOrSpaces(this.state.password)){\r\n      this.setError('password');\r\n      sendMessage('notification', true, {'type': 'failure', message: 'Password cannot be empty', duration: 3000});\r\n      return false;\r\n    }\r\n\r\n    if (this.state.password !== this.state.repeatPassword){\r\n      this.setError('repeatPassword');\r\n      sendMessage('notification', true, {'type': 'failure', message: 'Password and repeat password should be same', duration: 3000});\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  submit = (event) => {\r\n    event.preventDefault();\r\n    sendMessage('spinner');\r\n    const that = this;\r\n    this.clearError();\r\n    \r\n    if (!this.validate()) {\r\n      return;\r\n    }\r\n\r\n    preSignup({name:that.state.name}).then((response) => {\r\n      if (response.status === 200) {\r\n        this.createTenant(response.data);\r\n      }\r\n    });\r\n  }\r\n\r\n  handleImageChange = (e) => {\r\n    this.setState({\r\n      banner: e.target.files[0]\r\n    })\r\n  };\r\n\r\n  createTenant = (preSignupData) => {\r\n    createTenant({\r\n      tenantName: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      jwtPassword:this.state.jwtPassword,\r\n      solution: preSignupData.solution,\r\n      salt: preSignupData.salt,\r\n      banner: this.state.banner\r\n    })\r\n    .then((response) => {\r\n      if (response.status === 200) {\r\n        sendMessage('notification', true, {'type': 'success', message: 'Tenant has been created. You can proceed now', duration: 3000});\r\n        this.setState({pageNo: this.state.pageNo+1, created: true});\r\n      } else {\r\n        sendMessage('notification', true, {message: 'We are facing some problem, please try after sometime', duration: 3000});\r\n        return\r\n      }\r\n    }).catch((error)=>{\r\n      sendMessage('notification', true, {'type': 'failure', message: 'Unknown error. Please try again or at a later time', duration: 3000});\r\n    });\r\n  }\r\n\r\n  gotoTenantPage = () => {\r\n    this.props.history.push(\"/\" + this.state.name + \"/home\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"tenant boxed\">\r\n        {!this.state.created && <div className=\"typography-3 space-bottom-4\">Tenant creation</div>}\r\n        {this.state.created && <div className=\"typography-3 space-bottom-4\">Tenant [{this.state.name}] available now</div>}\r\n        {this.state.pageNo === 1 && <div className=\"form\">\r\n          <OakText id=\"name\" data={this.state} label=\"Tenant Name\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></OakText>\r\n          <OakText id=\"email\" data={this.state} label=\"Administrator Email\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></OakText>\r\n          <OakText id=\"password\" type=\"password\" data={this.state} label=\"Administrator Password\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></OakText>\r\n          <OakText id=\"repeatPassword\" type=\"password\" data={this.state} label=\"Repeat Password\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></OakText>\r\n          <OakText id=\"jwtPassword\" type=\"password\" data={this.state} label=\"JWT Password\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></OakText>\r\n          <label className=\"file-upload space-top-1 space-bottom-4\">\r\n            <input type=\"file\" accept=\"image/png, image/jpeg\" onChange={this.handleImageChange} required/>\r\n            <i className=\"material-icons\">add_photo_alternate</i>\r\n            {!this.state.banner && \"Choose Banner/Cover Image\"}\r\n            {this.state.banner && this.state.banner.name}\r\n          </label>\r\n          <div className=\"action\">\r\n            <button className=\"primary animate in right\" onClick={this.submit}>Create Tenant</button>\r\n          </div>\r\n        </div>}\r\n        {this.state.created && <button className=\"primary animate out right\" onClick={this.gotoTenantPage}>Take me to my tenant</button>}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './ViewResolver.scss';\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n    sideLabel?: string\r\n}\r\n\r\ninterface State {\r\n    views: any,\r\n    main?: any,\r\n    side?: any,\r\n    showSide: boolean,\r\n    mobileViewPort: any\r\n}\r\n\r\nclass ViewResolver extends Component<Props, State> {\r\n\r\n    _isMounted = false;\r\n    \r\n    viewPort = window.matchMedia(\"(max-width: 767px)\");\r\n\r\n    viewPortChange = (port) => {\r\n        this.setState({\r\n            mobileViewPort: port.matches\r\n        });\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            views: this.props.children,\r\n            showSide: false,\r\n            mobileViewPort: false\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.initializeViews();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        this.viewPortChange(this.viewPort);\r\n        this.viewPort.addListener(this.viewPortChange);\r\n\r\n        receiveMessage().subscribe(message => {\r\n            if (this._isMounted) {\r\n                if (message.name === 'sidebar') {\r\n                    this.setState({\r\n                        showSide: message.signal\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    initializeViews() {\r\n        React.Children.toArray(this.state.views).forEach((node) => {\r\n            // node.type.name is minified after build and so static build result has different alphabet\r\n            // if (node.type.name === 'View') {\r\n                if (node.props.main) {\r\n                    this.setState({\r\n                        main: node\r\n                    })\r\n                } else if (node.props.side) {\r\n                    this.setState({\r\n                        side: node\r\n                    })\r\n                }\r\n            // }\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.children) {\r\n            this.setState({\r\n                views: nextProps.children\r\n            }, () => {\r\n                this.initializeViews();\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleSideView = () => {\r\n        sendMessage('sidebar', !this.state.showSide);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            {!this.state.mobileViewPort && <div className=\"view-desktop\">\r\n                {this.state.side && <div className=\"view-side\">\r\n                    {this.state.side}\r\n                </div>}\r\n                <div className={'view-content' + (this.state.side ? ' side-present' : '')}>\r\n                    {this.state.main}\r\n                </div>\r\n            </div>}\r\n\r\n            {this.state.mobileViewPort && <div className=\"view-mobile\">\r\n                <div className={(this.state.showSide ? \"slider show\" : \"slider hide\")}>\r\n                    <div className=\"topbar\" onClick={this.toggleSideView}>\r\n                        <div>\r\n                            <button className=\"default block alt noborder\" onClick={this.toggleSideView}>\r\n                                {!this.state.showSide && <><i className=\"material-icons\">expand_more</i>{this.props.sideLabel ? this.props.sideLabel.toUpperCase() : 'MENU'}</>}\r\n                                {this.state.showSide && <><i className=\"material-icons\">expand_less</i>COLLAPSE</>}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"view-side\">\r\n                        {this.state.showSide && this.state.side}\r\n                    </div>\r\n                </div>\r\n                {!this.state.showSide && <div className=\"view-main\">\r\n                    {this.state.main}\r\n                </div>}\r\n            </div>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewResolver;","import React, { Component } from 'react';\r\n\r\ninterface Props {\r\n    main?: any,\r\n    side?: any\r\n}\r\n\r\ninterface State {\r\n}\r\n\r\nclass View extends Component<Props, State> {\r\n    render() {\r\n        return (\r\n            <div>\r\n               {/* {this.props} */}\r\n               {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default View;","import React, { Component } from 'react';\r\nimport './Sidebar.scss';\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n    show?: boolean,\r\n    elements?: Array<string>,\r\n    label: string,\r\n    icon: string,\r\n    number?: number,\r\n    animate?: boolean\r\n}\r\n\r\ninterface State {\r\n    show: boolean,\r\n    elements: Array<string>\r\n}\r\n\r\nclass Sidebar extends Component<Props, State> {\r\n\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: this.props.show ? true : false,\r\n            elements: this.props.elements ? this.props.elements : []\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            show: !this.state.show\r\n        }, () => sendMessage('sidebarExpanded', this.state.show, {label: this.props.label}));\r\n    }\r\n\r\n    hide = () => {\r\n        this.setState({\r\n            show: false\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        receiveMessage().subscribe(message => {\r\n            if (this._isMounted) {\r\n                if (message.name === 'sidebarExpanded' && message.signal && message.data && message.data.label !== this.props.label) {\r\n                    this.setState({\r\n                        show: false\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        const elements = this.state.elements.map((item: any) => (\r\n            <div key={item.label} className=\"element\" onClick={item.action}><i className=\"material-icons\">{item.icon}</i><div className=\"label-text\">{item.label}</div></div>\r\n        ))\r\n        return (            \r\n            <div className=\"sidebar\">\r\n                <div className={this.state.show ? \"header active\" : \"header\"} onClick={this.toggle}>\r\n                    <div className=\"label\">\r\n                        {/* <i className=\"material-icons\">{this.props.icon}</i> */}\r\n                        <div className=\"label-text\">\r\n                            {this.props.label}\r\n                            {this.props.number !== undefined && <div className=\"number\">{this.props.number}</div>}\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"aria\"><i className=\"material-icons\">{this.state.show ? 'expand_less' : 'expand_more'}</i></div> */}\r\n                    <div className=\"aria\"><i className={this.state.show ? \"material-icons collapse\" : \"material-icons\"}>keyboard_arrow_left</i></div>\r\n                </div>\r\n                <div className={this.state.show ? \"content show \" + (this.props.animate ? \"animate\" : \"static\") : \"content hide \" + (this.props.animate ? \"animate\" : \"static\")}>\r\n                    {elements}\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React, { Component } from 'react'\r\nimport './style.scss';\r\nimport OakText from '../Ux/OakText';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { httpGet, httpPost, httpPut } from \"../Lib/RestTemplate\";\r\nimport { constants } from '../Constants';\r\nimport { sendMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n    match: any,\r\n    authorization: Authorization\r\n}\r\n\r\ninterface State { \r\n    stage: any\r\n}\r\n    \r\nexport default class Stages extends Component<Props, State> {\r\n    constructor(props: Props){\r\n        super(props)\r\n        this.state = {\r\n            stage: [{name:''}]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        httpGet(constants.API_URL_STAGE + '/' + \r\n        this.props.match.params.tenant + '/', \r\n        {headers: {\r\n            Authorization: this.props.authorization.token\r\n        }}\r\n        ).then ((response) => {\r\n            this.setState({\r\n                stage: response.data.stage\r\n                })\r\n            }).catch(() => {})\r\n    }\r\n\r\n    \r\n    handleAddStage = () => {\r\n        this.setState({\r\n            stage: this.state.stage.concat([{name: \"\" }])\r\n        })\r\n    }\r\n\r\n    handleChangeStage = (evt, idx) => {\r\n        const localStage = [...this.state.stage]\r\n        localStage[idx] = {...localStage[idx], name:evt.target.value}\r\n        this.setState({\r\n            stage: localStage\r\n        })\r\n    }\r\n\r\n    handleRemoveStage = idx => () => {\r\n        this.setState({\r\n            stage: this.state.stage.filter((s,sidx) => idx !== sidx)\r\n        })\r\n    } \r\n\r\n    saveStages = () => {\r\n        return httpPut(constants.API_URL_STAGE + '/' + this.props.match.params.tenant + '/', \r\n        this.state.stage ,{\r\n            headers: {\r\n                Authorization: this.props.authorization.token\r\n                }\r\n            })\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    sendMessage('notification', true, {message: 'Stages Updated successfully', type: 'success', duration: 3000});\r\n                } else if (response.status === 500) {\r\n                    sendMessage('notification', true, {message: 'Stages Updation failed', type: 'failure', duration: 3000});\r\n                } else {\r\n                    sendMessage('notification', true, {message: 'Unknown response from server. Please try again or at a later time', type: 'failure', duration: 3000});\r\n                }\r\n                })\r\n        }\r\n\r\n    resetStages = () => {\r\n        httpGet(constants.API_URL_STAGE + '/' + \r\n        this.props.match.params.tenant + '/', \r\n        {headers: {\r\n            Authorization: this.props.authorization.token\r\n        }}\r\n        ).then ((response) => {\r\n            this.setState({\r\n                stage: response.data\r\n                })\r\n                }).catch(() => {})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"form\">\r\n                    <button className=\"secondary animate out right align-left\" onClick={ this.handleAddStage }><i className=\"material-icons\">label_important</i>New Stage</button>\r\n                    <button className=\"primary animate out right align-center\" onClick={this.saveStages}><i className=\"material-icons\">save_alt</i>Save</button>\r\n                    <button className=\"default animate in right align-right\" onClick={this.resetStages}><i className=\"material-icons\">undo</i>Reset</button>\r\n                    <div className=\"space-bottom-2\"></div>\r\n                    {this.state.stage && this.state.stage.map((item, idx) => (\r\n                        <div className=\"stage-row\" key={idx}>\r\n                            <div><OakText  id=\"name\" label={`Level ${idx+1}`} data={item} handleChange ={ (e) =>this.handleChangeStage(e, idx) } /></div>\r\n                            <div><button className=\"secondary animate in right space-bottom-2\" onClick={this.handleRemoveStage(idx)}><i className=\"material-icons\">delete</i>Remove</button></div>\r\n                            </div>\r\n                            ))}\r\n                            {(!this.state.stage || this.state.stage.length === 0) && <div>No custom stages defined</div>}\r\n                            </div>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './style.scss';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport OakText from '../Ux/OakText';\r\nimport { getTenant } from '../Tenant/TenantService';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport ViewResolver from '../Ux/ViewResolver';\r\nimport View from '../Ux/View';\r\nimport Sidebar from '../Ux/Sidebar';\r\nimport { any } from 'prop-types';\r\nimport Stages from '../Stages/index';\r\n\r\n\r\ninterface Props {\r\n    match: any,\r\n    setProfile: Function,\r\n    profile: any,\r\n    authorization: Authorization\r\n}\r\n\r\ninterface State { \r\n  name: string,\r\n  email: string,\r\n  jwtPassword:string,\r\n  banner: any,\r\n  errorFields: {\r\n    name: boolean,\r\n    email: boolean,\r\n    jwtPassword:boolean\r\n  },\r\n\r\n  section: String,\r\n\r\n  sidebarElements: any\r\n}\r\n\r\nclass Settings extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n          name: '',\r\n          email: '',\r\n          jwtPassword:'',\r\n          banner: null,\r\n          errorFields: {\r\n            name: false,\r\n            email: false,\r\n            jwtPassword: false\r\n          },\r\n          section: 'tenantProfile',\r\n          \r\n          sidebarElements: {\r\n            tenant: [\r\n                {\r\n                    label: 'Profile',\r\n                    action: () => this.chooseSection('tenantProfile'),\r\n                    icon: 'home'\r\n                },\r\n                {\r\n                    label:'Support levels',\r\n                    action: () => this.chooseSection('stage'),\r\n                    icon:'fast_forward'\r\n                },\r\n                {\r\n                    label:'Training dataset',\r\n                    action: () => this.chooseSection('trainingDataset'),\r\n                    icon:'bubble_chart'\r\n                },\r\n                {\r\n                    label:'Article categories',\r\n                    action: () => this.chooseSection('articleCategories'),\r\n                    icon:'compare'\r\n                }\r\n            ],\r\n            user: [\r\n                {\r\n                    label: 'Profile',\r\n                    action: () => this.chooseSection('userProfile'),\r\n                    icon: 'person'\r\n                },\r\n                {\r\n                    label: 'Password',\r\n                    action: () => this.chooseSection('userPassword'),\r\n                    icon: 'security'\r\n                }\r\n            ]\r\n          }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.props.setProfile({\r\n        ...this.props.profile,\r\n        tenant: this.props.match.params.tenant\r\n      })\r\n\r\n        getTenant(this.props.match.params.tenant,  {\r\n            headers: {\r\n                Authorization: this.props.authorization.token\r\n            }\r\n        }).then ((response) => {\r\n            this.setState({\r\n                name: response.data.name,\r\n                email: response.data.ownerEmail,\r\n                jwtPassword: response.data.jwtPassword\r\n            })\r\n        }).catch(() => {\r\n        })\r\n    }\r\n\r\n    chooseSection = (section: String) => {\r\n        this.setState({\r\n            section: section\r\n        });\r\n        sendMessage('sidebar', false);\r\n    }\r\n\r\n    handleImageChange = (e) => {\r\n      this.setState({\r\n        banner: e.target.files[0]\r\n      })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {\r\n                ...this.state,\r\n                [event.currentTarget.name]: event.currentTarget.value,\r\n                errorFields: {\r\n                  ...this.state.errorFields,\r\n                  [event.currentTarget.name]: false\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"settings\">\r\n                \r\n                <ViewResolver sideLabel='More options'>\r\n                    <View main>\r\n                        {this.state.section === 'tenantProfile' && \r\n                        <>\r\n                        <div className=\"typography-3 space-bottom-2\">Tenant Profile</div>\r\n                        <div className=\"form\">\r\n                            <OakText id=\"email\" data={this.state} label=\"Administrator Email\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></OakText>\r\n                            <OakText id=\"jwtPassword\" type=\"password\" data={this.state} label=\"JWT Password\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></OakText>\r\n                            <label className=\"file-upload space-top-1 space-bottom-4\">\r\n                                <input type=\"file\" accept=\"image/png, image/jpeg\" onChange={this.handleImageChange} required/>\r\n                                <i className=\"material-icons\">add_photo_alternate</i>\r\n                                {!this.state.banner && \"Choose Banner/Cover Image\"}\r\n                                {this.state.banner && this.state.banner.name}\r\n                            </label>\r\n                        </div>\r\n                        </>}\r\n\r\n                        {this.state.section === 'stage' &&\r\n                        <div className=\"stage\">\r\n                           <Stages match={this.props.match} authorization = {this.props.authorization} />   \r\n                        </div>}\r\n\r\n                        {this.state.section === 'userProfile' && \r\n                        <>\r\n                        <div className=\"typography-3 space-bottom-2\">User Profile</div>\r\n                        </>}\r\n\r\n                        {this.state.section === 'userPassword' && \r\n                        <>\r\n                        <div className=\"typography-3 space-bottom-2\">Change Login Password</div>\r\n                        </>}\r\n                    </View>\r\n                    <View side>\r\n                            <div className=\"filter-container\">\r\n                                <div className=\"section-main\">\r\n                                    <Sidebar label=\"Tenant\" elements={this.state.sidebarElements['tenant']} icon=\"home\" animate />\r\n                                    <Sidebar label=\"User\" elements={this.state.sidebarElements['user']} icon=\"account_circle\" animate />\r\n                                </div>\r\n                            </div>\r\n                    </View>\r\n                </ViewResolver>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Settings;","import React, { Component } from 'react';\r\nimport './style.scss';\r\n\r\ninterface Props {\r\n    editFaq: Function,\r\n    confirmDeleteFaq: Function,\r\n    search: Function,\r\n    faq: any,\r\n    id: string\r\n}\r\ninterface State {\r\n}\r\n\r\nclass Link extends Component<Props, State> {\r\n\r\n    edit = () => {\r\n        this.props.editFaq(this.props.faq);\r\n    }\r\n\r\n    delete = () => {\r\n        this.props.confirmDeleteFaq(this.props.faq._id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"faq-record\">\r\n                <div className=\"title typography-4\">\r\n                    <div className=\"tag\" key={this.props.faq.category} onClick={() => this.props.search(this.props.faq.category)}>{this.props.faq.category}</div>\r\n                    {this.props.faq.question}\r\n                    <div className=\"action-icon\">\r\n                        <i onClick={this.edit} className=\"material-icons\">edit</i>\r\n                        <i onClick={this.delete} className=\"material-icons\">delete</i>\r\n                    </div>\r\n                </div>\r\n                <div className=\"typography-6\">{this.props.faq.answer}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Link;\r\n","import React from 'react';\r\nimport './OakSelect.scss';\r\nimport { FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n    //   margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\n  \r\ninterface Props {\r\n  id: string,\r\n  label?: string,\r\n  handleChange: Function,\r\n  error?: boolean,\r\n  data: any,\r\n  elements?: string[],\r\n  objects?: Array<any>,\r\n  first?: string,\r\n  firstAction?: string,\r\n  maxWidth?: string\r\n}\r\n\r\nfunction OakSelect(props: Props) {\r\n    const classes = useStyles();\r\n\r\n    const { id, label, elements, objects, handleChange, data, first,firstAction } = props;\r\n    let dropdownList: Array<any> = [];\r\n    \r\n    if (elements) {\r\n      dropdownList = elements.map(item => <MenuItem key={item} value={item}>{item}</MenuItem>);\r\n    } else if (objects) {\r\n      dropdownList = objects.map(item => <MenuItem key={item.key} value={item.key}>{item.value}</MenuItem>);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <FormControl className={\"oak-select \" + classes.formControl}>\r\n            {label && <InputLabel htmlFor={id}>{label}</InputLabel>}\r\n            <Select\r\n            value={data[id]}\r\n            onChange={e => handleChange(e)}\r\n            inputProps={{\r\n                name: id,\r\n                id: id,\r\n            }}\r\n            autoWidth\r\n            className={props.maxWidth ? props.maxWidth : \"\"}\r\n            >\r\n                {first && <MenuItem value={first}>{first}</MenuItem>}\r\n                {firstAction && <MenuItem value={firstAction}><em>{firstAction}</em></MenuItem>}\r\n                {dropdownList}\r\n            </Select>\r\n        </FormControl>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OakSelect;","import React, { Component } from 'react';\r\nimport './OakPagination.scss';\r\nimport OakSelect from './OakSelect';\r\n\r\ninterface Props {\r\n    onChangePage: any,\r\n    totalRows: number,\r\n    label?: string\r\n}\r\n\r\ninterface State {\r\n    pageNo: number,\r\n    rowsPerPage: number\r\n}\r\n\r\nclass OakPagination extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            pageNo: 1,\r\n            rowsPerPage: 6\r\n        }\r\n    }\r\n\r\n    previousPage = () => {\r\n        if (this.state.pageNo !== 1) {\r\n            this.setState({\r\n                pageNo: this.state.pageNo - 1\r\n            }, () => this.pageChanged());\r\n        }\r\n    }\r\n\r\n    pageChanged = () => {\r\n        this.props.onChangePage(this.state.pageNo, this.state.rowsPerPage);\r\n    }\r\n\r\n    nextPage = () => {\r\n        if (Math.ceil(this.props.totalRows / this.state.rowsPerPage) !== this.state.pageNo) {\r\n            this.setState({\r\n                pageNo: this.state.pageNo + 1\r\n            }, () => this.pageChanged());\r\n        }\r\n    }\r\n\r\n    handleRowCountChange = (event) => {\r\n        this.setState(\r\n            {\r\n                ...this.state,\r\n                [event.target.name]: event.target.value,\r\n                pageNo: 1\r\n            }\r\n            , () => this.pageChanged()\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"oak-pagination\">\r\n                <div className=\"space-right-3\">{this.props.label ? this.props.label : \"Rows per page\"}</div>\r\n                <div className=\"space-right-3\">\r\n                    <OakSelect maxWidth=\"max-width-50\" data={this.state} id=\"rowsPerPage\" handleChange={e => this.handleRowCountChange(e)} elements={[\"6\",\"10\",\"20\",\"50\"]} />\r\n                </div>\r\n                <div className=\"page-number space-right-3\">\r\n                    <div>{(this.state.pageNo - 1) * this.state.rowsPerPage + 1} \r\n                            - {(this.state.pageNo * this.state.rowsPerPage < this.props.totalRows) ? this.state.pageNo * this.state.rowsPerPage : this.props.totalRows}\r\n                            &nbsp;of&nbsp; {this.props.totalRows} </div>\r\n                </div>\r\n                <div className=\"page-nav\">\r\n                    <div className=\"space-right-2\"><i className={this.state.pageNo === 1 ? \"material-icons disabled\" : \"material-icons\"} onClick={this.previousPage}>keyboard_arrow_left</i></div>\r\n                    <div><i className={Math.ceil(this.props.totalRows / this.state.rowsPerPage) === this.state.pageNo ? \"material-icons disabled\" : \"material-icons\"} onClick={this.nextPage}>keyboard_arrow_right</i></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OakPagination;\r\n","import React, { Component } from 'react';\r\nimport './OakTable.scss';\r\nimport OakPagination from './OakPagination';\r\n\r\ninterface Props {\r\n    header: any,\r\n    data: {\r\n        key: string,\r\n        label: string\r\n    }[],\r\n    dense?: boolean,\r\n    onChangePage?: any,\r\n    totalRows?: number,\r\n    material?: boolean\r\n}\r\n\r\ninterface State {\r\n    pageNo: number,\r\n    rowsPerPage: number\r\n}\r\n\r\nclass OakTable extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            pageNo: 1,\r\n            rowsPerPage: 6\r\n        }\r\n    }\r\n\r\n    pageChanged = () => {\r\n        if (this.props.onChangePage) {\r\n            this.props.onChangePage(this.state.pageNo, this.state.rowsPerPage);\r\n        }\r\n    }\r\n\r\n    onChangePage = (pageNo: number, rowsPerPage: number) => {\r\n        this.setState({\r\n            pageNo: pageNo,\r\n            rowsPerPage: rowsPerPage\r\n        }, () => this.pageChanged());\r\n    }\r\n\r\n    render() {\r\n        let view: any[] = [];\r\n        if (this.props.data && this.props.totalRows) {\r\n            view = this.props.data;\r\n        } else if (this.props.data && !this.props.totalRows) {\r\n            view = this.props.data.slice((this.state.pageNo - 1) * this.state.rowsPerPage, this.state.pageNo * this.state.rowsPerPage);\r\n        }\r\n        let key = 0;\r\n\r\n        return (\r\n            <div className={this.props.material ? \"oak-table material\" : \"oak-table\"}>\r\n                <div className=\"desktop-view\">\r\n                    <table className = {this.props.dense ? \"dense\" : \"\"}>\r\n                        <thead>\r\n                            <tr>\r\n                                {this.props.header && this.props.header.map(item =>\r\n                                    <th key={item.key}>{item.label}</th>\r\n                                    )\r\n                                }\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.props.data && view.map(row => \r\n                            <tr key={key=key+1}>\r\n                                {this.props.header && this.props.header.map(column =>\r\n                                    <td key={key=key+1}>{row[column.key]}</td>\r\n                                    )\r\n                                }\r\n                            </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                    <OakPagination onChangePage={this.onChangePage} totalRows={this.props.totalRows ? this.props.totalRows : this.props.data.length} />\r\n                </div>\r\n\r\n                <div className=\"mobile-view\">\r\n                    <div className=\"card-container\">\r\n                        {this.props.data && view.map(row => \r\n                            <div className=\"card\" key={key=key+1}>\r\n                                {this.props.header && this.props.header.map(column =>\r\n                                    <div key={key=key+1}>\r\n                                        <b>{column.label}</b>: {row[column.key]}\r\n                                    </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                            )}\r\n                    </div>\r\n                    <OakPagination onChangePage={this.onChangePage} totalRows={this.props.totalRows ? this.props.totalRows : this.props.data.length} label=\"Rows\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OakTable;\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport Link from './Link';\r\nimport OakTextField from '../Ux/OakTextField';\r\nimport OakDialog from '../Ux/OakDialog';\r\nimport OakSelect from '../Ux/OakSelect';\r\nimport ViewResolver from '../Ux/ViewResolver';\r\nimport View from '../Ux/View';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { httpGet, httpDelete, httpPost, httpPut } from '../Lib/RestTemplate';\r\nimport { constants } from '../Constants';\r\nimport { isEmptyOrSpaces } from '../Utils';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport Sidebar from '../Ux/Sidebar';\r\nimport OakTable from '../Ux/OakTable';\r\nimport OakPagination from '../Ux/OakPagination';\r\nimport OakPrompt from '../Ux/OakPrompt';\r\n\r\ninterface Props{\r\n  match: any,\r\n  setProfile: Function,\r\n  profile: any,\r\n  authorization: Authorization,\r\n  logout: Function\r\n}\r\n\r\ninterface State{\r\n  faq: any,\r\n  id?: string,\r\n  category: any,\r\n  question: string,\r\n  answer: string,\r\n  editDialogLabel: string,\r\n  isEditDialogOpen:boolean,\r\n  isDeleteDialogOpen:boolean,\r\n  sidebarElements:any,\r\n  existingCategories: any,\r\n  newCategory: String,\r\n  data?: any,\r\n  pageNo: number,\r\n  rowsPerPage: number\r\n}\r\n\r\nexport default class Faq extends React.Component<Props, State> {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      faq:[],\r\n      existingCategories: [],\r\n      isEditDialogOpen: false,\r\n      isDeleteDialogOpen: false,\r\n      id: undefined,\r\n      category: '',\r\n      question: '',\r\n      answer: '',\r\n      newCategory: '',\r\n      editDialogLabel: 'Article',\r\n      pageNo: 1,\r\n      rowsPerPage: 6,\r\n\r\n      sidebarElements: {\r\n        article: [\r\n            {\r\n                label: 'New article',\r\n                action: this.toggleEditDialog,\r\n                icon: 'add'\r\n            }\r\n        ]\r\n    }\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    // Temporary data for illustration of table\r\n    const rows = [\r\n      this.createData('1 Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n      this.createData('2 Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n      this.createData('3 Eclair', 262, 16.0, 24, 6.0),\r\n      this.createData('4 Cupcake', 305, 3.7, 67, 4.3),\r\n      this.createData('5 Gingerbread', 356, 16.0, 49, 3.9),\r\n      this.createData('6 Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n      this.createData('7 Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n      this.createData('8 Eclair', 262, 16.0, 24, 6.0),\r\n      this.createData('9 Cupcake', 305, 3.7, 67, 4.3),\r\n      this.createData('10 Gingerbread', 356, 16.0, 49, 3.9),\r\n      this.createData('11 Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n      this.createData('12 Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n      this.createData('13 Eclair', 262, 16.0, 24, 6.0),\r\n      this.createData('14 Cupcake', 305, 3.7, 67, 4.3),\r\n      this.createData('15 Gingerbread', 356, 16.0, 49, 3.9),\r\n    ];\r\n\r\n    this.setState({\r\n      data: rows\r\n    })\r\n  }\r\n\r\n  createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(this.props.authorization.isAuth){\r\n      this.initializeFaq(this.props.authorization)\r\n    }\r\n\r\n    this.props.setProfile({\r\n      ...this.props.profile,\r\n      tenant: this.props.match.params.tenant\r\n    })\r\n\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps.authorization){\r\n      this.initializeFaq(this.props.authorization)\r\n    }\r\n  }\r\n\r\n  initializeFaq(authorization){\r\n    const that = this;\r\n    httpGet(constants.API_URL_FAQ + '/' + \r\n    this.props.match.params.tenant + '/',\r\n      {\r\n        headers:{\r\n          Authorization: this.props.authorization.token\r\n        }\r\n      })\r\n      .then(function(response){\r\n        that.setState({\r\n          faq:response.data.faq,\r\n          existingCategories: response.data.category\r\n        });\r\n\r\n      })\r\n      \r\n  }\r\n\r\n  toggleEditDialog = () => {\r\n    this.setState({\r\n        isEditDialogOpen: !this.state.isEditDialogOpen,\r\n        id: undefined,\r\n        category: '',\r\n        question: '',\r\n        answer: '',\r\n        editDialogLabel: 'Add'\r\n    })\r\n  }\r\n\r\n  toggleDeleteDialog = () => {\r\n    this.setState({\r\n        isDeleteDialogOpen: !this.state.isDeleteDialogOpen\r\n    })\r\n  }\r\n\r\n  editFaq = (faq) => {\r\n    let category = this.state.category\r\n    if (category === '<create new>') {\r\n      category = this.state.newCategory;\r\n    }\r\n    \r\n    this.setState({\r\n      isEditDialogOpen: true,\r\n      id: faq._id,\r\n      category: faq.category,\r\n      question: faq.question,\r\n      answer: faq.answer,\r\n      editDialogLabel: 'Save'\r\n    })\r\n  }\r\n\r\n  confirmDeleteFaq =(faqId) => {\r\n    this.setState({\r\n      isDeleteDialogOpen: true,\r\n      id: faqId,\r\n      editDialogLabel: 'Delete'   \r\n    })\r\n  }\r\n\r\n  deleteFaq = () => {\r\n    const that = this;\r\n    httpDelete(constants.API_URL_FAQ + '/' + this.props.match.params.tenant + '/' + this.state.id,\r\n    {\r\n      headers: {\r\n        Authorization: this.props.authorization.token\r\n      }\r\n    })\r\n        .then(function(response) {\r\n            if (response.status === 200) {\r\n                sendMessage('notification', true, {type: 'success', message: 'FAQ deleted', duration: 5000});\r\n                that.initializeFaq(that.props.authorization);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            if (error.response.status === 401) {\r\n                that.props.logout(null, 'failure', 'Session expired. Login again');\r\n            }\r\n        })\r\n\r\n  }\r\n\r\n  searchByWord = (faqName) =>{\r\n\r\n  }\r\n\r\n  addFaq= () => {\r\n    const that = this;\r\n    let category = this.state.category\r\n    if (category === '<create new>') {\r\n      category = this.state.newCategory;\r\n    }\r\n    let faq = {\r\n        id: this.state.id,\r\n        question: this.state.question,\r\n        answer: this.state.answer,\r\n        category: category\r\n    }\r\n    if (isEmptyOrSpaces(faq.category)) {\r\n        sendMessage('notification', true, {type: 'failure', message: 'Category is missing', duration: 5000});\r\n        return;\r\n    }\r\n\r\n    if (isEmptyOrSpaces(faq.question)) {\r\n        sendMessage('notification', true, {type: 'failure', message: 'Question is missing', duration: 5000});\r\n        return;\r\n    }\r\n\r\n    if (isEmptyOrSpaces(faq.answer)) {\r\n        faq.answer = 'unsorted';\r\n    }\r\n\r\n    httpPut(constants.API_URL_FAQ + '/' + \r\n    this.props.match.params.tenant + '/',\r\n    faq,\r\n    {\r\n      headers: {\r\n        Authorization: this.props.authorization.token\r\n      }\r\n    })\r\n    .then(function(response) {\r\n        if (response.status === 200) {\r\n            sendMessage('notification', true, {type: 'success', message: 'FAQ created', duration: 5000});\r\n            that.toggleEditDialog();\r\n\r\n            that.initializeFaq(that.props.authorization);\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        if (error.response.status === 401) {\r\n            that.props.logout(null, 'failure', 'Session expired. Login again');\r\n        }\r\n    })\r\n}\r\n\r\n\r\n  handleChange = (event) => {\r\n    this.setState(\r\n        {\r\n            ...this.state,\r\n            [event.target.name]: event.target.value\r\n        }\r\n    )\r\n  }\r\n\r\n  onChangePage = (pageNo: number, rowsPerPage: number) => {\r\n      this.setState({\r\n          pageNo: pageNo,\r\n          rowsPerPage: rowsPerPage\r\n      });\r\n  }\r\n\r\n  render() {\r\n    let view: any[] = [];\r\n    if (this.state.faq) {\r\n      view = this.state.faq.slice((this.state.pageNo - 1) * this.state.rowsPerPage, this.state.pageNo * this.state.rowsPerPage);\r\n    }\r\n    const listview = view.map(item => (\r\n      <div key={item._id}>\r\n        <Link id={item._id} faq={item} editFaq={this.editFaq} confirmDeleteFaq={this.confirmDeleteFaq} search={this.searchByWord}></Link>\r\n        <br />\r\n      </div>\r\n    ))\r\n    return (\r\n      <div className=\"faq\">\r\n        <OakDialog visible={this.state.isEditDialogOpen} toggleVisibility={this.toggleEditDialog}>\r\n          <div className=\"dialog-body\">\r\n          <div><OakSelect label=\"Category\" data={this.state} id=\"category\" handleChange={e => this.handleChange(e)} elements={this.state.existingCategories} firstAction=\"<create new>\" /></div>\r\n          <div>\r\n            {this.state.category === '<create new>' && <OakTextField label=\"Category name\" data={this.state} id=\"newCategory\" handleChange={e => this.handleChange(e)} />}\r\n          </div>\r\n            \r\n            <OakTextField label=\"Question\" data={this.state} id=\"question\" handleChange={e => this.handleChange(e)} />\r\n            <OakTextField label=\"Answer\" data={this.state} id=\"answer\" handleChange={e => this.handleChange(e)} />\r\n          </div>\r\n          <div className=\"dialog-footer\">\r\n            <button onClick={this.toggleEditDialog} className=\"default animate in right align-left\"><i className=\"material-icons\">close</i>Cancel</button>\r\n            <button onClick={this.addFaq} className=\"primary animate out right align-right\"><i className=\"material-icons\">double_arrow</i>{this.state.editDialogLabel}</button>\r\n          </div>\r\n        </OakDialog>\r\n        \r\n      {this.state.isDeleteDialogOpen}\r\n        {/* <OakDialog small visible={this.state.isDeleteDialogOpen} toggleVisibility={this.toggleDeleteDialog}>\r\n          <div className=\"dialog-body\">\r\n            Are you sure you want to continue?\r\n            </div>\r\n          <div className=\"dialog-footer\">\r\n            <button onClick={this.toggleDeleteDialog} className=\"default animate in right align-left\"><i className=\"material-icons\">close</i>Cancel</button>\r\n            <button onClick={this.deleteFaq} className=\"primary animate out right align-right\"><i className=\"material-icons\">double_arrow</i>{this.state.editDialogLabel}</button>\r\n          </div>\r\n        </OakDialog> */}\r\n        <OakPrompt action={this.deleteFaq} visible={this.state.isDeleteDialogOpen} toggleVisibility={this.toggleDeleteDialog} />\r\n\r\n        <ViewResolver sideLabel='More options'>\r\n            <View main>\r\n            {listview}\r\n            <OakPagination totalRows={this.state.faq.length} onChangePage={this.onChangePage} label=\"Items per page\" />\r\n            {/* Temporary for illustration */}\r\n            <OakTable material data={this.state.data} header={[{key: \"name\", label:\"Name\"},\r\n                                                      {key: \"calories\", label:\"Calories\"},\r\n                                                      {key: \"fat\", label:\"Fat\"},\r\n                                                      {key: \"carbs\", label:\"Carbohydrates\"},\r\n                                                      {key: \"protein\", label:\"Protein\"}]}/>\r\n            {/* Temporary for illustration */}\r\n            </View>\r\n            <View side>\r\n              <div className=\"filter-container\">\r\n                  <div className=\"section-main\">\r\n                    <Sidebar label=\"Article\" elements={this.state.sidebarElements['article']} icon=\"add\" animate />\r\n                    <Sidebar label=\"Search\" elements={this.state.sidebarElements['search']} icon=\"search\" animate>\r\n                      Search content goes here\r\n                    </Sidebar>\r\n                  </div>\r\n              </div>\r\n            </View>\r\n        </ViewResolver>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport './style.scss'\r\nimport OakDialog from '../Ux/OakDialog';\r\nimport OakTextField from '../Ux/OakTextField';\r\n\r\ninterface Props {\r\n    match: any,\r\n    setProfile: Function,\r\n    profile: any,\r\n    authorization: Authorization,\r\n    logout: Function,\r\n    request: any\r\n}\r\n\r\ninterface State {\r\n    request: any,\r\n    isDialogOpen: boolean\r\n}\r\n\r\nexport default class ServiceRequestView extends Component<Props, State> {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isDialogOpen: false,\r\n            request: {\r\n                title: '',\r\n                description: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(this.props.request);\r\n        this.props.setProfile({\r\n          ...this.props.profile,\r\n          tenant: this.props.match.params.tenant\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.request && this.state.request !== nextProps.request) {\r\n            this.setState({\r\n                request: nextProps.request,\r\n                isDialogOpen: true\r\n            })\r\n        }\r\n    }\r\n\r\n    clearRequest = () => {\r\n        this.setState({\r\n            request: {\r\n                title: '',\r\n                description: ''\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    toggleDialog = () => {\r\n        if (this.state.isDialogOpen) {\r\n            this.clearRequest();\r\n        }\r\n        this.setState({\r\n            isDialogOpen: !this.state.isDialogOpen,\r\n            // editDialogLabel: 'Add'\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {\r\n                ...this.state,\r\n                [event.target.name]: event.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"view-request\">\r\n                <OakDialog visible={this.state.isDialogOpen} toggleVisibility={this.toggleDialog}>\r\n                    <div className=\"dialog-body\">\r\n                        <OakTextField label=\"Title\" data={this.state.request} id=\"title\" handleChange={e => this.handleChange(e)} />\r\n                        <OakTextField label=\"Description\" data={this.state.request} id=\"description\" handleChange={e => this.handleChange(e)} />\r\n                    </div>\r\n                    <div className=\"dialog-footer\">\r\n                        <button onClick={this.toggleDialog} className=\"default animate in right align-left\"><i className=\"material-icons\">close</i>Cancel</button>\r\n                    </div>\r\n                </OakDialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport OakTable from '../Ux/OakTable';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport './style.scss'\r\nimport ViewResolver from '../Ux/ViewResolver';\r\nimport View from '../Ux/View';\r\nimport Sidebar from '../Ux/Sidebar';\r\nimport { httpGet, httpDelete, httpPost, httpPut } from '../Lib/RestTemplate';\r\nimport { constants } from '../Constants';\r\nimport OakDialog from '../Ux/OakDialog';\r\nimport OakTextField from '../Ux/OakTextField';\r\nimport { isEmptyOrSpaces } from '../Utils';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport ServiceRequestView from './view';\r\n\r\ninterface Props{\r\n    match: any,\r\n    setProfile: Function,\r\n    profile: any,\r\n    authorization: Authorization,\r\n    logout: Function\r\n}\r\n\r\ninterface State{\r\n    data?: any,\r\n    sidebarElements: any,\r\n    isEditDialogOpen:boolean,\r\n    editDialogLabel: string,\r\n    pageNo: number,\r\n    rowsPerPage: number,\r\n    title: string,\r\n    description: string,\r\n    selectedRequest: any\r\n}\r\n\r\nexport default class ServiceRequests extends Component<Props, State> {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            data: [],\r\n            pageNo: 1,\r\n            rowsPerPage: 6,\r\n            isEditDialogOpen: false,\r\n            editDialogLabel: 'Service Request',\r\n            title:'',\r\n            description:'',\r\n            selectedRequest: undefined,\r\n\r\n            sidebarElements: {\r\n                serviceRequest: [\r\n                    {\r\n                        label: 'New Request',\r\n                        action: this.toggleEditDialog,\r\n                        icon: 'add'\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        if(this.props.authorization.isAuth){\r\n          this.initializeRequest(this.props.authorization)\r\n        }\r\n    \r\n        this.props.setProfile({\r\n          ...this.props.profile,\r\n          tenant: this.props.match.params.tenant\r\n        })\r\n    \r\n    }\r\n\r\n    openRequest = (request) => {\r\n        this.setState({\r\n            selectedRequest: request\r\n        })\r\n    }\r\n\r\n    initializeRequest(authorization) {\r\n        const that = this;\r\n        httpGet(constants.API_URL_SR + '/' + \r\n        this.props.match.params.tenant + '/',\r\n        {\r\n            headers:{\r\n                Authorization: this.props.authorization.token\r\n            }\r\n        })\r\n        .then((response) => {\r\n            let list: any[] = [];\r\n            response.data.data.forEach((item) => {\r\n                if (item.status === 'assigned') {\r\n                    item.status = <div className=\"tag-2\"><span>{'Assigned to ' + item.stage}</span></div>\r\n                } else if (item.status === 'progress') {\r\n                    item.status = <div className=\"tag-4\"><span>{'In progress with ' + item.stage}</span></div>\r\n                } else if (item.status === 'resolved') {\r\n                    item.status = <div className=\"tag-5\"><span>Resolved</span></div>\r\n                }\r\n\r\n                \r\n                list.push({\r\n                    ...item, \r\n                    action: \r\n                    <>\r\n                        <button className=\"primary noborder icon animate none align-left\" onClick={() => this.openRequest(item)}><i className=\"material-icons\">open_in_new</i></button>\r\n                        {item.status === 'resolved' && \r\n                            <button className=\"default noborder icon animate none align-right\"><i className=\"material-icons\">archive</i></button>}\r\n                    </>\r\n                })\r\n            })\r\n            this.setState({\r\n                data: list\r\n            });\r\n        })\r\n        \r\n    }\r\n\r\n    // onChangePage = (pageNo: number, rowsPerPage: number) => {\r\n    //     this.setState({\r\n    //         pageNo: this.state.pageNo,\r\n    //         rowsPerPage: this.state.rowsPerPage\r\n    //     })\r\n    //     const that = this;\r\n    //     httpGet(constants.API_URL_SR + '/' + \r\n    //     this.props.match.params.tenant + '/',\r\n    //     {\r\n    //         headers:{\r\n    //             Authorization: this.props.authorization.token\r\n    //         }\r\n    //     })\r\n    //     .then(function(response){\r\n    //         that.setState({\r\n    //             data:response.data.data,\r\n    //         });\r\n    //     })\r\n    //     console.log(pageNo, rowsPerPage);\r\n    // }\r\n\r\n    toggleEditDialog = () => {\r\n        this.setState({\r\n            isEditDialogOpen: !this.state.isEditDialogOpen,\r\n            editDialogLabel: 'Add',\r\n            selectedRequest: undefined\r\n        })\r\n    }\r\n\r\n    addRequest = () => {\r\n        const that = this;\r\n        let request = {\r\n            title: this.state.title,\r\n            description: this.state.description,\r\n        }\r\n        if (isEmptyOrSpaces(request.title)) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Title is missing', duration: 5000});\r\n            return;\r\n        }\r\n    \r\n        if (isEmptyOrSpaces(request.description)) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Description is missing', duration: 5000});\r\n            return;\r\n        }\r\n\r\n        httpPut(constants.API_URL_SR + '/' + \r\n        this.props.match.params.tenant + '/',\r\n        request,\r\n        {\r\n          headers: {\r\n            Authorization: this.props.authorization.token\r\n          }\r\n        })\r\n        .then(function(response) {\r\n            if (response.status === 200) {\r\n                sendMessage('notification', true, {type: 'success', message: 'Request created', duration: 5000});\r\n                that.toggleEditDialog();\r\n    \r\n                that.initializeRequest(that.props.authorization);\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            if (error.response.status === 401) {\r\n                that.props.logout(null, 'failure', 'Session expired. Login again');\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {\r\n                ...this.state,\r\n                [event.target.name]: event.target.value\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"requests\">\r\n                <OakDialog visible={this.state.isEditDialogOpen} toggleVisibility={this.toggleEditDialog}>\r\n                    <div className=\"dialog-body\">\r\n                        <OakTextField label=\"Title\" data={this.state} id=\"title\" handleChange={e => this.handleChange(e)} />\r\n                        <OakTextField label=\"Description\" data={this.state} id=\"description\" handleChange={e => this.handleChange(e)} />\r\n                    </div>\r\n                    <div className=\"dialog-footer\">\r\n                        <button onClick={this.toggleEditDialog} className=\"default animate in right align-left\"><i className=\"material-icons\">close</i>Cancel</button>\r\n                        <button onClick={this.addRequest} className=\"primary animate out right align-right\"><i className=\"material-icons\">double_arrow</i>{this.state.editDialogLabel}</button>\r\n                    </div>\r\n                </OakDialog>\r\n                <ServiceRequestView {...this.props} request = {this.state.selectedRequest}/>\r\n                <ViewResolver sideLabel='More options'>\r\n                    <View main>\r\n                        <OakTable material\r\n                        data={this.state.data} header={[\r\n                                {key:\"_id\", label:\"Request Number\"},\r\n                                {key:\"title\", label:\"Title\"},\r\n                                {key:\"description\", label:\"Description\"},\r\n                                {key:\"status\", label:\"Status\"},\r\n                                {key:\"category\", label:\"Category\"},\r\n                                {key:\"createDate\", label:\"Opened On\"},\r\n                                {key:\"action\", label:\"Action\"}]} >\r\n                        </OakTable>                    \r\n                    </View>\r\n                    <View side>\r\n                        <div className=\"filter-container\">\r\n                            <div className=\"section-main\">\r\n                                <Sidebar label=\"ServiceRequest\" elements={this.state.sidebarElements['serviceRequest']} icon=\"add\" animate />\r\n                                <Sidebar label=\"Search\" elements={this.state.sidebarElements['search']} icon=\"search\" animate>\r\n                                    Search content goes here\r\n                                </Sidebar>\r\n                            </div>\r\n                        </div>\r\n                    </View>\r\n                </ViewResolver>\r\n                               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport './style.scss';\r\nimport Home from '../Home';\r\nimport { HashRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport Login from '../Auth/Login';\r\nimport Landing from '../Landing';\r\nimport PrivateRoute from '../Auth/PrivateRoute';\r\nimport AuthInit from '../Auth/AuthInit';\r\nimport PropTypes from 'prop-types';\r\nimport { withCookies } from 'react-cookie';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport { getProfile, setProfile } from '../../actions/ProfileActions';\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport Backdrop from './Backdrop';\r\nimport Notification from '../Notification';\r\nimport Navigation from '../Navigation';\r\nimport store from '../../store';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\nimport Tenant from '../Tenant';\r\nimport Settings from './../Settings';\r\nimport Faq from '../Faq';\r\nimport ServiceRequests from '../ServiceRequests'\r\n\r\nconst themes = {\r\n    'themecolor_1': getTheme('#69A7BF'),\r\n    'themecolor_2': getTheme('#99587B'),\r\n    'themecolor_3': getTheme('#A66C26'),\r\n    'themecolor_4': getTheme('#37AE82')\r\n}\r\n\r\nfunction getTheme(color: string) {\r\n    return createMuiTheme({\r\n        palette: {\r\n          primary: {\r\n              main: color         \r\n          },\r\n          secondary: {\r\n              main: color\r\n          }\r\n        }\r\n      });\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    getProfile: Function,\r\n    setProfile: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    cookies: any,\r\n\r\n    // event: PropTypes.object,\r\n    profile: any,\r\n    authorization: Authorization\r\n}\r\n\r\ninterface State {\r\n    authorization: Authorization,\r\n    profile: any,\r\n    event: any\r\n}\r\n\r\nclass Content extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.props.getAuth();\r\n\r\n\r\n        this.state = {\r\n            authorization: {\r\n                isAuth: false\r\n            },\r\n            event: {},\r\n            profile: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe();\r\n    }\r\n    \r\n    logout = (event: any, type = 'success', message = 'You have been logged out') => {\r\n        this.props.removeAuth();\r\n        this.props.cookies.remove('isAuth');\r\n        this.props.cookies.remove('token');\r\n        this.props.cookies.remove('secret');\r\n        this.props.cookies.remove('name');\r\n        sendMessage('notification', true, {type: type, message: message, duration: 3000});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"App\"}>\r\n                \r\n                <HashRouter>\r\n                    <AuthInit />\r\n                    <Backdrop />\r\n                    <div className=\"body\">\r\n                        <div className=\"body-content\">\r\n                            <Notification />\r\n                            <MuiThemeProvider theme={themes['themecolor_1']}>\r\n                                <Navigation {...this.props} logout={() => this.logout} event={this.state.event} />\r\n                                <Route path=\"/:tenant/home\" render={(props: any) => <Home {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                <Route path=\"/:tenant/login\" render={(props: any) => <Login {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                <Route path=\"/\" exact render={(props: any) => <Landing {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                <Route path=\"/home\" exact render={(props: any) => <Landing {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                <Route path=\"/tenant\" exact render={(props: any) => <Tenant {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                <PrivateRoute path=\"/:tenant/settings\" render={(props: any) => <Settings {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                <PrivateRoute path=\"/:tenant/faq\" render={(props: any) => <Faq {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                <PrivateRoute path=\"/:tenant/servicerequests\" render={(props: any) => <ServiceRequests {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                            </MuiThemeProvider>\r\n                        </div>\r\n                    </div>\r\n                </HashRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  authorization: state.authorization,\r\n  profile: state.profile//,\r\n//   event: state.event\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth, getProfile, setProfile })(withCookies(Content));\r\n","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from '../../store';\r\nimport './style.scss';\r\nimport './button.scss';\r\nimport './metric.scss';\r\nimport Content from './Content';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Content {...this.props} />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {CookiesProvider} from \"react-cookie\";\r\n\r\nReactDOM.render(<CookiesProvider><App /></CookiesProvider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/mirror_white.ff53f974.svg\";"],"sourceRoot":""}