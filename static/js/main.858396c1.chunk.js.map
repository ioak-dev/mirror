{"version":3,"sources":["images/mirror_white.svg","images/cover.jpg","reducers/AuthReducer.ts","reducers/ProfileReducer.ts","reducers/index.ts","actions/types.ts","store.ts","components/Ux/SearchBar.tsx","events/MessageService.ts","components/Home/index.tsx","actions/AuthActions.ts","components/Auth/Login.tsx","components/Landing/index.tsx","components/Auth/PrivateRoute.tsx","components/Auth/AuthInit.tsx","actions/ProfileActions.ts","components/App/Backdrop.tsx","components/Notification/index.tsx","components/Navigation/Links.tsx","components/Navigation/Desktop.tsx","components/Navigation/Mobile.tsx","components/Navigation/index.tsx","components/App/Content.tsx","components/App/index.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","__webpack_require__","p","initialState","isAuth","firstname","lastname","theme","tenant","searchText","combineReducers","authorization","state","arguments","length","undefined","action","type","console","log","_objectSpread","payload","profile","ProfileReducer_objectSpread","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","SearchBar","props","react_default","a","createElement","className","name","autoFocus","placeholder","required","value","onChange","handleChange","xmlns","width","height","viewBox","d","subject","Subject","sendMessage","signal","data","next","receiveMessage","asObservable","pageYOffsetCutoff","Home","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSearchTextChange","event","setProfile","Home_objectSpread","target","handleScroll","currentScrollPos","window","pageYOffset","showMainSearchBar","element","Fragment","setState","prevScrollpos","addEventListener","match","params","removeEventListener","src","cover","Ux_SearchBar","React","Component","getAuth","dispatch","addAuth","removeAuth","Login","login","success","logout","cookies","remove","set","history","push","toggle","newuser","onClick","connect","withCookies","PrivateRoute","react_router","path","component","render","to","pathname","AuthInit","get","getProfile","Backdrop","backdrop","subscribe","message","Notification","spinner","notification","_this2","duration","setTimeout","nextProps","Links","toggleMenu","menu","react_router_dom","activeClassName","Desktop","signin","showSearchBar","showSettings","_this3","transparent","mirror_white","alt","Navigation_Links","toggleSettings","Mobile","Navigation","toggleDarkMode","Navigation_objectSpread","changeTextSize","size","textSize","changeThemeColor","color","themeColor","visible","mobilemenu","chooseTheme","transparentNavBar","firstLoad","Navigation_Desktop","assign","Navigation_Mobile","withRouter","themes","themecolor_1","getTheme","themecolor_2","themecolor_3","themecolor_4","createMuiTheme","palette","primary","main","secondary","Content","react_router_dom_min","Auth_AuthInit","App_Backdrop","components_Notification","ThemeProvider","components_Navigation","Home_Home","components_Auth_Login","exact","Landing_Home","Auth_PrivateRoute","App","es","App_Content","Boolean","location","hostname","ReactDOM","es6","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.858396c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mirror_white.ff53f974.svg\";","module.exports = __webpack_public_path__ + \"static/media/cover.b89312c7.jpg\";","import { GET_AUTH, ADD_AUTH, REMOVE_AUTH } from '../actions/types';\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    firstname: '',\r\n    lastname: ''\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_AUTH:\r\n            console.log('GET_AUTH reducer');\r\n            return {\r\n                ...state\r\n            };\r\n        case ADD_AUTH:\r\n            console.log('ADD_AUTH reducer');\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        \r\n        case REMOVE_AUTH:\r\n            console.log('REMOVE_AUTH reducer');\r\n            return {\r\n                ...state,\r\n                isAuth: false,\r\n                firstname: '',\r\n                lastname: ''\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_PROFILE, SET_PROFILE } from '../actions/types';\r\n\r\nconst initialState = {\r\n    theme: 'theme_light',\r\n    tenant: '',\r\n    searchText: ''\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_PROFILE:\r\n            console.log('GET_PROFILE reducer');\r\n            return {\r\n                ...state\r\n            };\r\n        case SET_PROFILE:\r\n            console.log('SET_PROFILE reducer');\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport AuthReducer from './AuthReducer';\r\nimport ProfileReducer from './ProfileReducer';\r\n\r\nexport default combineReducers({\r\n    authorization: AuthReducer,\r\n    profile: ProfileReducer\r\n})","export const GET_AUTH = 'GET_AUTH';\r\nexport const ADD_AUTH = 'ADD_AUTH';\r\nexport const REMOVE_AUTH = 'REMOVE_AUTH';\r\n\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const SET_PROFILE = 'SET_PROFILE';","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware)//,\r\n        // (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SearchBar.scss';\r\n\r\ninterface Props {\r\n  value: string,\r\n  handleChange: any\r\n}\r\n\r\nfunction SearchBar(props: Props) {\r\n    return (\r\n        <div className=\"search-bar\">\r\n            <input name=\"searchText\" autoFocus placeholder=\"Mirror, mirror, on the wall, who's the fairest of them all?\" required value={props.value} onChange={props.handleChange}></input>\r\n              <button className=\"icon\">\r\n                {/* <i className=\"material-icons\">search</i> */}\r\n                <i><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"></path></svg></i>\r\n              </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nSearchBar.propTypes = {\r\n};\r\n\r\nexport default SearchBar;\r\n","import { Subject, Observable } from 'rxjs';\r\nimport { Message } from '../components/Types/GeneralTypes';\r\n\r\nconst subject = new Subject<Message>();\r\n\r\nexport function sendMessage(name: string, signal: boolean, data?: {}) {\r\n    subject.next({\r\n        name: name,\r\n        signal: signal,\r\n        data: data\r\n    });\r\n}\r\n\r\nexport function clearMessages() {\r\n    subject.next();\r\n}\r\n\r\nexport function receiveMessage(): Observable<Message> {\r\n    return subject.asObservable();\r\n}","import React from 'react';\r\nimport './style.scss';\r\nimport cover from '../../images/cover.jpg';\r\nimport SearchBar from '../Ux/SearchBar';\r\n\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\n\r\n\r\nconst pageYOffsetCutoff = 10;\r\n\r\ninterface Props {\r\n  setProfile: Function,\r\n  profile: any,\r\n  match: any\r\n}\r\n\r\ninterface State {\r\n  prevScrollpos: number,\r\n  showMainSearchBar: boolean\r\n}\r\n\r\nexport default class Home extends React.Component<Props, State> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n      prevScrollpos: window.pageYOffset,\r\n      showMainSearchBar: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    sendMessage('navbar-transparency', true);\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n    this.props.setProfile({\r\n      ...this.props.profile,\r\n      tenant: this.props.match.params.tenant\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.handleScroll);\r\n    sendMessage('show-navbar-element', false);\r\n    sendMessage('navbar-transparency', false);\r\n  }\r\n\r\n\r\n  handleSearchTextChange = (event) => {\r\n    this.props.setProfile({\r\n      ...this.props.profile,\r\n      searchText: event.target.value\r\n    })\r\n  }\r\n\r\n  handleScroll = () => {\r\n    // const { prevScrollpos } = this.state;\r\n  \r\n    const currentScrollPos = window.pageYOffset;\r\n    const showMainSearchBar = currentScrollPos < pageYOffsetCutoff;\r\n\r\n    if (this.state.showMainSearchBar !== showMainSearchBar) {\r\n      if (!showMainSearchBar) {\r\n        sendMessage('navbar-transparency', false);\r\n        sendMessage('show-navbar-element', true, {\r\n          element: \r\n            <>\r\n              <input name=\"searchText\" autoFocus placeholder=\"Mirror, mirror, on the wall, who's the fairest of them all?\" required value={this.props.profile.searchText} onChange={(event) => this.handleSearchTextChange(event)}></input>\r\n              <button className=\"icon\">\r\n                {/* <i className=\"material-icons\">search</i> */}\r\n                <i><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"></path></svg></i>\r\n              </button>\r\n            </>\r\n        });\r\n      } else {\r\n        sendMessage('navbar-transparency', true);\r\n        sendMessage('show-navbar-element', false);\r\n      }\r\n    }\r\n  \r\n    this.setState({\r\n      prevScrollpos: currentScrollPos,\r\n      showMainSearchBar\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"home full\">\r\n            <div className='cover'>\r\n              <img src={cover}/>\r\n            </div>\r\n            {this.state.showMainSearchBar && <SearchBar value={this.props.profile.searchText} handleChange={this.handleSearchTextChange} />}\r\n            <br /> Search results goes here\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","import { GET_AUTH, REMOVE_AUTH, ADD_AUTH } from './types';\r\n\r\nexport const getAuth = () => dispatch => {\r\n    dispatch({\r\n        type: GET_AUTH\r\n    });\r\n}\r\n\r\nexport const addAuth = (data) => dispatch => {\r\n    dispatch({\r\n        type: ADD_AUTH,\r\n        payload: data\r\n    });\r\n}\r\n\r\nexport const removeAuth = () => dispatch => {\r\n    dispatch({\r\n        type: REMOVE_AUTH\r\n    });\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport {withCookies} from 'react-cookie';\r\nimport './Login.scss';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    cookies: any,\r\n    history: any,\r\n    authorization: Authorization\r\n}\r\n\r\ninterface State {\r\n    newuser: boolean\r\n}\r\n\r\nclass Login extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newuser: false\r\n        }\r\n    }\r\n\r\n    login = () => {\r\n        // Real check\r\n        this.success();\r\n    }\r\n\r\n    logout = () => {\r\n        this.props.removeAuth();\r\n        this.props.cookies.remove('isAuth');\r\n    }\r\n\r\n    success = () => {\r\n        this.props.addAuth({\r\n            isAuth: true,\r\n            firstname: 'Arun Kumar',\r\n            lastname: 'Selvaraj'\r\n        });\r\n        this.props.cookies.set('isAuth', true);\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            newuser: !this.state.newuser\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"login boxed\">\r\n                    {this.props.authorization.isAuth && <button className=\"secondary animate alt\" onClick={this.logout}>Logout</button>}\r\n                    {!this.props.authorization.isAuth && <button className=\"primary block\" onClick={this.login}>Login</button>}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authorization: state.authorization\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(withCookies(Login));","import React from 'react';\r\nimport './style.scss';\r\n\r\nexport default class Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"landing full\">\r\n        Landing page\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth } from '../../actions/AuthActions';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n  authorization: Authorization,\r\n  getAuth: Function,\r\n  path: string,\r\n  render: any\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nclass PrivateRoute extends Component<Props, State> {\r\n  componentWillMount() {\r\n    this.props.getAuth();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.authorization.isAuth && <Route path={this.props.path} component={this.props.render} />}\r\n        {!this.props.authorization.isAuth && <Redirect to={{pathname: \"/home\"}} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  authorization: state.authorization\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth })(PrivateRoute);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport PropTypes from 'prop-types';\r\nimport {withCookies, ReactCookieProps} from 'react-cookie';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\n\r\ninterface Props extends ReactCookieProps {\r\n    authorization: Authorization,\r\n    addAuth: Function,\r\n    getAuth: Function,\r\n    removeAuth: Function,\r\n    cookies: any\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nclass AuthInit extends Component<Props, State> {\r\n    componentWillMount() {\r\n        if (!this.props.authorization.isAuth && this.props.cookies.get('isAuth')) {\r\n            this.props.addAuth({\r\n                isAuth: true,\r\n                firstname: 'Arun Kumar',\r\n                lastname: 'Selvaraj'\r\n            });\r\n        }\r\n        this.props.getAuth();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authorization: state.authorization\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(withCookies(AuthInit));","import { GET_PROFILE, SET_PROFILE } from './types';\r\n\r\nexport const getProfile = () => dispatch => {\r\n    dispatch({\r\n        type: GET_PROFILE\r\n    });\r\n}\r\n\r\nexport const setProfile = (payload) => dispatch => {\r\n    dispatch({\r\n        type: SET_PROFILE,\r\n        payload: payload\r\n    });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { receiveMessage } from '../../events/MessageService';\r\nimport { Message } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n}\r\n\r\ninterface State {\r\n    backdrop: string\r\n}\r\n\r\nclass Backdrop extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            backdrop: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe(\r\n            message => {\r\n                if (message.name === 'dialog') {\r\n\r\n                }\r\n            }\r\n        )\r\n        // if (nextProps.event && nextProps.event.name === 'dialog') {\r\n        //     if (nextProps.event.signal) {\r\n        //         this.setState({\r\n        //             backdrop: 'backdrop-fade'\r\n        //         })\r\n        //     } else {\r\n        //         this.setState({\r\n        //             backdrop: ''\r\n        //         })\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.backdrop}></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Backdrop;","import React, { Component } from 'react';\r\nimport './style.scss';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n}\r\n\r\ninterface State {\r\n    notification: any,\r\n    spinner: boolean\r\n}\r\n\r\nclass Notification extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            spinner: false,\r\n            notification: null\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        receiveMessage().subscribe(message => {\r\n            if (message.name === 'notification') {\r\n                if (!message.signal) {\r\n                    this.setState({\r\n                        notification: null,\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        notification: message.data,\r\n                        spinner: false\r\n                    })\r\n                    \r\n                    if (message.data && message.data.duration) {\r\n                        setTimeout(() => {\r\n                            sendMessage('notification', false);\r\n                        }, message.data.duration);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (message.name === 'spinner') {\r\n                this.setState({\r\n                    spinner: message.signal\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    processNextProps(nextProps) {\r\n        if (nextProps.event && nextProps.event.name === 'spinner') {\r\n            this.setState({\r\n                spinner: nextProps.event.signal\r\n            })\r\n        }\r\n\r\n        if (nextProps.event && nextProps.event.name === 'notification') {\r\n            if (!nextProps.event.signal) {\r\n                this.setState({\r\n                    notification: null,\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    notification: nextProps.event.data,\r\n                    spinner: false\r\n                })\r\n                \r\n                if (nextProps.event.data.duration) {\r\n                    setTimeout(() => {\r\n                        // this.props.sendEvent('notification', false);\r\n                    }, nextProps.event.data.duration);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            {this.state.notification && <div className={\"notification \" + this.state.notification.type}><div className=\"message\">{this.state.notification.message}</div></div>}\r\n            {this.state.spinner && <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>}\r\n            {/* {this.props.spinner && <div className=\"lds-facebook\"><div></div><div></div><div></div></div>} */}\r\n            {/* {this.props.spinner && <div className=\"lds-dual-ring\"></div>} */}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Notification;","import React, { Component } from 'react';\r\n\r\nimport './style.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n    authorization: Authorization,\r\n    profile: Profile\r\n}\r\n\r\ninterface State {\r\n    menu: boolean\r\n}\r\n\r\nclass Links extends Component<Props, State> {\r\n    toggleMenu = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"links\">\r\n                {this.props.authorization.isAuth &&\r\n                    <>\r\n                    <NavLink to={\"/\" + this.props.profile.tenant + \"/home\"} className=\"navitem\" activeClassName=\"active\">Home</NavLink>\r\n                    <NavLink to={\"/\" + this.props.profile.tenant + \"/login\"} className=\"navitem\" activeClassName=\"active\">Login</NavLink>\r\n                    </>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Links;","import React, { Component } from 'react';\r\n\r\nimport './style.scss';\r\nimport mirror_white from '../../images/mirror_white.svg';\r\nimport mirror_black from '../../images/mirror_black.svg';\r\nimport Links from './Links';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\n// import SearchBar from '../Ux/SearchBar';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\nimport SearchBar from '../Ux/SearchBar';\r\n\r\ninterface Props {    \r\n    sendEvent: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    authorization: Authorization\r\n    getProfile: Function,\r\n    profile: Profile,\r\n    login: Function,\r\n    transparent: boolean,\r\n    logout: Function,\r\n    toggleSettings: any,\r\n    handleSearchTextChange: Function\r\n}\r\n\r\ninterface State {\r\n    showSettings: boolean,\r\n    showSearchBar: boolean\r\n}\r\n\r\nclass Desktop extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.state = {\r\n            showSearchBar: false,\r\n            showSettings: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe(message => {\r\n            if (message.name === 'show-navbar-element') {\r\n                this.setState({\r\n                    showSearchBar: message.signal\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    signin = (type) => {\r\n        this.props.login(type);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={(this.props.transparent ? \"navbar desktop transparent\" : \"navbar desktop\")}>\r\n                <div className=\"left\">\r\n                    {!this.props.transparent && this.props.profile.theme === 'theme_light' && <img className=\"logo\" src={mirror_white} alt=\"Curate logo\" />}\r\n                    {(this.props.transparent || this.props.profile.theme === 'theme_dark') && <img className=\"logo\" src={mirror_white} alt=\"Curate logo\" />}\r\n                    <Links authorization={this.props.authorization} profile={this.props.profile}/>\r\n                    {this.state.showSearchBar && <SearchBar value={this.props.profile.searchText} handleChange={this.props.handleSearchTextChange} />}\r\n                </div>\r\n                <div className=\"right\">\r\n                    <div className=\"action\">\r\n                        {/* <button className=\"default disabled small\" onClick={this.props.toggleSettings}><i className=\"material-icons\">palette</i>Theme</button> */}\r\n                        {this.props.authorization.isAuth && \r\n                            <button className=\"primary animate small\" onClick={this.props.toggleSettings}><i className=\"material-icons\">brush</i>Action 1</button>}\r\n                        {this.props.authorization.isAuth && \r\n                            <button className=\"default block small\" onClick={this.props.logout()}><i className=\"material-icons\">power_settings_new</i>Logout</button>}\r\n                        {!this.props.authorization.isAuth && \r\n                            <button className=\"default block small\" onClick={() => this.signin('signin')}><i className=\"material-icons\">person</i>Login</button>}\r\n                        {!this.props.authorization.isAuth && \r\n                            <button className=\"default block small\" onClick={() => this.signin('signup')}><i className=\"material-icons\">person_add</i>Signup</button>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Desktop;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './style.scss';\r\nimport mirror_white from '../../images/mirror_white.svg';\r\nimport mirror_black from '../../images/mirror_black.svg';\r\nimport Links from './Links';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport SearchBar from '../Ux/SearchBar';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\n// import SearchBar from '../Ux/SearchBar';\r\n\r\ninterface Props {    \r\n    sendEvent: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    authorization: Authorization\r\n    getProfile: Function,\r\n    profile: Profile,\r\n    login: Function,\r\n    transparent: boolean,\r\n    logout: Function,\r\n    toggleSettings: any,\r\n    handleSearchTextChange: Function\r\n}\r\n\r\ninterface State {\r\n    menu: boolean,\r\n    showSearchBar: boolean\r\n}\r\n\r\nclass Mobile extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.state = {\r\n            showSearchBar: false,\r\n            menu: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe(message => {\r\n            if (message.name === 'show-navbar-element') {\r\n                this.setState({\r\n                    showSearchBar: message.signal\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    signin = (type) => {\r\n        this.props.login(type);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className={(this.props.transparent ? \"navbar mobile transparent\" : \"navbar mobile\")}>\r\n                <div className=\"left\">\r\n                    {!this.props.transparent && this.props.profile.theme === 'theme_light' && <img className=\"logo\" src={mirror_white} alt=\"Curate logo\" />}\r\n                    {(this.props.transparent || this.props.profile.theme === 'theme_dark') && <img className=\"logo\" src={mirror_white} alt=\"Curate logo\" />}\r\n                    {this.state.showSearchBar && <SearchBar value={this.props.profile.searchText} handleChange={this.props.handleSearchTextChange} />}\r\n                    {/* links */}\r\n                </div>\r\n                <div className=\"right\">\r\n                    {/* <div className=\"settings-icon\" onClick={this.props.toggleSettings}><i className=\"material-icons\">settings</i></div> */}\r\n                    <div className={(this.state.menu ? \"menu active\" : \"menu\")} onClick={this.toggleMenu}><div></div></div>\r\n                    {/* action login */}\r\n                </div>\r\n            </div>\r\n            <div className={(this.state.menu ? \"slider show\" : \"slider hide\")} onClick={this.toggleMenu}>\r\n                <div className={(this.state.menu ? \"container\": \"container hidetext\")} onClick={this.toggleMenu}>\r\n                    <div className=\"action\">\r\n                        <div className=\"settings-icon\" onClick={this.props.toggleSettings}>\r\n                            {this.props.authorization.isAuth && <button className=\"invert animate alt small\" onClick={this.props.toggleSettings}><i className=\"material-icons\">brush</i>Action 1</button>}\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                            {this.props.authorization.isAuth && <button className=\"invert animate alt small\" onClick={this.props.logout()}><i className=\"material-icons\">power_settings_new</i>Logout</button>}\r\n                            {!this.props.authorization.isAuth && <button className=\"invert animate alt small left\" onClick={() => this.signin('signin')}><i className=\"material-icons\">person</i>Login</button>}\r\n                            {!this.props.authorization.isAuth && <button className=\"invert animate alt small right\" onClick={() => this.signin('signup')}><i className=\"material-icons\">person_add</i>Signup</button>}\r\n                        </div>\r\n                    </div>\r\n                    <Links authorization={this.props.authorization} profile={this.props.profile}/>\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Mobile;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {withRouter} from 'react-router'\r\nimport { getProfile, setProfile } from '../../actions/ProfileActions';\r\nimport {withCookies} from 'react-cookie';\r\n\r\nimport './style.scss';\r\nimport Desktop from './Desktop';\r\nimport Mobile from './Mobile';\r\n\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\n\r\ninterface Props {    \r\n    sendEvent: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    authorization: Authorization,\r\n    getProfile: Function,\r\n    setProfile: Function,\r\n    profile: Profile,\r\n    login: Function,\r\n    transparent: boolean,\r\n    logout: Function,\r\n    toggleSettings: any,\r\n    history: any,\r\n    cookies: any,\r\n    location: any,\r\n    match: any\r\n}\r\n\r\ninterface State {\r\n    visible: boolean,\r\n    mobilemenu: string,\r\n    chooseTheme: boolean,\r\n    showSettings: boolean,\r\n    transparentNavBar: boolean,\r\n    firstLoad: boolean\r\n}\r\n\r\nclass Navigation extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.state = {\r\n            visible: false,\r\n            mobilemenu: 'hide',\r\n            chooseTheme: false,\r\n            showSettings: false,\r\n            transparentNavBar: false,\r\n            firstLoad: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe(message => {\r\n            if (message.name === 'navbar-transparency') {\r\n                this.setState({\r\n                    transparentNavBar: message.signal\r\n                })\r\n            }\r\n            if (message.name === 'loggedin') {\r\n                // this.props.reloadProfile(nextProps.authorization);\r\n                this.setState({\r\n                    firstLoad: false\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.state.firstLoad && nextProps.authorization && nextProps.authorization.isAuth) {\r\n            // this.props.reloadProfile(nextProps.authorization);\r\n            this.setState({\r\n                firstLoad: false\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleDarkMode = () => {\r\n        if (this.props.profile.theme === 'theme_dark') {\r\n            this.props.setProfile({\r\n                ...this.props.profile,\r\n                theme: 'theme_light'\r\n            })   \r\n        } else  {\r\n            this.props.setProfile({\r\n                ...this.props.profile,\r\n                theme: 'theme_dark'\r\n            })   \r\n        }\r\n    }\r\n\r\n    changeTextSize = (size) => {\r\n        this.props.setProfile({\r\n            ...this.props.profile,\r\n            textSize: size\r\n        })\r\n    }\r\n\r\n    changeThemeColor = (color) => {\r\n        this.props.setProfile({\r\n            ...this.props.profile,\r\n            themeColor: color\r\n        })\r\n    }\r\n\r\n    login = (type) => {\r\n        this.props.history.push('/' + this.props.profile.tenant + '/login?type=' + type);\r\n    }\r\n\r\n    toggleSettings = () => {\r\n        this.setState({\r\n            showSettings: !this.state.showSettings\r\n        })\r\n    }\r\n\r\n\r\n    handleSearchTextChange = (event) => {\r\n      this.props.setProfile({\r\n        ...this.props.profile,\r\n        searchText: event.target.value\r\n      })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"nav\">\r\n                <Desktop {...this.props} logout={this.props.logout} login={this.login} toggleSettings={this.toggleSettings} transparent={this.state.transparentNavBar} handleSearchTextChange={this.handleSearchTextChange} />\r\n                <Mobile {...this.props} logout={this.props.logout} login={this.login} toggleSettings={this.toggleSettings} transparent={this.state.transparentNavBar} handleSearchTextChange={this.handleSearchTextChange} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProfile, setProfile })(withCookies(withRouter(Navigation)));","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport './style.scss';\r\nimport Home from '../Home';\r\nimport { HashRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport Login from '../Auth/Login';\r\nimport Landing from '../Landing';\r\nimport PrivateRoute from '../Auth/PrivateRoute';\r\nimport AuthInit from '../Auth/AuthInit';\r\nimport PropTypes from 'prop-types';\r\nimport { withCookies } from 'react-cookie';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport { getProfile, setProfile } from '../../actions/ProfileActions';\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport Backdrop from './Backdrop';\r\nimport Notification from '../Notification';\r\nimport Navigation from '../Navigation';\r\nimport store from '../../store';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\n\r\nconst themes = {\r\n    'themecolor_1': getTheme('#69A7BF'),\r\n    'themecolor_2': getTheme('#99587B'),\r\n    'themecolor_3': getTheme('#A66C26'),\r\n    'themecolor_4': getTheme('#37AE82')\r\n}\r\n\r\nfunction getTheme(color: string) {\r\n    return createMuiTheme({\r\n        palette: {\r\n          primary: {\r\n              main: color         \r\n          },\r\n          secondary: {\r\n              main: color\r\n          }\r\n        }\r\n      });\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    getProfile: Function,\r\n    setProfile: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    cookies: any,\r\n\r\n    // event: PropTypes.object,\r\n    profile: any,\r\n    authorization: Authorization\r\n}\r\n\r\ninterface State {\r\n    authorization: Authorization,\r\n    profile: any,\r\n    event: any\r\n}\r\n\r\nclass Content extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.props.getAuth();\r\n\r\n\r\n        this.state = {\r\n            authorization: {\r\n                isAuth: false\r\n            },\r\n            event: {},\r\n            profile: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe();\r\n    }\r\n    \r\n    logout = (event: any, type = 'success', message = 'You have been logged out') => {\r\n        this.props.removeAuth();\r\n        this.props.cookies.remove('isAuth');\r\n        this.props.cookies.remove('token');\r\n        this.props.cookies.remove('secret');\r\n        this.props.cookies.remove('name');\r\n        sendMessage('notification', true, {type: type, message: message, duration: 3000});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"App\"}>\r\n                \r\n                <HashRouter>\r\n                    <AuthInit />\r\n                    <Backdrop />\r\n                    <div className=\"body\">\r\n                        <div className=\"body-content\">\r\n                            <Notification />\r\n                            <MuiThemeProvider theme={themes['themecolor_1']}>\r\n                                <Navigation {...this.props} logout={() => this.logout} event={this.state.event} />\r\n                                <Route path=\"/:tenant/home\" render={(props: any) => <Home {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                <Route path=\"/:tenant/login\" render={(props: any) => <Login {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                <Route path=\"/\" exact render={(props: any) => <Landing {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                <PrivateRoute path=\"/:tenant/test\" render={(props: any) => <Landing {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                            </MuiThemeProvider>\r\n                        </div>\r\n                    </div>\r\n                </HashRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  authorization: state.authorization,\r\n  profile: state.profile//,\r\n//   event: state.event\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth, getProfile, setProfile })(withCookies(Content));\r\n","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from '../../store';\r\nimport './style.scss';\r\nimport './button-oval.scss';\r\nimport './metric.scss';\r\nimport Content from './Content';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Content {...this.props} />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {CookiesProvider} from \"react-cookie\";\r\n\r\nReactDOM.render(<CookiesProvider><App /></CookiesProvider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}