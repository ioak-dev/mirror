{"version":3,"sources":["reducers/AuthReducer.ts","reducers/ProfileReducer.ts","reducers/index.ts","actions/types.ts","store.ts","events/SearchEvent.ts","components/Ux/SearchBar.tsx","events/MessageService.ts","components/Lib/RestTemplate.ts","components/Constants.ts","components/Home/index.tsx","components/Tenant/TenantService.ts","actions/AuthActions.ts","components/Ux/ArcText.tsx","components/Auth/AuthService.ts","components/Utils.ts","components/Auth/Login.tsx","components/Landing/index.tsx","components/Auth/AuthInit.tsx","actions/ProfileActions.ts","components/App/Backdrop.tsx","components/Notification/index.tsx","components/Navigation/Links.tsx","components/Navigation/Desktop.tsx","components/Navigation/Mobile.tsx","components/Navigation/index.tsx","components/Tenant/index.tsx","components/App/Content.tsx","components/App/index.tsx","serviceWorker.js","index.tsx","images/mirror_white.svg","images/cover.jpg","images/mirror_white_small.svg"],"names":["initialState","isAuth","firstname","lastname","theme","tenant","combineReducers","authorization","state","arguments","length","undefined","action","type","console","log","_objectSpread","payload","profile","ProfileReducer_objectSpread","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","searchTextChangedEvent$","BehaviorSubject","searchEvent$","Subject","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_isMounted","onSubmit","event","preventDefault","next","searchText","handleChange","target","value","_this2","subscribe","data","setState","react_default","a","createElement","method","noValidate","className","alt","name","spellCheck","autoComplete","autoFocus","placeholder","required","onChange","xmlns","width","height","viewBox","d","Component","subject","sendMessage","signal","receiveMessage","asObservable","baseUrl","process","httpGet","endpoint","headers","axios","get","httpPost","post","constants","API_URL_TENANT","API_URL_TENANT_BANNER","API_URL_TENANT_CREATE","API_TENANT_URL","API_URL_PRESIGNUP","API_URL_RESET","API_URL_CODE","API_URL_USER_DETAILS","API_URL","API_SIGNIN","API_SIGNUP","API_KEYS","API_JWT","pageYOffsetCutoff","Home","handleScroll","currentScrollPos","window","pageYOffset","showMainSearchBar","prevScrollpos","banner","addEventListener","setProfile","Home_objectSpread","match","params","removeEventListener","nextProps","tenantName","_this3","Authorization","token","then","response","Promise","resolve","status","cover","catch","Fragment","src","components_Ux_SearchBar","React","getAuth","dispatch","addAuth","removeAuth","ArcText","label","errorFields","id","preSignup","signin","problem","solution","password","ciphertext","JSON","stringify","sjcl","decrypt","email","error","message","encrypt","salt","config","cipher","iter","ks","CryptoJS","enc","Base64","Utf8","parse","isEmptyOrSpaces","str","queryString","require","Login","loginViaJwt","jwt","jwtToken","duration","success","login","signup","that","assertThisInitialized","test","toggle","logout","cookies","remove","secret","set","history","push","newuser","Login_objectSpread","defineProperty","currentTarget","sentEmailWithCode","sentPasswordChangeEmail","rand","Math","random","resetCode","location","search","query","Ux_ArcText","e","onClick","connect","withCookies","Landing","react_router_dom","to","activeClassName","AuthInit","getProfile","Backdrop","backdrop","Notification","spinner","notification","setTimeout","Links","toggleMenu","menu","Desktop","showSearchBar","showSettings","transparent","mirror_white","Navigation_Links","toggleSettings","Mobile","mirror_white_small","Navigation","toggleDarkMode","Navigation_objectSpread","changeTextSize","size","textSize","changeThemeColor","color","themeColor","visible","mobilemenu","chooseTheme","transparentNavBar","firstLoad","Navigation_Desktop","assign","Navigation_Mobile","withRouter","Tenant","_objectSpread3","Tenant_objectSpread","sentTenantUrl","submit","clearError","validate","createTenant","handleImageChange","files","preSignupData","formData","FormData","append","jwtPassword","Content-Type","pageNo","created","gotoTenantPage","repeatPassword","fieldName","setError","accept","themes","themecolor_1","getTheme","themecolor_2","themecolor_3","themecolor_4","createMuiTheme","palette","primary","main","secondary","Content","react_router_dom_min","Auth_AuthInit","App_Backdrop","components_Notification","ThemeProvider","components_Navigation","react_router","path","render","Home_Home","components_Auth_Login","exact","Landing_Landing","Tenant_Tenant","App","es","App_Content","Boolean","hostname","ReactDOM","es6","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d3f00f6b.chunk.js","sourcesContent":["import { GET_AUTH, ADD_AUTH, REMOVE_AUTH } from '../actions/types';\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    firstname: '',\r\n    lastname: ''\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_AUTH:\r\n            console.log('GET_AUTH reducer');\r\n            return {\r\n                ...state\r\n            };\r\n        case ADD_AUTH:\r\n            console.log('ADD_AUTH reducer');\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        \r\n        case REMOVE_AUTH:\r\n            console.log('REMOVE_AUTH reducer');\r\n            return {\r\n                ...state,\r\n                isAuth: false,\r\n                firstname: '',\r\n                lastname: ''\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_PROFILE, SET_PROFILE } from '../actions/types';\r\n\r\nconst initialState = {\r\n    theme: 'theme_light',\r\n    tenant: ''\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_PROFILE:\r\n            console.log('GET_PROFILE reducer');\r\n            return {\r\n                ...state\r\n            };\r\n        case SET_PROFILE:\r\n            console.log('SET_PROFILE reducer');\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport AuthReducer from './AuthReducer';\r\nimport ProfileReducer from './ProfileReducer';\r\n\r\nexport default combineReducers({\r\n    authorization: AuthReducer,\r\n    profile: ProfileReducer\r\n})","export const GET_AUTH = 'GET_AUTH';\r\nexport const ADD_AUTH = 'ADD_AUTH';\r\nexport const REMOVE_AUTH = 'REMOVE_AUTH';\r\n\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const SET_PROFILE = 'SET_PROFILE';","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware)//,\r\n        // (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;\r\n","import { BehaviorSubject, Subject } from 'rxjs';\r\n\r\nexport const searchTextChangedEvent$ = new BehaviorSubject<string>(\"\");\r\nexport const searchEvent$ = new Subject<string>();\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SearchBar.scss';\r\nimport { searchTextChangedEvent$, searchEvent$ } from '../../events/SearchEvent';\r\n\r\ninterface Props {\r\n  alt?: boolean\r\n}\r\n\r\ninterface State {\r\n  searchText: string\r\n}\r\n\r\nclass SearchBar extends Component<Props, State> {\r\n\r\n  _isMounted = false;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchText: \"\"\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    searchTextChangedEvent$.subscribe(data => {\r\n      if (this._isMounted) {\r\n        this.setState({\r\n          searchText: data\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n      this._isMounted = false;\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    searchEvent$.next(this.state.searchText);\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    searchTextChangedEvent$.next(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form method=\"GET\" onSubmit={this.onSubmit} noValidate>\r\n        <div className={\"search-bar\" + (this.props.alt ? \" alt\" : \"\")}>\r\n            <input name=\"searchText\" spellCheck={false} autoComplete=\"off\" autoFocus placeholder=\"Mirror, mirror, on the wall, who's the fairest of them all?\" required value={this.state.searchText} onChange={this.handleChange}></input>\r\n              <button className=\"icon\">\r\n                <i><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"></path></svg></i>\r\n              </button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import { Subject, Observable, BehaviorSubject } from 'rxjs';\r\nimport { Message } from '../components/Types/GeneralTypes';\r\n\r\nconst subject = new Subject<Message>();\r\n\r\nexport function sendMessage(name: string, signal: boolean = true, data?: {}) {\r\n    subject.next({\r\n        name: name,\r\n        signal: signal,\r\n        data: data\r\n    });\r\n}\r\n\r\nexport function clearMessages() {\r\n    subject.next();\r\n}\r\n\r\nexport function receiveMessage(): Observable<Message> {\r\n    return subject.asObservable();\r\n}","import axios from \"axios\";\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport function httpGet(endpoint: string, headers: any) {\r\n    return axios.get(baseUrl + endpoint, headers)\r\n        // .then(function(response) {\r\n        //     return Promise.resolve(response);\r\n        // }\r\n    // )\r\n}\r\n\r\nexport function httpPost(endpoint: string, payload: any, headers: any) {\r\n    return axios.post(baseUrl + endpoint, payload, headers)\r\n    //     .then(function(response) {\r\n    //         return Promise.resolve(response);\r\n    //     }\r\n    // )\r\n}\r\n\r\nexport function httpPut(endpoint: string, payload: any, headers: any) {\r\n    return axios.put(baseUrl + endpoint, payload, headers)\r\n    //     .then(function(response) {\r\n    //         return Promise.resolve(response);\r\n    //     }\r\n    // )\r\n}\r\n\r\nexport function httpDelete(endpoint: string, headers: any) {\r\n    return axios.delete(baseUrl + endpoint, headers)\r\n    //     .then(function(response) {\r\n    //         return Promise.resolve(response);\r\n    //     }\r\n    // )\r\n}\r\n","export const constants ={\r\n    API_URL_TENANT:\"/tenant\",\r\n    API_URL_TENANT_BANNER:\"/tenant/banner\",\r\n    API_URL_TENANT_CREATE:\"/tenant/create\",\r\n    API_TENANT_URL: \"/tenant/sendURL\",\r\n    \r\n    API_URL_PRESIGNUP: \"/auth/keys\",\r\n    API_URL_RESET: \"/auth/reset\",\r\n    API_URL_CODE:\"/auth/sendResetCode\",\r\n    API_URL_USER_DETAILS: \"/user/details\",\r\n\r\n    API_URL:\"/auth/\",\r\n    API_SIGNIN:\"/signin\",\r\n    API_SIGNUP:\"/signup\",\r\n    API_KEYS:\"/keys\",\r\n    API_JWT: \"/signin/jwt\"\r\n}\r\n    ","import React from 'react';\r\nimport './style.scss';\r\nimport cover from '../../images/cover.jpg';\r\nimport SearchBar from '../Ux/SearchBar';\r\n\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\nimport { searchTextChangedEvent$, searchEvent$ } from '../../events/SearchEvent';\r\nimport { getBanner } from '../Tenant/TenantService';\r\n\r\n\r\nconst pageYOffsetCutoff = 10;\r\n\r\ninterface Props {\r\n  setProfile: Function,\r\n  profile: any,\r\n  match: any\r\n}\r\n\r\ninterface State {\r\n  banner: any,\r\n  prevScrollpos: number,\r\n  showMainSearchBar: boolean,\r\n  searchText: string\r\n}\r\n\r\nexport default class Home extends React.Component<Props, State> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      banner: null,\r\n      prevScrollpos: window.pageYOffset,\r\n      showMainSearchBar: true,\r\n      searchText: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // sendMessage('navbar-transparency', true);\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n    this.props.setProfile({\r\n      ...this.props.profile,\r\n      tenant: this.props.match.params.tenant\r\n    })\r\n\r\n    searchEvent$.subscribe(searchText => {\r\n      this.setState({\r\n        searchText: searchText\r\n      });\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.handleScroll);\r\n    sendMessage('show-navbar-element', false);\r\n    searchTextChangedEvent$.next(\"\");\r\n    // sendMessage('navbar-transparency', false);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n      if (nextProps.authorization) {\r\n        getBanner(this.props.match.params.tenant,  {\r\n          headers: {\r\n              Authorization: nextProps.authorization.token\r\n          }\r\n        }).then ((response) => {\r\n          if (response.status === 200 && response.data) {\r\n            this.setState({banner: 'data:image/jpeg;base64,' + response.data});\r\n          } else {\r\n            this.setState({banner: cover});\r\n          }\r\n        }).catch(() => {\r\n          this.setState({banner: cover});\r\n        })\r\n      }\r\n  }\r\n\r\n  handleScroll = () => {\r\n    // const { prevScrollpos } = this.state;\r\n  \r\n    const currentScrollPos = window.pageYOffset;\r\n    const showMainSearchBar = currentScrollPos < pageYOffsetCutoff;\r\n\r\n    if (this.state.showMainSearchBar !== showMainSearchBar) {\r\n      if (!showMainSearchBar) {\r\n        // sendMessage('navbar-transparency', false);\r\n        sendMessage('show-navbar-element', true);\r\n      } else {\r\n        // sendMessage('navbar-transparency', true);\r\n        sendMessage('show-navbar-element', false);\r\n      }\r\n    }\r\n  \r\n    this.setState({\r\n      prevScrollpos: currentScrollPos,\r\n      showMainSearchBar\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"home full\">\r\n            <div className='cover'>\r\n              {/* <img src={cover}/> */}\r\n              <img src={this.state.banner} alt=\"Red dot\" />\r\n            </div>\r\n            {this.state.showMainSearchBar && <SearchBar />}\r\n\r\n            <div className='search-results'>\r\n              <br /> Search results goes here\r\n              <br /> {this.state.searchText}\r\n            </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","import { httpGet, httpPost, httpPut } from \"../Lib/RestTemplate\";\r\nimport { constants } from '../Constants';\r\n\r\nexport function createTenant(data) {\r\n    return httpPost(constants.API_URL_TENANT_CREATE, data, null)\r\n        .then(function(response) {\r\n            return Promise.resolve(response);\r\n        })\r\n}\r\n\r\nexport function sentTenantUrl(data) {\r\n    return httpPost(constants.API_TENANT_URL, data, null)\r\n        .then(function(response) {\r\n            return Promise.resolve(response.status);\r\n        })\r\n}\r\n    \r\n\r\n\r\nexport function getTenant(tenantName, headers) {\r\n    return httpGet(constants.API_URL_TENANT + '/' + tenantName, headers)\r\n        .then(function(response) {\r\n            return Promise.resolve(response);\r\n        })\r\n}\r\n\r\n\r\nexport function getBanner(tenantName, headers) {\r\n    return httpGet(constants.API_URL_TENANT_BANNER + '/' + tenantName, headers)\r\n        .then(function(response) {\r\n            return Promise.resolve(response);\r\n        })\r\n}\r\n    \r\n\r\n\r\n","import { GET_AUTH, REMOVE_AUTH, ADD_AUTH } from './types';\r\n\r\nexport const getAuth = () => dispatch => {\r\n    dispatch({\r\n        type: GET_AUTH\r\n    });\r\n}\r\n\r\nexport const addAuth = (data) => dispatch => {\r\n    dispatch({\r\n        type: ADD_AUTH,\r\n        payload: data\r\n    });\r\n}\r\n\r\nexport const removeAuth = () => dispatch => {\r\n    dispatch({\r\n        type: REMOVE_AUTH\r\n    });\r\n}","import React from 'react';\r\nimport './ArcText.scss';\r\n\r\ninterface Props {\r\n    label: string,\r\n    id: string,\r\n    data: any,\r\n    type?: string,\r\n    handleChange: any,\r\n    errorFields?: any\r\n}\r\nfunction ArcText(props: Props) {\r\n    return (\r\n        <div className=\"arc-text-field\">\r\n            <label>{props.label}</label>\r\n            <input autoComplete=\"off\" className={props.errorFields && props.errorFields[props.id] ? \"error\" : \"\"}type={props.type ? props.type : \"text\"} name={props.id} value={props.data[props.id]} onChange={props.handleChange}></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nArcText.propTypes = {\r\n};\r\n\r\nexport default ArcText;\r\n","import { httpGet, httpPost, httpPut } from \"../Lib/RestTemplate\";\r\nimport sjcl from 'ioak-sjcl';\r\nimport CryptoJS from 'crypto-js';\r\nimport { constants } from '../Constants';\r\n\r\n\r\nexport function preSignup(data) {\r\n    return httpGet(constants.API_URL+data.name+constants.API_KEYS, null)\r\n        .then(function(response) {\r\n          return Promise.resolve(response);\r\n        })\r\n}\r\n\r\nexport function signup(data) {\r\n    return httpPost(constants.API_URL+data.tenantName+constants.API_SIGNUP, {\r\n        email: data.email,\r\n        problem: encrypt(data.password, data.solution, data.salt),\r\n        solution: data.solution\r\n        }, null)\r\n        .then(function(response) {\r\n            return Promise.resolve(response.status);\r\n        })\r\n}\r\n\r\nexport function createTenant(data) {\r\n    const formData = new FormData();\r\n    formData.append('tenantName', data.tenantName);\r\n    formData.append('email', data.email);\r\n    formData.append('jwtPassword', data.jwtPassword);\r\n    formData.append('problem', encrypt(data.password, data.solution, data.salt));\r\n    formData.append('solution', data.solution);\r\n    if(data.banner) {\r\n        formData.append('banner', data.banner, 'banner.jpg');\r\n    }\r\n    return httpPost(constants.API_URL_TENANT_CREATE, formData, {'Content-Type': 'multipart/form-data'})\r\n        .then(function(response) {\r\n            return Promise.resolve(response);\r\n        })\r\n}\r\n\r\nexport function preSignin(data) {\r\n    return httpGet(constants.API_URL+data.name+constants.API_KEYS + '/' + data.email, null)\r\n        .then(response => Promise.resolve(response))\r\n        .catch(error => Promise.resolve(error.response))\r\n}\r\n\r\nexport function signin(data, problem) {\r\n    try {\r\n        let solution = decrypt(data.password, JSON.stringify(problem));\r\n        return httpPost(constants.API_URL+data.name+constants.API_SIGNIN, {\r\n            email: data.email, \r\n            solution: solution\r\n            }, null)\r\n            .then(function(response) {\r\n                return Promise.resolve(response);\r\n            })\r\n        \r\n    } catch(error) {\r\n        if (error.message === \"ccm: tag doesn't match\") {\r\n            return Promise.resolve({\r\n                status: 401\r\n            });\r\n        } else {\r\n            return Promise.resolve(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function signinWithJwt(data){\r\n\r\n    return httpPost(constants.API_URL + data.tenantName + constants.API_JWT, {\r\n        jwtToken: data.jwt\r\n    }, null)\r\n        .then(function(response){\r\n            return Promise.resolve(response);\r\n        });\r\n}\r\n\r\nexport function sentPasswordChangeEmail(data, type) {\r\n\r\n    return httpPost(constants.API_URL_CODE, data, null)\r\n        .then(function(response) {\r\n            return Promise.resolve(response.status);\r\n        })\r\n}\r\n\r\nexport function resetPassword(data, type) {\r\n\r\n    return httpGet(constants.API_URL_PRESIGNUP, null)\r\n        .then(function(response) {\r\n            if (response.status === 200) {\r\n                let newData = {};\r\n                if (type && type === 'password') {\r\n                    newData = {\r\n                        problem: encrypt(data.password, response.data.solution, response.data.salt),\r\n                        solution: response.data.solution,\r\n                        resetCode: data.resetCode\r\n                    }\r\n\r\n                }\r\n\r\n                return httpPost(constants.API_URL_RESET, newData, null)\r\n                    .then(function(response) {\r\n                        return Promise.resolve(response.status);\r\n                    })\r\n\r\n\r\n            }\r\n        })\r\n}\r\n\r\n\r\n\r\nfunction encrypt(password, message, salt) {\r\n    const config = {\r\n        cipher: 'aes',\r\n        iter: '12000',\r\n        ks: 256,\r\n        salt: CryptoJS.enc.Base64.stringify((CryptoJS.enc.Utf8.parse(salt)))\r\n    }\r\n    return sjcl.encrypt(password, message, config);\r\n}\r\n\r\nfunction decrypt(password, ciphertext) {\r\n    return sjcl.decrypt(password, ciphertext);\r\n}\r\n","export function isEmptyOrSpaces(str){\r\n    return str === null || str.match(/^ *$/) !== null;\r\n}\r\n\r\nexport function match(text, words) {\r\n    let found = false;\r\n    if (words) {\r\n        words.split(' ').forEach(word => {\r\n            if (text.match(new RegExp('(\\\\w*'+ word +'\\\\w*)','gi'))) {\r\n                found = true;\r\n            }\r\n        });\r\n    }\r\n    return found;\r\n}\r\n\r\nexport function sort(array, property, isReverseOrder) {\r\n    const result = array.sort(function(o1,o2){\r\n        if (isReverseOrder) {\r\n            return o1[property] > o2[property] ? -1 : o1[property] < o2[property] ? 1 : 0;\r\n        } else {\r\n            return o1[property] < o2[property] ? -1 : o1[property] > o2[property] ? 1 : 0;\r\n        }\r\n    });\r\n\r\n    return result;\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport {withCookies} from 'react-cookie';\r\nimport './Login.scss';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport ArcText from '../Ux/ArcText';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport {signinWithJwt, signin, preSignin,sentPasswordChangeEmail, preSignup, signup} from './AuthService';\r\nimport {isEmptyOrSpaces} from \"../Utils\";\r\n\r\nconst queryString = require('query-string');\r\n\r\ninterface Props {\r\n    setProfile: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    cookies: any,\r\n    history: any,\r\n    profile:any,\r\n    match: any,\r\n    location:any,\r\n    authorization: Authorization\r\n}\r\n\r\ninterface State {\r\n    newuser: boolean,\r\n    name: string,\r\n    email: string,\r\n    password: string\r\n}\r\n\r\nclass Login extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newuser: false,\r\n            name:'',\r\n            email:'',\r\n            password:''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.location.search){\r\n            const query = queryString.parse(this.props.location.search)\r\n            if (query && query.type === 'signup') {\r\n                this.setState({\r\n                    newuser : true\r\n                })\r\n            }\r\n            if (query && query.jwt) {\r\n                this.loginViaJwt(query.jwt);\r\n            }\r\n        }\r\n\r\n        this.props.setProfile({\r\n            ...this.props.profile,\r\n            tenant: this.props.match.params.tenant\r\n        })\r\n    }\r\n\r\n    loginViaJwt = (jwt: string) => {\r\n        signinWithJwt({\r\n            tenantName: this.props.match.params.tenant,\r\n            jwt:jwt\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 200) {\r\n                sendMessage('notification', true, {message: 'Signed In successfully', type: 'success', duration: 3000});\r\n                this.success(response.data);\r\n            } else if (response.status === 500) {\r\n                sendMessage('notification', true, {message: 'Signature verification failed', type: 'failure', duration: 3000});\r\n            } else {\r\n                sendMessage('notification', true, {message: 'Unknown response from server. Please try again or at a later time', type: 'failure', duration: 3000});\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            sendMessage('notification', true, {'type': 'failure', message: 'Unknown error. Please try again or at a later time', duration: 3000});\r\n        });\r\n    }\r\n\r\n    login = (event) => {\r\n        event.preventDefault();\r\n        sendMessage('notification', false);\r\n        sendMessage('spinner');\r\n        if (this.state.email && this.state.password) {\r\n            preSignin({\r\n                name:this.props.profile.tenant,\r\n                email:this.state.email})\r\n                .then((response) => {\r\n                    if (response.status === 200) {\r\n                    signin({\r\n                        name:this.props.profile.tenant,\r\n                        email: this.state.email,\r\n                        password: this.state.password\r\n                        }, response.data)\r\n                        .then((response) => {\r\n                            if (response.status === 200) {\r\n                                sendMessage('notification', true, {message: 'Signed In successfully', type: 'success', duration: 3000});\r\n                                this.success(response.data);\r\n                            } else if (response.status === 401) {\r\n                                sendMessage('notification', true, {message: 'Incorrect passphrase', type: 'failure', duration: 3000});\r\n                            } else {\r\n                                sendMessage('notification', true, {message: 'Unknown response from server. Please try again or at a later time', type: 'failure', duration: 3000});\r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                            sendMessage('notification', true, {'type': 'failure', message: 'Unknown error. Please try again or at a later time', duration: 3000});\r\n                        })\r\n                } else if (response.status === 404) {\r\n                    sendMessage('notification', true, {message: 'User name does not exist', type: 'failure', duration: 3000});\r\n                }\r\n            })\r\n\r\n            \r\n        } else {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Username/password cannot be empty', duration: 3000});\r\n        }\r\n    }\r\n\r\n    \r\n    signup =(event) =>{\r\n        event.preventDefault()\r\n        const that = this\r\n        sendMessage('notification', false)\r\n        sendMessage('spinner')\r\n        if(this.state.name && this.state.password && this.state.email){\r\n            if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.state.email))) {\r\n                sendMessage('notification', true, {type: 'failure', message: 'Email ID is invalid', duration: 3000});\r\n                return;\r\n            }\r\n            preSignup({name:that.props.profile.tenant}).then((response) =>{\r\n                if(response.status ===200){\r\n                    signup({\r\n                        tenantName: that.props.profile.tenant,\r\n                        email: that.state.email,\r\n                        password: that.state.password,\r\n                        solution: response.data.solution,\r\n                        salt: response.data.salt\r\n                    })\r\n                    .then(function(status){\r\n                        if(status===200){\r\n                            sendMessage('notification', true, {'type': 'success', message: 'Your account has been created. You can login now', duration: 3000});\r\n                            that.setState({\r\n                                email:'',\r\n                                password:''\r\n                            }); \r\n                            that.toggle();\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        sendMessage('notification', true, {'type': 'failure', message: 'Unknown error. Please try again or at a later time', duration: 3000});\r\n                    });\r\n                }\r\n            });\r\n        }  else if (!this.state.name) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Name cannot be empty', duration: 3000});\r\n        } else if (!this.state.email) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Email cannot be empty', duration: 3000});\r\n        } else if (!this.state.password) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Password cannot be empty', duration: 3000});\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        this.props.removeAuth();\r\n        this.props.cookies.remove('isAuth');\r\n    }\r\n\r\n    success = (data) => {\r\n        this.props.addAuth({\r\n            isAuth: true,\r\n            token: data.token,\r\n            secret: data.secret,\r\n            name: data.name\r\n\r\n        });\r\n        sendMessage('loggedin', true);\r\n        this.props.cookies.set('isAuth', true);\r\n        this.props.cookies.set('token', data.token);\r\n        this.props.cookies.set('secret', data.secret);\r\n        this.props.cookies.set('name', data.name);\r\n        this.props.cookies.set('email', data.email);\r\n        this.props.history.push(\"/\");    \r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            newuser: !this.state.newuser\r\n        });\r\n    }\r\n\r\n    handleChange= (event) => {\r\n        this.setState(\r\n            {\r\n                ...this.state,\r\n                [event.currentTarget.name]: event.currentTarget.value\r\n            }\r\n        )\r\n    }\r\n\r\n    sentEmailWithCode = () => {\r\n        if (isEmptyOrSpaces(this.state.email)) {\r\n            sendMessage('notification', true, {message: 'Email cannot be empty', type: 'failure', duration: 5000});\r\n            return;\r\n        }\r\n\r\n        this.sentPasswordChangeEmail('password');\r\n\r\n    }\r\n\r\n    sentPasswordChangeEmail = (type) => {\r\n        const min = 1;\r\n        const max = 100;\r\n        const rand = min + Math.random() * (max - min);\r\n        sentPasswordChangeEmail({\r\n            email: this.state.email,\r\n            resetCode: rand\r\n        }, type)\r\n            .then((response: any) => {\r\n                if (response === 200) {\r\n                    if (type === 'password') {\r\n                        sendMessage('notification', true, {message: 'Password sent successfully', type: 'success', duration: 3000});\r\n                    }\r\n                } else {\r\n                    sendMessage('notification', true, {'type': 'failure', message: 'Invalid Email error', duration: 3000});\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                sendMessage('notification', true, {'type': 'failure', message: 'Bad request', duration: 3000});\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"login\">\r\n                {!this.state.newuser && <div className=\"container\">\r\n                    <form method=\"GET\" onSubmit={this.login} noValidate>\r\n                        \r\n                        <div className=\"form\">\r\n                            <ArcText label=\"E-mail\" id=\"email\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                            <ArcText label=\"Password\" type=\"password\"  id=\"password\"   data={this.state} handleChange={e => this.handleChange(e)} />\r\n                        </div>\r\n                        <br />\r\n                        <button className=\"primary animate out right\"  onClick={this.login}>Sign In</button>\r\n                        <br /> <br />\r\n                        Don't have an account? <button className=\"default animate right small\"  onClick={this.toggle}>Sign Up</button>\r\n                    </form>\r\n                    <br />\r\n                    <button className=\"default animate right small\" onClick={this.sentEmailWithCode}>Forgot password ?</button>\r\n                </div>}\r\n\r\n                {this.state.newuser && <div className=\"container\">\r\n                    <form method=\"GET\" onSubmit={this.signup} noValidate>\r\n                        <h1>Sign Up</h1>\r\n                        <div className=\"form\">\r\n                        <ArcText label=\"Name\" id=\"name\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                        <ArcText label=\"E-mail\" id=\"email\" data={this.state} handleChange ={e=> this.handleChange(e)} />\r\n                        <ArcText label=\"Password\" type=\"password\" id=\"password\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                        <ArcText label=\"Repeat Password\" type=\"password\"  id=\"repeatpassword\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                        </div>\r\n                        <br />\r\n                        <button className=\"primary block\" onClick={this.signup}>Create Account</button>\r\n                        <br /> <br />\r\n                        Already have an account? <button className=\"secondary block\" onClick={this.toggle}>Sign In</button> \r\n                    </form>\r\n                </div>\r\n                }\r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authorization: state.authorization\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(withCookies(Login));","import React from 'react';\r\nimport './style.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default class Landing extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"space-bottom-4\">\r\n          <h3>Mirror rorriM</h3>\r\n          <p><em><b>Queen</b></em> Magic Mirror on the wall, who now is the fairest one of all?</p>\r\n          <p><em><b>Magic Mirror</b></em> Over the seven jewelled hills, beyond the seventh fall, in the cottage of the seven dwarfs, dwells Snow White, fairest one of all.</p>\r\n          <p><em><b>Queen</b></em> Snow White lies dead in the forest.  The huntsman has brought me proof. [holds up her opened box] Behold, her heart.</p>\r\n          <p><em><b>Magic Mirror</b></em> Snow White still lives, the fairest in the land. 'Tis the heart of a pig you hold in your hand.</p>\r\n          <p><em><b>Queen</b></em> [repulsed] The heart of a pig?! Then I've been tricked!</p>\r\n        </div>\r\n        <div className=\"action\">\r\n          <NavLink to=\"/tenant\" className=\"navitem\" activeClassName=\"active\"><button className=\"primary animate out right\">Create Tenant</button></NavLink>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport PropTypes from 'prop-types';\r\nimport {withCookies, ReactCookieProps} from 'react-cookie';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\n\r\ninterface Props extends ReactCookieProps {\r\n    authorization: Authorization,\r\n    addAuth: Function,\r\n    getAuth: Function,\r\n    removeAuth: Function,\r\n    cookies: any\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nclass AuthInit extends Component<Props, State> {\r\n    componentWillMount() {\r\n        if (!this.props.authorization.isAuth && this.props.cookies.get('isAuth')) {\r\n            this.props.addAuth({\r\n                isAuth: true,\r\n                token: this.props.cookies.get('token'),\r\n                secret: this.props.cookies.get('secret'),\r\n                name: this.props.cookies.get('name')\r\n            });\r\n        }\r\n        this.props.getAuth();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authorization: state.authorization\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(withCookies(AuthInit));","import { GET_PROFILE, SET_PROFILE } from './types';\r\n\r\nexport const getProfile = () => dispatch => {\r\n    dispatch({\r\n        type: GET_PROFILE\r\n    });\r\n}\r\n\r\nexport const setProfile = (payload) => dispatch => {\r\n    dispatch({\r\n        type: SET_PROFILE,\r\n        payload: payload\r\n    });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { receiveMessage } from '../../events/MessageService';\r\nimport { Message } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n}\r\n\r\ninterface State {\r\n    backdrop: string\r\n}\r\n\r\nclass Backdrop extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            backdrop: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe(\r\n            message => {\r\n                if (message.name === 'dialog') {\r\n\r\n                }\r\n            }\r\n        )\r\n        // if (nextProps.event && nextProps.event.name === 'dialog') {\r\n        //     if (nextProps.event.signal) {\r\n        //         this.setState({\r\n        //             backdrop: 'backdrop-fade'\r\n        //         })\r\n        //     } else {\r\n        //         this.setState({\r\n        //             backdrop: ''\r\n        //         })\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.backdrop}></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Backdrop;","import React, { Component } from 'react';\r\nimport './style.scss';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n}\r\n\r\ninterface State {\r\n    notification: any,\r\n    spinner: boolean\r\n}\r\n\r\nclass Notification extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            spinner: false,\r\n            notification: null\r\n        }\r\n    }\r\n    componentWillMount() {\r\n        receiveMessage().subscribe(message => {\r\n            if (message.name === 'notification') {\r\n                if (!message.signal) {\r\n                    this.setState({\r\n                        notification: null,\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        notification: message.data,\r\n                        spinner: false\r\n                    })\r\n                    \r\n                    if (message.data && message.data.duration) {\r\n                        setTimeout(() => {\r\n                            sendMessage('notification', false);\r\n                        }, message.data.duration);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (message.name === 'spinner') {\r\n                this.setState({\r\n                    spinner: message.signal\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    processNextProps(nextProps) {\r\n        if (nextProps.event && nextProps.event.name === 'spinner') {\r\n            this.setState({\r\n                spinner: nextProps.event.signal\r\n            })\r\n        }\r\n\r\n        if (nextProps.event && nextProps.event.name === 'notification') {\r\n            if (!nextProps.event.signal) {\r\n                this.setState({\r\n                    notification: null,\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    notification: nextProps.event.data,\r\n                    spinner: false\r\n                })\r\n                \r\n                if (nextProps.event.data.duration) {\r\n                    setTimeout(() => {\r\n                        // this.props.sendEvent('notification', false);\r\n                    }, nextProps.event.data.duration);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            {this.state.notification && <div className={\"notification \" + this.state.notification.type}><div className=\"message\">{this.state.notification.message}</div></div>}\r\n            {this.state.spinner && <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>}\r\n            {/* {this.props.spinner && <div className=\"lds-facebook\"><div></div><div></div><div></div></div>} */}\r\n            {/* {this.props.spinner && <div className=\"lds-dual-ring\"></div>} */}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Notification;","import React, { Component } from 'react';\r\n\r\nimport './style.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n    authorization: Authorization,\r\n    profile: Profile\r\n}\r\n\r\ninterface State {\r\n    menu: boolean\r\n}\r\n\r\nclass Links extends Component<Props, State> {\r\n    toggleMenu = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"links\">\r\n                {this.props.authorization.isAuth &&\r\n                    <>\r\n                    <NavLink to={\"/\" + this.props.profile.tenant + \"/home\"} className=\"navitem\" activeClassName=\"active\">Home</NavLink>\r\n                    <NavLink to={\"/\" + this.props.profile.tenant + \"/login\"} className=\"navitem\" activeClassName=\"active\">Login</NavLink>\r\n                    </>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Links;","import React, { Component } from 'react';\r\n\r\nimport './style.scss';\r\nimport mirror_white from '../../images/mirror_white.svg';\r\nimport mirror_black from '../../images/mirror_black.svg';\r\nimport Links from './Links';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\n// import SearchBar from '../Ux/SearchBar';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\nimport SearchBar from '../Ux/SearchBar';\r\n\r\ninterface Props {    \r\n    sendEvent: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    authorization: Authorization\r\n    getProfile: Function,\r\n    profile: Profile,\r\n    login: Function,\r\n    transparent: boolean,\r\n    logout: Function,\r\n    toggleSettings: any\r\n}\r\n\r\ninterface State {\r\n    showSettings: boolean,\r\n    showSearchBar: boolean\r\n}\r\n\r\nclass Desktop extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.state = {\r\n            showSearchBar: false,\r\n            showSettings: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe(message => {\r\n            if (message.name === 'show-navbar-element') {\r\n                this.setState({\r\n                    showSearchBar: message.signal\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    signin = (type) => {\r\n        this.props.login(type);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={(this.props.transparent ? \"navbar desktop transparent\" : \"navbar desktop\")}>\r\n                <div className=\"left\">\r\n                    {!this.props.transparent && this.props.profile.theme === 'theme_light' && <img className=\"logo\" src={mirror_white} alt=\"Curate logo\" />}\r\n                    {(this.props.transparent || this.props.profile.theme === 'theme_dark') && <img className=\"logo\" src={mirror_white} alt=\"Curate logo\" />}\r\n                    <Links authorization={this.props.authorization} profile={this.props.profile}/>\r\n                    {this.state.showSearchBar && <SearchBar alt />}\r\n                </div>\r\n                <div className=\"right\">\r\n                    <div className=\"action\">\r\n                        {/* <button className=\"default disabled small\" onClick={this.props.toggleSettings}><i className=\"material-icons\">palette</i>Theme</button> */}\r\n                        {this.props.authorization.isAuth && \r\n                            <button className=\"primary animate in alt right align-left small\" onClick={this.props.toggleSettings}><i className=\"material-icons\">brush</i>Action 1</button>}\r\n                        {this.props.authorization.isAuth && \r\n                            <button className=\"primary animate out alt right align-right small\" onClick={this.props.logout()}><i className=\"material-icons\">power_settings_new</i>Logout</button>}\r\n                        {!this.props.authorization.isAuth && \r\n                            <button className=\"primary animate in alt right align-left small\" onClick={() => this.signin('signin')}><i className=\"material-icons\">person</i>Login</button>}\r\n                        {!this.props.authorization.isAuth && \r\n                            <button className=\"primary animate in alt right align-right small\" onClick={() => this.signin('signup')}><i className=\"material-icons\">person_add</i>Signup</button>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Desktop;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './style.scss';\r\nimport mirror_white from '../../images/mirror_white.svg';\r\nimport mirror_white_small from '../../images/mirror_white_small.svg';\r\nimport mirror_black from '../../images/mirror_black.svg';\r\nimport Links from './Links';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport SearchBar from '../Ux/SearchBar';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\n// import SearchBar from '../Ux/SearchBar';\r\n\r\ninterface Props {    \r\n    sendEvent: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    authorization: Authorization\r\n    getProfile: Function,\r\n    profile: Profile,\r\n    login: Function,\r\n    transparent: boolean,\r\n    logout: Function,\r\n    toggleSettings: any\r\n}\r\n\r\ninterface State {\r\n    menu: boolean,\r\n    showSearchBar: boolean\r\n}\r\n\r\nclass Mobile extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.state = {\r\n            showSearchBar: false,\r\n            menu: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe(message => {\r\n            if (message.name === 'show-navbar-element') {\r\n                this.setState({\r\n                    showSearchBar: message.signal\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    signin = (type) => {\r\n        this.props.login(type);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className={(this.props.transparent ? \"navbar mobile transparent\" : \"navbar mobile\")}>\r\n                <div className=\"left\">\r\n                    {!this.state.showSearchBar && !this.props.transparent && this.props.profile.theme === 'theme_light' && <img className=\"logo\" src={mirror_white} alt=\"Mirror logo\" />}\r\n                    {!this.state.showSearchBar && (this.props.transparent || this.props.profile.theme === 'theme_dark') && <img className=\"logo\" src={mirror_white} alt=\"Mirror logo\" />}\r\n                    {this.state.showSearchBar && !this.props.transparent && this.props.profile.theme === 'theme_light' && <img className=\"logo\" src={mirror_white_small} alt=\"Mirror logo\" />}\r\n                    {this.state.showSearchBar && (this.props.transparent || this.props.profile.theme === 'theme_dark') && <img className=\"logo\" src={mirror_white_small} alt=\"Mirror logo\" />}\r\n                    {this.state.showSearchBar && <SearchBar alt />}\r\n                    {/* links */}\r\n                </div>\r\n                <div className=\"right\">\r\n                    {/* <div className=\"settings-icon\" onClick={this.props.toggleSettings}><i className=\"material-icons\">settings</i></div> */}\r\n                    <div className={(this.state.menu ? \"menu active\" : \"menu\")} onClick={this.toggleMenu}><div></div></div>\r\n                    {/* action login */}\r\n                </div>\r\n            </div>\r\n            <div className={(this.state.menu ? \"slider show\" : \"slider hide\")} onClick={this.toggleMenu}>\r\n                <div className={(this.state.menu ? \"container\": \"container hidetext\")} onClick={this.toggleMenu}>\r\n                    <div className=\"action\">\r\n                        <div className=\"settings-icon\" onClick={this.props.toggleSettings}>\r\n                            {this.props.authorization.isAuth && <button className=\"invert animate alt small\" onClick={this.props.toggleSettings}><i className=\"material-icons\">brush</i>Action 1</button>}\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                            {this.props.authorization.isAuth && <button className=\"invert animate alt small\" onClick={this.props.logout()}><i className=\"material-icons\">power_settings_new</i>Logout</button>}\r\n                            {!this.props.authorization.isAuth && <button className=\"invert animate alt small left\" onClick={() => this.signin('signin')}><i className=\"material-icons\">person</i>Login</button>}\r\n                            {!this.props.authorization.isAuth && <button className=\"invert animate alt small right\" onClick={() => this.signin('signup')}><i className=\"material-icons\">person_add</i>Signup</button>}\r\n                        </div>\r\n                    </div>\r\n                    <Links authorization={this.props.authorization} profile={this.props.profile}/>\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Mobile;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {withRouter} from 'react-router'\r\nimport { getProfile, setProfile } from '../../actions/ProfileActions';\r\nimport {withCookies} from 'react-cookie';\r\n\r\nimport './style.scss';\r\nimport Desktop from './Desktop';\r\nimport Mobile from './Mobile';\r\n\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\n\r\ninterface Props {    \r\n    sendEvent: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    authorization: Authorization,\r\n    getProfile: Function,\r\n    setProfile: Function,\r\n    profile: Profile,\r\n    login: Function,\r\n    transparent: boolean,\r\n    logout: Function,\r\n    toggleSettings: any,\r\n    history: any,\r\n    cookies: any,\r\n    location: any,\r\n    match: any\r\n}\r\n\r\ninterface State {\r\n    visible: boolean,\r\n    mobilemenu: string,\r\n    chooseTheme: boolean,\r\n    showSettings: boolean,\r\n    transparentNavBar: boolean,\r\n    firstLoad: boolean\r\n}\r\n\r\nclass Navigation extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.state = {\r\n            visible: false,\r\n            mobilemenu: 'hide',\r\n            chooseTheme: false,\r\n            showSettings: false,\r\n            transparentNavBar: false,\r\n            firstLoad: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe(message => {\r\n            if (message.name === 'navbar-transparency') {\r\n                this.setState({\r\n                    transparentNavBar: message.signal\r\n                })\r\n            }\r\n            if (message.name === 'loggedin') {\r\n                // this.props.reloadProfile(nextProps.authorization);\r\n                this.setState({\r\n                    firstLoad: false\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.state.firstLoad && nextProps.authorization && nextProps.authorization.isAuth) {\r\n            // this.props.reloadProfile(nextProps.authorization);\r\n            this.setState({\r\n                firstLoad: false\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleDarkMode = () => {\r\n        if (this.props.profile.theme === 'theme_dark') {\r\n            this.props.setProfile({\r\n                ...this.props.profile,\r\n                theme: 'theme_light'\r\n            })   \r\n        } else  {\r\n            this.props.setProfile({\r\n                ...this.props.profile,\r\n                theme: 'theme_dark'\r\n            })   \r\n        }\r\n    }\r\n\r\n    changeTextSize = (size) => {\r\n        this.props.setProfile({\r\n            ...this.props.profile,\r\n            textSize: size\r\n        })\r\n    }\r\n\r\n    changeThemeColor = (color) => {\r\n        this.props.setProfile({\r\n            ...this.props.profile,\r\n            themeColor: color\r\n        })\r\n    }\r\n\r\n    login = (type) => {\r\n        this.props.history.push('/' + this.props.profile.tenant + '/login?type=' + type);\r\n    }\r\n\r\n    toggleSettings = () => {\r\n        this.setState({\r\n            showSettings: !this.state.showSettings\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"nav\">\r\n                <Desktop {...this.props} logout={this.props.logout} login={this.login} toggleSettings={this.toggleSettings} transparent={this.state.transparentNavBar} />\r\n                <Mobile {...this.props} logout={this.props.logout} login={this.login} toggleSettings={this.toggleSettings} transparent={this.state.transparentNavBar} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProfile, setProfile })(withCookies(withRouter(Navigation)));","import React from 'react';\r\nimport './style.scss';\r\nimport ArcText from '../Ux/ArcText';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport { sentTenantUrl } from './TenantService'\r\nimport {preSignup, createTenant } from '../Auth/AuthService'\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport { isEmptyOrSpaces } from '../Utils';\r\n\r\ninterface Props {\r\n  getProfile: Function,\r\n  profile: Profile,\r\n  history: any\r\n}\r\ninterface State {\r\n  name: string,\r\n  email: string,\r\n  pageNo: number,\r\n  password: string,\r\n  repeatPassword: string,\r\n  jwtPassword:string,\r\n  banner: any,\r\n  created: boolean,\r\n  errorFields: {\r\n    name: boolean,\r\n    email: boolean,\r\n    password: boolean,\r\n    repeatPassword: boolean,\r\n    jwtPassword:boolean\r\n  }\r\n}\r\nexport default class Tenant extends React.Component<Props, State> {\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.props.getProfile();\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      repeatPassword: '',\r\n      jwtPassword:'',\r\n      banner: null,\r\n      pageNo: 1,\r\n      created: false,\r\n      errorFields: {\r\n        name: false,\r\n        email: false,\r\n        password: false,\r\n        repeatPassword: false,\r\n        jwtPassword: false\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n      this.setState(\r\n          {\r\n              ...this.state,\r\n              [event.currentTarget.name]: event.currentTarget.value,\r\n              errorFields: {\r\n                ...this.state.errorFields,\r\n                [event.currentTarget.name]: false\r\n              }\r\n          }\r\n      )\r\n  }\r\n\r\n  sentTenantUrl =() =>{\r\n    sentTenantUrl({\r\n      name: this.state.name,\r\n      })\r\n      .then((response: any) => {\r\n          if (response === 200) {\r\n            sendMessage('notification', true, {message: 'Password sent successfully', type: 'success', duration: 3000});\r\n          } else {\r\n            sendMessage('notification', true, {'type': 'failure', message: 'Invalid Email error', duration: 3000});\r\n          }\r\n      })\r\n      .catch((error) => {\r\n          sendMessage('notification', true, {'type': 'failure', message: 'Bad request', duration: 3000});\r\n      })\r\n  }\r\n\r\n  clearError() {\r\n    this.setState({\r\n      errorFields: {\r\n        name: false,\r\n        email: false,\r\n        password: false,\r\n        repeatPassword: false,\r\n        jwtPassword:false\r\n      }\r\n    })\r\n  }\r\n\r\n  setError(fieldName) {\r\n    this.setState({\r\n      errorFields: {\r\n        ...this.state.errorFields,\r\n        [fieldName]: true\r\n      }\r\n    })\r\n  }\r\n\r\n  validate() {\r\n    if (isEmptyOrSpaces(this.state.name)) {\r\n      this.setError('name');\r\n      sendMessage('notification', true, {type: 'failure', message: 'Tenant name cannot be empty', duration: 3000});\r\n      return false;\r\n    }\r\n    if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.state.email))) {\r\n      this.setError('email');\r\n      sendMessage('notification', true, {type: 'failure', message: 'Email ID is invalid', duration: 3000});\r\n      return false;\r\n    } \r\n    \r\n    if (isEmptyOrSpaces(this.state.password)){\r\n      this.setError('password');\r\n      sendMessage('notification', true, {'type': 'failure', message: 'Password cannot be empty', duration: 3000});\r\n      return false;\r\n    }\r\n\r\n    if (this.state.password != this.state.repeatPassword){\r\n      this.setError('repeatPassword');\r\n      sendMessage('notification', true, {'type': 'failure', message: 'Password and repeat password should be same', duration: 3000});\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  submit = (event) => {\r\n    event.preventDefault();\r\n    sendMessage('spinner');\r\n    const that = this;\r\n    this.clearError();\r\n    \r\n    if (!this.validate()) {\r\n      return;\r\n    }\r\n\r\n    preSignup({name:that.state.name}).then((response) => {\r\n      if (response.status === 200) {\r\n        this.createTenant(response.data);\r\n      }\r\n    });\r\n  }\r\n\r\n  handleImageChange = (e) => {\r\n    this.setState({\r\n      banner: e.target.files[0]\r\n    })\r\n\r\n    console.log(e.target.files[0]);\r\n  };\r\n\r\n  createTenant = (preSignupData) => {\r\n    createTenant({\r\n      tenantName: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      jwtPassword:this.state.jwtPassword,\r\n      solution: preSignupData.solution,\r\n      salt: preSignupData.salt,\r\n      banner: this.state.banner\r\n    })\r\n    .then((response) => {\r\n      if (response.status === 200) {\r\n        sendMessage('notification', true, {'type': 'success', message: 'Tenant has been created. You can proceed now', duration: 3000});\r\n        this.setState({pageNo: this.state.pageNo+1, created: true});\r\n      } else {\r\n        sendMessage('notification', true, {message: 'We are facing some problem, please try after sometime', duration: 3000});\r\n        return\r\n      }\r\n    }).catch((error)=>{\r\n      sendMessage('notification', true, {'type': 'failure', message: 'Unknown error. Please try again or at a later time', duration: 3000});\r\n    });\r\n  }\r\n\r\n  gotoTenantPage = () => {\r\n    this.props.history.push(\"/\" + this.state.name + \"/home\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"tenant boxed\">\r\n        {!this.state.created && <div className=\"typography-3 space-bottom-4\">Tenant creation</div>}\r\n        {this.state.created && <div className=\"typography-3 space-bottom-4\">Tenant [{this.state.name}] available now</div>}\r\n        {this.state.pageNo === 1 && <div className=\"form\">\r\n          <ArcText id=\"name\" data={this.state} label=\"Tenant Name\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></ArcText>\r\n          <ArcText id=\"email\" data={this.state} label=\"Administrator Email\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></ArcText>\r\n          <ArcText id=\"password\" type=\"password\" data={this.state} label=\"Administrator Password\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></ArcText>\r\n          <ArcText id=\"repeatPassword\" type=\"password\" data={this.state} label=\"Repeat Password\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></ArcText>\r\n          <ArcText id=\"jwtPassword\" type=\"password\" data={this.state} label=\"JWT Password\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></ArcText>\r\n          <label className=\"file-upload space-top-1 space-bottom-4\">\r\n            <input type=\"file\" accept=\"image/png, image/jpeg\" onChange={this.handleImageChange} required/>\r\n            <i className=\"material-icons\">add_photo_alternate</i>\r\n            {!this.state.banner && \"Choose Banner/Cover Image\"}\r\n            {this.state.banner && this.state.banner.name}\r\n          </label>\r\n          <div className=\"action\">\r\n            <button className=\"primary animate in right\" onClick={this.submit}>Create Tenant</button>\r\n          </div>\r\n        </div>}\r\n        {this.state.created && <button className=\"primary animate out right\" onClick={this.gotoTenantPage}>Take me to my tenant</button>}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport './style.scss';\r\nimport Home from '../Home';\r\nimport { HashRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport Login from '../Auth/Login';\r\nimport Landing from '../Landing';\r\nimport PrivateRoute from '../Auth/PrivateRoute';\r\nimport AuthInit from '../Auth/AuthInit';\r\nimport PropTypes from 'prop-types';\r\nimport { withCookies } from 'react-cookie';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport { getProfile, setProfile } from '../../actions/ProfileActions';\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport Backdrop from './Backdrop';\r\nimport Notification from '../Notification';\r\nimport Navigation from '../Navigation';\r\nimport store from '../../store';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\nimport Tenant from '../Tenant';\r\n\r\nconst themes = {\r\n    'themecolor_1': getTheme('#69A7BF'),\r\n    'themecolor_2': getTheme('#99587B'),\r\n    'themecolor_3': getTheme('#A66C26'),\r\n    'themecolor_4': getTheme('#37AE82')\r\n}\r\n\r\nfunction getTheme(color: string) {\r\n    return createMuiTheme({\r\n        palette: {\r\n          primary: {\r\n              main: color         \r\n          },\r\n          secondary: {\r\n              main: color\r\n          }\r\n        }\r\n      });\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    getProfile: Function,\r\n    setProfile: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    cookies: any,\r\n\r\n    // event: PropTypes.object,\r\n    profile: any,\r\n    authorization: Authorization\r\n}\r\n\r\ninterface State {\r\n    authorization: Authorization,\r\n    profile: any,\r\n    event: any\r\n}\r\n\r\nclass Content extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.props.getAuth();\r\n\r\n\r\n        this.state = {\r\n            authorization: {\r\n                isAuth: false\r\n            },\r\n            event: {},\r\n            profile: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe();\r\n    }\r\n    \r\n    logout = (event: any, type = 'success', message = 'You have been logged out') => {\r\n        this.props.removeAuth();\r\n        this.props.cookies.remove('isAuth');\r\n        this.props.cookies.remove('token');\r\n        this.props.cookies.remove('secret');\r\n        this.props.cookies.remove('name');\r\n        sendMessage('notification', true, {type: type, message: message, duration: 3000});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"App\"}>\r\n                \r\n                <HashRouter>\r\n                    <AuthInit />\r\n                    <Backdrop />\r\n                    <div className=\"body\">\r\n                        <div className=\"body-content\">\r\n                            <Notification />\r\n                            <MuiThemeProvider theme={themes['themecolor_1']}>\r\n                                <Navigation {...this.props} logout={() => this.logout} event={this.state.event} />\r\n                                <Route path=\"/:tenant/home\" render={(props: any) => <Home {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                <Route path=\"/:tenant/login\" render={(props: any) => <Login {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                <Route path=\"/\" exact render={(props: any) => <Landing {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                <Route path=\"/home\" exact render={(props: any) => <Landing {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                <Route path=\"/tenant\" exact render={(props: any) => <Tenant {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                {/* <PrivateRoute path=\"/:tenant/test\" render={(props: any) => <Landing {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} /> */}\r\n                            </MuiThemeProvider>\r\n                        </div>\r\n                    </div>\r\n                </HashRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  authorization: state.authorization,\r\n  profile: state.profile//,\r\n//   event: state.event\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth, getProfile, setProfile })(withCookies(Content));\r\n","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from '../../store';\r\nimport './style.scss';\r\nimport './button.scss';\r\nimport './metric.scss';\r\nimport Content from './Content';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Content {...this.props} />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {CookiesProvider} from \"react-cookie\";\r\n\r\nReactDOM.render(<CookiesProvider><App /></CookiesProvider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/mirror_white.ff53f974.svg\";","module.exports = __webpack_public_path__ + \"static/media/cover.b89312c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mirror_white_small.7aed2e38.svg\";"],"sourceRoot":""}