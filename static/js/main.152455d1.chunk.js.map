{"version":3,"sources":["reducers/AuthReducer.ts","reducers/ProfileReducer.ts","reducers/index.ts","actions/types.ts","store.ts","events/SearchEvent.ts","components/Ux/SearchBar.tsx","events/MessageService.ts","components/Lib/RestTemplate.ts","components/Constants.ts","components/Tenant/TenantService.ts","components/Home/index.tsx","actions/AuthActions.ts","components/Ux/ArcText.tsx","components/Auth/AuthService.ts","components/Utils.ts","components/Auth/Login.tsx","components/Landing/index.tsx","components/Auth/PrivateRoute.tsx","components/Auth/AuthInit.tsx","actions/ProfileActions.ts","components/App/Backdrop.tsx","components/Notification/index.tsx","components/Navigation/Links.tsx","components/Navigation/Desktop.tsx","components/Navigation/Mobile.tsx","components/Navigation/index.tsx","components/Tenant/index.tsx","components/Ux/ViewResolver.tsx","components/Ux/View.tsx","components/Ux/Sidebar.tsx","components/Settings/index.tsx","components/App/Content.tsx","components/App/index.tsx","serviceWorker.js","index.tsx","images/mirror_white.svg","images/cover.jpg","images/mirror_white_small.svg"],"names":["initialState","isAuth","firstname","lastname","theme","tenant","combineReducers","authorization","state","arguments","length","undefined","action","type","console","log","_objectSpread","payload","profile","ProfileReducer_objectSpread","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","searchTextChangedEvent$","BehaviorSubject","searchEvent$","Subject","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_isMounted","onSubmit","event","preventDefault","next","searchText","handleChange","target","value","_this2","subscribe","data","setState","react_default","a","createElement","method","noValidate","className","alt","name","spellCheck","autoComplete","autoFocus","placeholder","required","onChange","xmlns","width","height","viewBox","d","Component","subject","sendMessage","signal","receiveMessage","asObservable","baseUrl","process","httpGet","endpoint","headers","axios","get","httpPost","post","constants","API_URL_TENANT","API_URL_TENANT_BANNER","API_URL_TENANT_CREATE","API_URL_TENANT_STAGE","API_TENANT_URL","API_URL_PRESIGNUP","API_URL_RESET","API_URL_CODE","API_URL_USER_DETAILS","API_URL","API_SIGNIN","API_SIGNUP","API_KEYS","API_JWT","updateTenant","put","httpPut","then","response","Promise","resolve","pageYOffsetCutoff","Home","handleScroll","currentScrollPos","window","pageYOffset","showMainSearchBar","prevScrollpos","banner","addEventListener","setProfile","Home_objectSpread","match","params","removeEventListener","nextProps","tenantName","_this3","Authorization","token","status","cover","catch","Fragment","src","components_Ux_SearchBar","React","getAuth","dispatch","addAuth","removeAuth","ArcText","label","disabled","errorFields","id","preSignup","signin","problem","solution","password","ciphertext","JSON","stringify","sjcl","decrypt","email","error","message","encrypt","salt","config","cipher","iter","ks","CryptoJS","enc","Base64","Utf8","parse","isEmptyOrSpaces","str","queryString","require","Login","loginViaJwt","jwt","jwtToken","duration","success","login","signup","that","assertThisInitialized","test","toggle","logout","cookies","remove","secret","set","history","push","newuser","Login_objectSpread","defineProperty","currentTarget","sentEmailWithCode","sentPasswordChangeEmail","rand","Math","random","resetCode","location","search","query","Ux_ArcText","e","onClick","connect","withCookies","Landing","react_router_dom","to","activeClassName","PrivateRoute","react_router","path","render","pathname","AuthInit","getProfile","Backdrop","backdrop","Notification","spinner","notification","lastNotificationType","setTimeout","Links","toggleMenu","menu","Desktop","showSearchBar","showSettings","transparent","mirror_white","Navigation_Links","toggleSettings","Mobile","mirror_white_small","Navigation","toggleDarkMode","Navigation_objectSpread","changeTextSize","size","textSize","changeThemeColor","color","themeColor","visible","mobilemenu","chooseTheme","transparentNavBar","firstLoad","Navigation_Desktop","assign","Navigation_Mobile","withRouter","Tenant","_objectSpread3","Tenant_objectSpread","sentTenantUrl","submit","clearError","validate","createTenant","handleImageChange","files","preSignupData","formData","FormData","append","jwtPassword","Content-Type","pageNo","created","gotoTenantPage","repeatPassword","fieldName","setError","accept","ViewResolver","viewPort","matchMedia","viewPortChange","port","mobileViewPort","matches","toggleSideView","showSide","views","children","initializeViews","addListener","Children","toArray","forEach","node","main","side","_this4","sideLabel","toUpperCase","View","Sidebar","show","hide","elements","map","item","key","icon","number","animate","Settings","chooseSection","section","handleAddStage","stage","concat","stages","toConsumableArray","handleRemoveStage","idx","filter","s","sidx","levels","_id","Settings_objectSpread","any","sidebarElements","user","ownerEmail","components_Ux_ViewResolver","Ux_View","components_Ux_Sidebar","themes","themecolor_1","getTheme","themecolor_2","themecolor_3","themecolor_4","createMuiTheme","palette","primary","secondary","Content","react_router_dom_min","Auth_AuthInit","App_Backdrop","components_Notification","ThemeProvider","components_Navigation","Home_Home","components_Auth_Login","exact","Landing_Landing","Tenant_Tenant","Auth_PrivateRoute","components_Settings","App","es","App_Content","Boolean","hostname","ReactDOM","es6","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.152455d1.chunk.js","sourcesContent":["import { GET_AUTH, ADD_AUTH, REMOVE_AUTH } from '../actions/types';\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    firstname: '',\r\n    lastname: ''\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_AUTH:\r\n            console.log('GET_AUTH reducer');\r\n            return {\r\n                ...state\r\n            };\r\n        case ADD_AUTH:\r\n            console.log('ADD_AUTH reducer');\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        \r\n        case REMOVE_AUTH:\r\n            console.log('REMOVE_AUTH reducer');\r\n            return {\r\n                ...state,\r\n                isAuth: false,\r\n                firstname: '',\r\n                lastname: ''\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_PROFILE, SET_PROFILE } from '../actions/types';\r\n\r\nconst initialState = {\r\n    theme: 'theme_light',\r\n    tenant: ''\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_PROFILE:\r\n            console.log('GET_PROFILE reducer');\r\n            return {\r\n                ...state\r\n            };\r\n        case SET_PROFILE:\r\n            console.log('SET_PROFILE reducer');\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport AuthReducer from './AuthReducer';\r\nimport ProfileReducer from './ProfileReducer';\r\n\r\nexport default combineReducers({\r\n    authorization: AuthReducer,\r\n    profile: ProfileReducer\r\n})","export const GET_AUTH = 'GET_AUTH';\r\nexport const ADD_AUTH = 'ADD_AUTH';\r\nexport const REMOVE_AUTH = 'REMOVE_AUTH';\r\n\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const SET_PROFILE = 'SET_PROFILE';","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware)//,\r\n        // (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;\r\n","import { BehaviorSubject, Subject } from 'rxjs';\r\n\r\nexport const searchTextChangedEvent$ = new BehaviorSubject<string>(\"\");\r\nexport const searchEvent$ = new Subject<string>();\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SearchBar.scss';\r\nimport { searchTextChangedEvent$, searchEvent$ } from '../../events/SearchEvent';\r\n\r\ninterface Props {\r\n  alt?: boolean\r\n}\r\n\r\ninterface State {\r\n  searchText: string\r\n}\r\n\r\nclass SearchBar extends Component<Props, State> {\r\n\r\n  _isMounted = false;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchText: \"\"\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    searchTextChangedEvent$.subscribe(data => {\r\n      if (this._isMounted) {\r\n        this.setState({\r\n          searchText: data\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n      this._isMounted = false;\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    searchEvent$.next(this.state.searchText);\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    searchTextChangedEvent$.next(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form method=\"GET\" onSubmit={this.onSubmit} noValidate>\r\n        <div className={\"search-bar\" + (this.props.alt ? \" alt\" : \"\")}>\r\n            <input name=\"searchText\" spellCheck={false} autoComplete=\"off\" autoFocus placeholder=\"Mirror, mirror, on the wall, who's the fairest of them all?\" required value={this.state.searchText} onChange={this.handleChange}></input>\r\n              <button className=\"icon\">\r\n                <i><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"></path></svg></i>\r\n              </button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import { Subject, Observable, BehaviorSubject } from 'rxjs';\r\nimport { Message } from '../components/Types/GeneralTypes';\r\n\r\nconst subject = new Subject<Message>();\r\n\r\nexport function sendMessage(name: string, signal: boolean = true, data?: {}) {\r\n    subject.next({\r\n        name: name,\r\n        signal: signal,\r\n        data: data\r\n    });\r\n}\r\n\r\nexport function clearMessages() {\r\n    subject.next();\r\n}\r\n\r\nexport function receiveMessage(): Observable<Message> {\r\n    return subject.asObservable();\r\n}","import axios from \"axios\";\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport function httpGet(endpoint: string, headers: any) {\r\n    return axios.get(baseUrl + endpoint, headers)\r\n        // .then(function(response) {\r\n        //     return Promise.resolve(response);\r\n        // }\r\n    // )\r\n}\r\n\r\nexport function httpPost(endpoint: string, payload: any, headers: any) {\r\n    return axios.post(baseUrl + endpoint, payload, headers)\r\n    //     .then(function(response) {\r\n    //         return Promise.resolve(response);\r\n    //     }\r\n    // )\r\n}\r\n\r\nexport function httpPut(endpoint: string, payload: any, headers: any) {\r\n    return axios.put(baseUrl + endpoint, payload, headers)\r\n    //     .then(function(response) {\r\n    //         return Promise.resolve(response);\r\n    //     }\r\n    // )\r\n}\r\n\r\nexport function httpDelete(endpoint: string, headers: any) {\r\n    return axios.delete(baseUrl + endpoint, headers)\r\n    //     .then(function(response) {\r\n    //         return Promise.resolve(response);\r\n    //     }\r\n    // )\r\n}\r\n","export const constants ={\r\n    API_URL_TENANT:\"/tenant\",\r\n    API_URL_TENANT_BANNER:\"/tenant/banner\",\r\n    API_URL_TENANT_CREATE:\"/tenant/create\",\r\n    API_URL_TENANT_STAGE:\"/tenant/stage\",\r\n    API_TENANT_URL: \"/tenant/sendURL\",\r\n    \r\n    API_URL_PRESIGNUP: \"/auth/keys\",\r\n    API_URL_RESET: \"/auth/reset\",\r\n    API_URL_CODE:\"/auth/sendResetCode\",\r\n    API_URL_USER_DETAILS: \"/user/details\",\r\n\r\n    API_URL:\"/auth/\",\r\n    API_SIGNIN:\"/signin\",\r\n    API_SIGNUP:\"/signup\",\r\n    API_KEYS:\"/keys\",\r\n    API_JWT: \"/signin/jwt\"\r\n}\r\n    ","import { httpGet, httpPost, httpPut } from \"../Lib/RestTemplate\";\r\nimport { constants } from '../Constants';\r\n\r\nexport function createTenant(data) {\r\n    return httpPost(constants.API_URL_TENANT_CREATE, data, null)\r\n        .then(function(response) {\r\n            return Promise.resolve(response);\r\n        })\r\n}\r\n\r\nexport function sentTenantUrl(data) {\r\n    return httpPost(constants.API_TENANT_URL, data, null)\r\n        .then(function(response) {\r\n            return Promise.resolve(response.status);\r\n        })\r\n}\r\n    \r\n\r\n\r\nexport function getTenant(tenantName, headers) {\r\n    return httpGet(constants.API_URL_TENANT + '/' + tenantName, headers)\r\n        .then(function(response) {\r\n            return Promise.resolve(response);\r\n        })\r\n}\r\n\r\n\r\nexport function getBanner(tenantName, headers) {\r\n    return httpGet(constants.API_URL_TENANT_BANNER + '/' + tenantName, headers)\r\n        .then(function(response) {\r\n            return Promise.resolve(response);\r\n        })\r\n}\r\n    \r\nexport function updateTenant(data, headers){\r\n    return httpPut(constants.API_URL_TENANT_STAGE + '/' + data.name, data, headers)\r\n        .then(function(response){\r\n            return Promise.resolve(response)\r\n        })\r\n}\r\n\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport cover from '../../images/cover.jpg';\r\nimport SearchBar from '../Ux/SearchBar';\r\n\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\nimport { searchTextChangedEvent$, searchEvent$ } from '../../events/SearchEvent';\r\nimport { getBanner } from '../Tenant/TenantService';\r\n\r\n\r\nconst pageYOffsetCutoff = 10;\r\n\r\ninterface Props {\r\n  setProfile: Function,\r\n  profile: any,\r\n  match: any\r\n}\r\n\r\ninterface State {\r\n  banner: any,\r\n  prevScrollpos: number,\r\n  showMainSearchBar: boolean,\r\n  searchText: string\r\n}\r\n\r\nexport default class Home extends React.Component<Props, State> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      banner: null,\r\n      prevScrollpos: window.pageYOffset,\r\n      showMainSearchBar: true,\r\n      searchText: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // sendMessage('navbar-transparency', true);\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n    this.props.setProfile({\r\n      ...this.props.profile,\r\n      tenant: this.props.match.params.tenant\r\n    })\r\n\r\n    searchEvent$.subscribe(searchText => {\r\n      this.setState({\r\n        searchText: searchText\r\n      });\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.handleScroll);\r\n    sendMessage('show-navbar-element', false);\r\n    searchTextChangedEvent$.next(\"\");\r\n    // sendMessage('navbar-transparency', false);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n      if (nextProps.authorization) {\r\n        getBanner(this.props.match.params.tenant,  {\r\n          headers: {\r\n              Authorization: nextProps.authorization.token\r\n          }\r\n        }).then ((response) => {\r\n          if (response.status === 200 && response.data) {\r\n            this.setState({banner: 'data:image/jpeg;base64,' + response.data});\r\n          } else {\r\n            this.setState({banner: cover});\r\n          }\r\n        }).catch(() => {\r\n          this.setState({banner: cover});\r\n        })\r\n      }\r\n  }\r\n\r\n  handleScroll = () => {\r\n    // const { prevScrollpos } = this.state;\r\n  \r\n    const currentScrollPos = window.pageYOffset;\r\n    const showMainSearchBar = currentScrollPos < pageYOffsetCutoff;\r\n\r\n    if (this.state.showMainSearchBar !== showMainSearchBar) {\r\n      if (!showMainSearchBar) {\r\n        // sendMessage('navbar-transparency', false);\r\n        sendMessage('show-navbar-element', true);\r\n      } else {\r\n        // sendMessage('navbar-transparency', true);\r\n        sendMessage('show-navbar-element', false);\r\n      }\r\n    }\r\n  \r\n    this.setState({\r\n      prevScrollpos: currentScrollPos,\r\n      showMainSearchBar\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"home full\">\r\n            <div className='cover'>\r\n              {/* <img src={cover}/> */}\r\n              <img src={this.state.banner} alt=\"Red dot\" />\r\n            </div>\r\n            {this.state.showMainSearchBar && <SearchBar />}\r\n\r\n            <div className='search-results'>\r\n              Search results goes here\r\n              <br /> {this.state.searchText}\r\n            </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","import { GET_AUTH, REMOVE_AUTH, ADD_AUTH } from './types';\r\n\r\nexport const getAuth = () => dispatch => {\r\n    dispatch({\r\n        type: GET_AUTH\r\n    });\r\n}\r\n\r\nexport const addAuth = (data) => dispatch => {\r\n    dispatch({\r\n        type: ADD_AUTH,\r\n        payload: data\r\n    });\r\n}\r\n\r\nexport const removeAuth = () => dispatch => {\r\n    dispatch({\r\n        type: REMOVE_AUTH\r\n    });\r\n}","import React from 'react';\r\nimport './ArcText.scss';\r\n\r\ninterface Props {\r\n    label: string,\r\n    id: string,\r\n    data: any,\r\n    type?: string,\r\n    handleChange: any,\r\n    errorFields?: any,\r\n    disabled?: boolean\r\n}\r\nfunction ArcText(props: Props) {\r\n    return (\r\n        <div className=\"arc-text-field\">\r\n            <label>{props.label}</label>\r\n            <input disabled={props.disabled} autoComplete=\"off\"\r\n                className={(props.errorFields && props.errorFields[props.id] ? \"error\" : \"\") + (props.disabled ? \" disabled\" : \"\")}\r\n                type={props.type ? props.type : \"text\"} name={props.id} value={props.data[props.id]} onChange={props.handleChange}></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nArcText.propTypes = {\r\n};\r\n\r\nexport default ArcText;\r\n","import { httpGet, httpPost, httpPut } from \"../Lib/RestTemplate\";\r\nimport sjcl from 'ioak-sjcl';\r\nimport CryptoJS from 'crypto-js';\r\nimport { constants } from '../Constants';\r\n\r\n\r\nexport function preSignup(data) {\r\n    return httpGet(constants.API_URL+data.name+constants.API_KEYS, null)\r\n        .then(function(response) {\r\n          return Promise.resolve(response);\r\n        })\r\n}\r\n\r\nexport function signup(data) {\r\n    return httpPost(constants.API_URL+data.tenantName+constants.API_SIGNUP, {\r\n        email: data.email,\r\n        problem: encrypt(data.password, data.solution, data.salt),\r\n        solution: data.solution\r\n        }, null)\r\n        .then(function(response) {\r\n            return Promise.resolve(response.status);\r\n        })\r\n}\r\n\r\nexport function createTenant(data) {\r\n    const formData = new FormData();\r\n    formData.append('tenantName', data.tenantName);\r\n    formData.append('email', data.email);\r\n    formData.append('jwtPassword', data.jwtPassword);\r\n    formData.append('problem', encrypt(data.password, data.solution, data.salt));\r\n    formData.append('solution', data.solution);\r\n    if(data.banner) {\r\n        formData.append('banner', data.banner, 'banner.jpg');\r\n    }\r\n    return httpPost(constants.API_URL_TENANT_CREATE, formData, {'Content-Type': 'multipart/form-data'})\r\n        .then(function(response) {\r\n            return Promise.resolve(response);\r\n        })\r\n}\r\n\r\nexport function preSignin(data) {\r\n    return httpGet(constants.API_URL+data.name+constants.API_KEYS + '/' + data.email, null)\r\n        .then(response => Promise.resolve(response))\r\n        .catch(error => Promise.resolve(error.response))\r\n}\r\n\r\nexport function signin(data, problem) {\r\n    try {\r\n        let solution = decrypt(data.password, JSON.stringify(problem));\r\n        return httpPost(constants.API_URL+data.name+constants.API_SIGNIN, {\r\n            email: data.email, \r\n            solution: solution\r\n            }, null)\r\n            .then(function(response) {\r\n                return Promise.resolve(response);\r\n            })\r\n        \r\n    } catch(error) {\r\n        if (error.message === \"ccm: tag doesn't match\") {\r\n            return Promise.resolve({\r\n                status: 401\r\n            });\r\n        } else {\r\n            return Promise.resolve(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function signinWithJwt(data){\r\n\r\n    return httpPost(constants.API_URL + data.tenantName + constants.API_JWT, {\r\n        jwtToken: data.jwt\r\n    }, null)\r\n        .then(function(response){\r\n            return Promise.resolve(response);\r\n        });\r\n}\r\n\r\nexport function sentPasswordChangeEmail(data, type) {\r\n\r\n    return httpPost(constants.API_URL_CODE, data, null)\r\n        .then(function(response) {\r\n            return Promise.resolve(response.status);\r\n        })\r\n}\r\n\r\nexport function resetPassword(data, type) {\r\n\r\n    return httpGet(constants.API_URL_PRESIGNUP, null)\r\n        .then(function(response) {\r\n            if (response.status === 200) {\r\n                let newData = {};\r\n                if (type && type === 'password') {\r\n                    newData = {\r\n                        problem: encrypt(data.password, response.data.solution, response.data.salt),\r\n                        solution: response.data.solution,\r\n                        resetCode: data.resetCode\r\n                    }\r\n\r\n                }\r\n\r\n                return httpPost(constants.API_URL_RESET, newData, null)\r\n                    .then(function(response) {\r\n                        return Promise.resolve(response.status);\r\n                    })\r\n\r\n\r\n            }\r\n        })\r\n}\r\n\r\n\r\n\r\nfunction encrypt(password, message, salt) {\r\n    const config = {\r\n        cipher: 'aes',\r\n        iter: '12000',\r\n        ks: 256,\r\n        salt: CryptoJS.enc.Base64.stringify((CryptoJS.enc.Utf8.parse(salt)))\r\n    }\r\n    return sjcl.encrypt(password, message, config);\r\n}\r\n\r\nfunction decrypt(password, ciphertext) {\r\n    return sjcl.decrypt(password, ciphertext);\r\n}\r\n","export function isEmptyOrSpaces(str){\r\n    return str === null || str.match(/^ *$/) !== null;\r\n}\r\n\r\nexport function match(text, words) {\r\n    let found = false;\r\n    if (words) {\r\n        words.split(' ').forEach(word => {\r\n            if (text.match(new RegExp('(\\\\w*'+ word +'\\\\w*)','gi'))) {\r\n                found = true;\r\n            }\r\n        });\r\n    }\r\n    return found;\r\n}\r\n\r\nexport function sort(array, property, isReverseOrder) {\r\n    const result = array.sort(function(o1,o2){\r\n        if (isReverseOrder) {\r\n            return o1[property] > o2[property] ? -1 : o1[property] < o2[property] ? 1 : 0;\r\n        } else {\r\n            return o1[property] < o2[property] ? -1 : o1[property] > o2[property] ? 1 : 0;\r\n        }\r\n    });\r\n\r\n    return result;\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport {withCookies} from 'react-cookie';\r\nimport './Login.scss';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport ArcText from '../Ux/ArcText';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport {signinWithJwt, signin, preSignin,sentPasswordChangeEmail, preSignup, signup} from './AuthService';\r\nimport {isEmptyOrSpaces} from \"../Utils\";\r\n\r\nconst queryString = require('query-string');\r\n\r\ninterface Props {\r\n    setProfile: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    cookies: any,\r\n    history: any,\r\n    profile:any,\r\n    match: any,\r\n    location:any,\r\n    authorization: Authorization\r\n}\r\n\r\ninterface State {\r\n    newuser: boolean,\r\n    name: string,\r\n    email: string,\r\n    password: string\r\n}\r\n\r\nclass Login extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newuser: false,\r\n            name:'',\r\n            email:'',\r\n            password:''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.location.search){\r\n            const query = queryString.parse(this.props.location.search)\r\n            if (query && query.type === 'signup') {\r\n                this.setState({\r\n                    newuser : true\r\n                })\r\n            }\r\n            if (query && query.jwt) {\r\n                this.loginViaJwt(query.jwt);\r\n            }\r\n        }\r\n\r\n        this.props.setProfile({\r\n            ...this.props.profile,\r\n            tenant: this.props.match.params.tenant\r\n        })\r\n    }\r\n\r\n    loginViaJwt = (jwt: string) => {\r\n        signinWithJwt({\r\n            tenantName: this.props.match.params.tenant,\r\n            jwt:jwt\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 200) {\r\n                sendMessage('notification', true, {message: 'Signed In successfully', type: 'success', duration: 3000});\r\n                this.success(response.data);\r\n            } else if (response.status === 500) {\r\n                sendMessage('notification', true, {message: 'Signature verification failed', type: 'failure', duration: 3000});\r\n            } else {\r\n                sendMessage('notification', true, {message: 'Unknown response from server. Please try again or at a later time', type: 'failure', duration: 3000});\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            sendMessage('notification', true, {'type': 'failure', message: 'Unknown error. Please try again or at a later time', duration: 3000});\r\n        });\r\n    }\r\n\r\n    login = (event) => {\r\n        event.preventDefault();\r\n        sendMessage('notification', false);\r\n        sendMessage('spinner');\r\n        if (this.state.email && this.state.password) {\r\n            preSignin({\r\n                name:this.props.profile.tenant,\r\n                email:this.state.email})\r\n                .then((response) => {\r\n                    if (response.status === 200) {\r\n                    signin({\r\n                        name:this.props.profile.tenant,\r\n                        email: this.state.email,\r\n                        password: this.state.password\r\n                        }, response.data)\r\n                        .then((response) => {\r\n                            if (response.status === 200) {\r\n                                sendMessage('notification', true, {message: 'Signed In successfully', type: 'success', duration: 3000});\r\n                                this.success(response.data);\r\n                            } else if (response.status === 401) {\r\n                                sendMessage('notification', true, {message: 'Incorrect passphrase', type: 'failure', duration: 3000});\r\n                            } else {\r\n                                sendMessage('notification', true, {message: 'Unknown response from server. Please try again or at a later time', type: 'failure', duration: 3000});\r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                            sendMessage('notification', true, {'type': 'failure', message: 'Unknown error. Please try again or at a later time', duration: 3000});\r\n                        })\r\n                } else if (response.status === 404) {\r\n                    sendMessage('notification', true, {message: 'User name does not exist', type: 'failure', duration: 3000});\r\n                }\r\n            })\r\n\r\n            \r\n        } else {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Username/password cannot be empty', duration: 3000});\r\n        }\r\n    }\r\n\r\n    \r\n    signup =(event) =>{\r\n        event.preventDefault()\r\n        const that = this\r\n        sendMessage('notification', false)\r\n        sendMessage('spinner')\r\n        if(this.state.name && this.state.password && this.state.email){\r\n            if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.state.email))) {\r\n                sendMessage('notification', true, {type: 'failure', message: 'Email ID is invalid', duration: 3000});\r\n                return;\r\n            }\r\n            preSignup({name:that.props.profile.tenant}).then((response) =>{\r\n                if(response.status ===200){\r\n                    signup({\r\n                        tenantName: that.props.profile.tenant,\r\n                        email: that.state.email,\r\n                        password: that.state.password,\r\n                        solution: response.data.solution,\r\n                        salt: response.data.salt\r\n                    })\r\n                    .then(function(status){\r\n                        if(status===200){\r\n                            sendMessage('notification', true, {'type': 'success', message: 'Your account has been created. You can login now', duration: 3000});\r\n                            that.setState({\r\n                                email:'',\r\n                                password:''\r\n                            }); \r\n                            that.toggle();\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        sendMessage('notification', true, {'type': 'failure', message: 'Unknown error. Please try again or at a later time', duration: 3000});\r\n                    });\r\n                }\r\n            });\r\n        }  else if (!this.state.name) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Name cannot be empty', duration: 3000});\r\n        } else if (!this.state.email) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Email cannot be empty', duration: 3000});\r\n        } else if (!this.state.password) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Password cannot be empty', duration: 3000});\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        this.props.removeAuth();\r\n        this.props.cookies.remove('isAuth');\r\n    }\r\n\r\n    success = (data) => {\r\n        this.props.addAuth({\r\n            isAuth: true,\r\n            token: data.token,\r\n            secret: data.secret,\r\n            name: data.name\r\n\r\n        });\r\n        sendMessage('loggedin', true);\r\n        console.log(data);\r\n        this.props.cookies.set('isAuth', true);\r\n        this.props.cookies.set('token', data.token);\r\n        this.props.cookies.set('secret', data.secret);\r\n        this.props.cookies.set('name', data.name);\r\n        this.props.cookies.set('email', data.email);\r\n        this.props.history.push(\"/\");    \r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            newuser: !this.state.newuser\r\n        });\r\n    }\r\n\r\n    handleChange= (event) => {\r\n        this.setState(\r\n            {\r\n                ...this.state,\r\n                [event.currentTarget.name]: event.currentTarget.value\r\n            }\r\n        )\r\n    }\r\n\r\n    sentEmailWithCode = () => {\r\n        if (isEmptyOrSpaces(this.state.email)) {\r\n            sendMessage('notification', true, {message: 'Email cannot be empty', type: 'failure', duration: 5000});\r\n            return;\r\n        }\r\n\r\n        this.sentPasswordChangeEmail('password');\r\n\r\n    }\r\n\r\n    sentPasswordChangeEmail = (type) => {\r\n        const min = 1;\r\n        const max = 100;\r\n        const rand = min + Math.random() * (max - min);\r\n        sentPasswordChangeEmail({\r\n            email: this.state.email,\r\n            resetCode: rand\r\n        }, type)\r\n            .then((response: any) => {\r\n                if (response === 200) {\r\n                    if (type === 'password') {\r\n                        sendMessage('notification', true, {message: 'Password sent successfully', type: 'success', duration: 3000});\r\n                    }\r\n                } else {\r\n                    sendMessage('notification', true, {'type': 'failure', message: 'Invalid Email error', duration: 3000});\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                sendMessage('notification', true, {'type': 'failure', message: 'Bad request', duration: 3000});\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"login\">\r\n                {!this.state.newuser && <div className=\"container\">\r\n                    <form method=\"GET\" onSubmit={this.login} noValidate>\r\n                        \r\n                        <div className=\"form\">\r\n                            <ArcText label=\"E-mail\" id=\"email\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                            <ArcText label=\"Password\" type=\"password\"  id=\"password\"   data={this.state} handleChange={e => this.handleChange(e)} />\r\n                        </div>\r\n                        <br />\r\n                        <button className=\"primary animate out right\"  onClick={this.login}>Sign In</button>\r\n                        <br /> <br />\r\n                        Don't have an account? <button className=\"default animate right small\"  onClick={this.toggle}>Sign Up</button>\r\n                    </form>\r\n                    <br />\r\n                    <button className=\"default animate right small\" onClick={this.sentEmailWithCode}>Forgot password ?</button>\r\n                </div>}\r\n\r\n                {this.state.newuser && <div className=\"container\">\r\n                    <form method=\"GET\" onSubmit={this.signup} noValidate>\r\n                        <h1>Sign Up</h1>\r\n                        <div className=\"form\">\r\n                        <ArcText label=\"Name\" id=\"name\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                        <ArcText label=\"E-mail\" id=\"email\" data={this.state} handleChange ={e=> this.handleChange(e)} />\r\n                        <ArcText label=\"Password\" type=\"password\" id=\"password\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                        <ArcText label=\"Repeat Password\" type=\"password\"  id=\"repeatpassword\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                        </div>\r\n                        <br />\r\n                        <button className=\"primary block\" onClick={this.signup}>Create Account</button>\r\n                        <br /> <br />\r\n                        Already have an account? <button className=\"secondary block\" onClick={this.toggle}>Sign In</button> \r\n                    </form>\r\n                </div>\r\n                }\r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authorization: state.authorization\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(withCookies(Login));","import React from 'react';\r\nimport './style.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default class Landing extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"space-bottom-4\">\r\n          <h3>Mirror rorriM</h3>\r\n          <p><em><b>Queen</b></em> Magic Mirror on the wall, who now is the fairest one of all?</p>\r\n          <p><em><b>Magic Mirror</b></em> Over the seven jewelled hills, beyond the seventh fall, in the cottage of the seven dwarfs, dwells Snow White, fairest one of all.</p>\r\n          <p><em><b>Queen</b></em> Snow White lies dead in the forest.  The huntsman has brought me proof. [holds up her opened box] Behold, her heart.</p>\r\n          <p><em><b>Magic Mirror</b></em> Snow White still lives, the fairest in the land. 'Tis the heart of a pig you hold in your hand.</p>\r\n          <p><em><b>Queen</b></em> [repulsed] The heart of a pig?! Then I've been tricked!</p>\r\n        </div>\r\n        <div className=\"action\">\r\n          <NavLink to=\"/tenant\" className=\"navitem\" activeClassName=\"active\"><button className=\"primary animate out right\">Create Tenant</button></NavLink>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth } from '../../actions/AuthActions';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n  authorization: Authorization,\r\n  getAuth: Function,\r\n  path: string,\r\n  render: any\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nclass PrivateRoute extends Component<Props, State> {\r\n  componentWillMount() {\r\n    this.props.getAuth();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.authorization.isAuth && <Route path={this.props.path} render={this.props.render} />}\r\n        {!this.props.authorization.isAuth && <Redirect to={{pathname: \"/home\"}} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  authorization: state.authorization\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth })(PrivateRoute);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport PropTypes from 'prop-types';\r\nimport {withCookies, ReactCookieProps} from 'react-cookie';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\n\r\ninterface Props extends ReactCookieProps {\r\n    authorization: Authorization,\r\n    addAuth: Function,\r\n    getAuth: Function,\r\n    removeAuth: Function,\r\n    cookies: any\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nclass AuthInit extends Component<Props, State> {\r\n    componentWillMount() {\r\n        if (!this.props.authorization.isAuth && this.props.cookies.get('isAuth')) {\r\n            this.props.addAuth({\r\n                isAuth: true,\r\n                token: this.props.cookies.get('token'),\r\n                secret: this.props.cookies.get('secret'),\r\n                name: this.props.cookies.get('name')\r\n            });\r\n        }\r\n        this.props.getAuth();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authorization: state.authorization\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(withCookies(AuthInit));","import { GET_PROFILE, SET_PROFILE } from './types';\r\n\r\nexport const getProfile = () => dispatch => {\r\n    dispatch({\r\n        type: GET_PROFILE\r\n    });\r\n}\r\n\r\nexport const setProfile = (payload) => dispatch => {\r\n    dispatch({\r\n        type: SET_PROFILE,\r\n        payload: payload\r\n    });\r\n}\r\n","import React, { Component } from 'react';\nimport { receiveMessage } from '../../events/MessageService';\nimport { Message } from '../Types/GeneralTypes';\n\ninterface Props {\n}\n\ninterface State {\n    backdrop: string\n}\n\nclass Backdrop extends Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            backdrop: ''\n        }\n    }\n\n    componentDidMount() {\n        receiveMessage().subscribe(\n            message => {\n                if (message.name === 'dialog') {\n\n                }\n            }\n        )\n        // if (nextProps.event && nextProps.event.name === 'dialog') {\n        //     if (nextProps.event.signal) {\n        //         this.setState({\n        //             backdrop: 'backdrop-fade'\n        //         })\n        //     } else {\n        //         this.setState({\n        //             backdrop: ''\n        //         })\n        //     }\n        // }\n    }\n\n    render() {\n        return (\n            <div className={this.state.backdrop}></div>\n        );\n    }\n}\n\nexport default Backdrop;","import React, { Component } from 'react';\r\nimport './style.scss';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n}\r\n\r\ninterface State {\r\n    notification: any,\r\n    spinner: boolean,\r\n    lastNotificationType?: string\r\n}\r\n\r\nclass Notification extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            spinner: false,\r\n            notification: null,\r\n            lastNotificationType: undefined\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        receiveMessage().subscribe(message => {\r\n            if (message.name === 'notification') {\r\n                if (!message.signal) {\r\n                    this.setState({\r\n                        notification: null,\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        notification: message.data,\r\n                        lastNotificationType: message.data.type,\r\n                        spinner: false\r\n                    })\r\n                    \r\n                    if (message.data && message.data.duration) {\r\n                        setTimeout(() => {\r\n                            sendMessage('notification', false);\r\n                        }, message.data.duration);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (message.name === 'spinner') {\r\n                this.setState({\r\n                    spinner: message.signal\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    processNextProps(nextProps) {\r\n        if (nextProps.event && nextProps.event.name === 'spinner') {\r\n            this.setState({\r\n                spinner: nextProps.event.signal\r\n            })\r\n        }\r\n\r\n        if (nextProps.event && nextProps.event.name === 'notification') {\r\n            if (!nextProps.event.signal) {\r\n                this.setState({\r\n                    notification: null,\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    notification: nextProps.event.data,\r\n                    lastNotificationType: nextProps.event.data.type,\r\n                    spinner: false\r\n                })\r\n                \r\n                if (nextProps.event.data.duration) {\r\n                    setTimeout(() => {\r\n                        // this.props.sendEvent('notification', false);\r\n                    }, nextProps.event.data.duration);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            {/* {this.state.notification && <div className={\"notification \" + this.state.notification.type}><div className=\"message\">{this.state.notification.message}</div></div>} */}\r\n            {<div className={\"notification \" + (this.state.notification ? \" show \" + this.state.notification.type : (\" hide \" + this.state.lastNotificationType))}><div className=\"message\">{this.state.notification? this.state.notification.message : \"\"}</div></div>}\r\n            {/* {this.state.spinner && <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>} */}\r\n            {/* {this.state.spinner && <div className=\"lds-facebook\"><div></div><div></div><div></div></div>} */}\r\n            {this.state.spinner && <div className=\"lds-dual-ring\"></div>}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Notification;","import React, { Component } from 'react';\r\n\r\nimport './style.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n    authorization: Authorization,\r\n    profile: Profile\r\n}\r\n\r\ninterface State {\r\n    menu: boolean\r\n}\r\n\r\nclass Links extends Component<Props, State> {\r\n    toggleMenu = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"links\">\r\n                {this.props.authorization.isAuth &&\r\n                    <>\r\n                    <NavLink to={\"/\" + this.props.profile.tenant + \"/home\"} className=\"navitem\" activeClassName=\"active\">Home</NavLink>\r\n                    <NavLink to={\"/\" + this.props.profile.tenant + \"/settings\"} className=\"navitem\" activeClassName=\"active\">Settings</NavLink>\r\n                    </>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Links;","import React, { Component } from 'react';\r\n\r\nimport './style.scss';\r\nimport mirror_white from '../../images/mirror_white.svg';\r\nimport mirror_black from '../../images/mirror_black.svg';\r\nimport Links from './Links';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\n// import SearchBar from '../Ux/SearchBar';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\nimport SearchBar from '../Ux/SearchBar';\r\n\r\ninterface Props {    \r\n    sendEvent: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    authorization: Authorization\r\n    getProfile: Function,\r\n    profile: Profile,\r\n    login: Function,\r\n    transparent: boolean,\r\n    logout: Function,\r\n    toggleSettings: any\r\n}\r\n\r\ninterface State {\r\n    showSettings: boolean,\r\n    showSearchBar: boolean\r\n}\r\n\r\nclass Desktop extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.state = {\r\n            showSearchBar: false,\r\n            showSettings: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe(message => {\r\n            if (message.name === 'show-navbar-element') {\r\n                this.setState({\r\n                    showSearchBar: message.signal\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    signin = (type) => {\r\n        this.props.login(type);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={(this.props.transparent ? \"navbar desktop transparent\" : \"navbar desktop\")}>\r\n                <div className=\"left\">\r\n                    {!this.props.transparent && this.props.profile.theme === 'theme_light' && <img className=\"logo\" src={mirror_white} alt=\"Curate logo\" />}\r\n                    {(this.props.transparent || this.props.profile.theme === 'theme_dark') && <img className=\"logo\" src={mirror_white} alt=\"Curate logo\" />}\r\n                    <Links authorization={this.props.authorization} profile={this.props.profile}/>\r\n                    {this.state.showSearchBar && <SearchBar alt />}\r\n                </div>\r\n                <div className=\"right\">\r\n                    <div className=\"action\">\r\n                        {/* <button className=\"default disabled small\" onClick={this.props.toggleSettings}><i className=\"material-icons\">palette</i>Theme</button> */}\r\n                        {this.props.authorization.isAuth && \r\n                            <button className=\"primary animate in alt right align-left small\" onClick={this.props.toggleSettings}><i className=\"material-icons\">brush</i>Action 1</button>}\r\n                        {this.props.authorization.isAuth && \r\n                            <button className=\"primary animate out alt right align-right small\" onClick={this.props.logout()}><i className=\"material-icons\">power_settings_new</i>Logout</button>}\r\n                        {!this.props.authorization.isAuth && \r\n                            <button className=\"primary animate in alt right align-left small\" onClick={() => this.signin('signin')}><i className=\"material-icons\">person</i>Login</button>}\r\n                        {!this.props.authorization.isAuth && \r\n                            <button className=\"primary animate in alt right align-right small\" onClick={() => this.signin('signup')}><i className=\"material-icons\">person_add</i>Signup</button>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Desktop;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './style.scss';\r\nimport mirror_white from '../../images/mirror_white.svg';\r\nimport mirror_white_small from '../../images/mirror_white_small.svg';\r\nimport mirror_black from '../../images/mirror_black.svg';\r\nimport Links from './Links';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport SearchBar from '../Ux/SearchBar';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\n// import SearchBar from '../Ux/SearchBar';\r\n\r\ninterface Props {    \r\n    sendEvent: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    authorization: Authorization\r\n    getProfile: Function,\r\n    profile: Profile,\r\n    login: Function,\r\n    transparent: boolean,\r\n    logout: Function,\r\n    toggleSettings: any\r\n}\r\n\r\ninterface State {\r\n    menu: boolean,\r\n    showSearchBar: boolean\r\n}\r\n\r\nclass Mobile extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.state = {\r\n            showSearchBar: false,\r\n            menu: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe(message => {\r\n            if (message.name === 'show-navbar-element') {\r\n                this.setState({\r\n                    showSearchBar: message.signal\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    signin = (type) => {\r\n        this.props.login(type);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className={(this.props.transparent ? \"navbar mobile transparent\" : \"navbar mobile\")}>\r\n                <div className=\"left\">\r\n                    {!this.state.showSearchBar && !this.props.transparent && this.props.profile.theme === 'theme_light' && <img className=\"logo\" src={mirror_white} alt=\"Mirror logo\" />}\r\n                    {!this.state.showSearchBar && (this.props.transparent || this.props.profile.theme === 'theme_dark') && <img className=\"logo\" src={mirror_white} alt=\"Mirror logo\" />}\r\n                    {this.state.showSearchBar && !this.props.transparent && this.props.profile.theme === 'theme_light' && <img className=\"logo\" src={mirror_white_small} alt=\"Mirror logo\" />}\r\n                    {this.state.showSearchBar && (this.props.transparent || this.props.profile.theme === 'theme_dark') && <img className=\"logo\" src={mirror_white_small} alt=\"Mirror logo\" />}\r\n                    {this.state.showSearchBar && <SearchBar alt />}\r\n                    {/* links */}\r\n                </div>\r\n                <div className=\"right\">\r\n                    {/* <div className=\"settings-icon\" onClick={this.props.toggleSettings}><i className=\"material-icons\">settings</i></div> */}\r\n                    <div className={(this.state.menu ? \"menu active\" : \"menu\")} onClick={this.toggleMenu}><div></div></div>\r\n                    {/* action login */}\r\n                </div>\r\n            </div>\r\n            <div className={(this.state.menu ? \"slider show\" : \"slider hide\")} onClick={this.toggleMenu}>\r\n                <div className={(this.state.menu ? \"container\": \"container hidetext\")} onClick={this.toggleMenu}>\r\n                    <div className=\"action\">\r\n                        <div className=\"settings-icon\" onClick={this.props.toggleSettings}>\r\n                            {this.props.authorization.isAuth && <button className=\"invert animate alt small\" onClick={this.props.toggleSettings}><i className=\"material-icons\">brush</i>Action 1</button>}\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                            {this.props.authorization.isAuth && <button className=\"invert animate alt small\" onClick={this.props.logout()}><i className=\"material-icons\">power_settings_new</i>Logout</button>}\r\n                            {!this.props.authorization.isAuth && <button className=\"invert animate alt small left\" onClick={() => this.signin('signin')}><i className=\"material-icons\">person</i>Login</button>}\r\n                            {!this.props.authorization.isAuth && <button className=\"invert animate alt small right\" onClick={() => this.signin('signup')}><i className=\"material-icons\">person_add</i>Signup</button>}\r\n                        </div>\r\n                    </div>\r\n                    <Links authorization={this.props.authorization} profile={this.props.profile}/>\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Mobile;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {withRouter} from 'react-router'\r\nimport { getProfile, setProfile } from '../../actions/ProfileActions';\r\nimport {withCookies} from 'react-cookie';\r\n\r\nimport './style.scss';\r\nimport Desktop from './Desktop';\r\nimport Mobile from './Mobile';\r\n\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\n\r\ninterface Props {    \r\n    sendEvent: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    authorization: Authorization,\r\n    getProfile: Function,\r\n    setProfile: Function,\r\n    profile: Profile,\r\n    login: Function,\r\n    transparent: boolean,\r\n    logout: Function,\r\n    toggleSettings: any,\r\n    history: any,\r\n    cookies: any,\r\n    location: any,\r\n    match: any\r\n}\r\n\r\ninterface State {\r\n    visible: boolean,\r\n    mobilemenu: string,\r\n    chooseTheme: boolean,\r\n    showSettings: boolean,\r\n    transparentNavBar: boolean,\r\n    firstLoad: boolean\r\n}\r\n\r\nclass Navigation extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.state = {\r\n            visible: false,\r\n            mobilemenu: 'hide',\r\n            chooseTheme: false,\r\n            showSettings: false,\r\n            transparentNavBar: false,\r\n            firstLoad: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe(message => {\r\n            if (message.name === 'navbar-transparency') {\r\n                this.setState({\r\n                    transparentNavBar: message.signal\r\n                })\r\n            }\r\n            if (message.name === 'loggedin') {\r\n                // this.props.reloadProfile(nextProps.authorization);\r\n                this.setState({\r\n                    firstLoad: false\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.state.firstLoad && nextProps.authorization && nextProps.authorization.isAuth) {\r\n            // this.props.reloadProfile(nextProps.authorization);\r\n            this.setState({\r\n                firstLoad: false\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleDarkMode = () => {\r\n        if (this.props.profile.theme === 'theme_dark') {\r\n            this.props.setProfile({\r\n                ...this.props.profile,\r\n                theme: 'theme_light'\r\n            })   \r\n        } else  {\r\n            this.props.setProfile({\r\n                ...this.props.profile,\r\n                theme: 'theme_dark'\r\n            })   \r\n        }\r\n    }\r\n\r\n    changeTextSize = (size) => {\r\n        this.props.setProfile({\r\n            ...this.props.profile,\r\n            textSize: size\r\n        })\r\n    }\r\n\r\n    changeThemeColor = (color) => {\r\n        this.props.setProfile({\r\n            ...this.props.profile,\r\n            themeColor: color\r\n        })\r\n    }\r\n\r\n    login = (type) => {\r\n        this.props.history.push('/' + this.props.profile.tenant + '/login?type=' + type);\r\n    }\r\n\r\n    toggleSettings = () => {\r\n        this.setState({\r\n            showSettings: !this.state.showSettings\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"nav\">\r\n                <Desktop {...this.props} logout={this.props.logout} login={this.login} toggleSettings={this.toggleSettings} transparent={this.state.transparentNavBar} />\r\n                <Mobile {...this.props} logout={this.props.logout} login={this.login} toggleSettings={this.toggleSettings} transparent={this.state.transparentNavBar} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProfile, setProfile })(withCookies(withRouter(Navigation)));","import React from 'react';\r\nimport './style.scss';\r\nimport ArcText from '../Ux/ArcText';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport { sentTenantUrl } from './TenantService'\r\nimport {preSignup, createTenant } from '../Auth/AuthService'\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport { isEmptyOrSpaces } from '../Utils';\r\n\r\ninterface Props {\r\n  getProfile: Function,\r\n  profile: Profile,\r\n  history: any\r\n}\r\ninterface State {\r\n  name: string,\r\n  email: string,\r\n  pageNo: number,\r\n  password: string,\r\n  repeatPassword: string,\r\n  jwtPassword:string,\r\n  banner: any,\r\n  created: boolean,\r\n  errorFields: {\r\n    name: boolean,\r\n    email: boolean,\r\n    password: boolean,\r\n    repeatPassword: boolean,\r\n    jwtPassword:boolean\r\n  }\r\n}\r\nexport default class Tenant extends React.Component<Props, State> {\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.props.getProfile();\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      repeatPassword: '',\r\n      jwtPassword:'',\r\n      banner: null,\r\n      pageNo: 1,\r\n      created: false,\r\n      errorFields: {\r\n        name: false,\r\n        email: false,\r\n        password: false,\r\n        repeatPassword: false,\r\n        jwtPassword: false\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n      this.setState(\r\n          {\r\n              ...this.state,\r\n              [event.currentTarget.name]: event.currentTarget.value,\r\n              errorFields: {\r\n                ...this.state.errorFields,\r\n                [event.currentTarget.name]: false\r\n              }\r\n          }\r\n      )\r\n  }\r\n\r\n  sentTenantUrl =() =>{\r\n    sentTenantUrl({\r\n      name: this.state.name,\r\n      })\r\n      .then((response: any) => {\r\n          if (response === 200) {\r\n            sendMessage('notification', true, {message: 'Password sent successfully', type: 'success', duration: 3000});\r\n          } else {\r\n            sendMessage('notification', true, {'type': 'failure', message: 'Invalid Email error', duration: 3000});\r\n          }\r\n      })\r\n      .catch((error) => {\r\n          sendMessage('notification', true, {'type': 'failure', message: 'Bad request', duration: 3000});\r\n      })\r\n  }\r\n\r\n  clearError() {\r\n    this.setState({\r\n      errorFields: {\r\n        name: false,\r\n        email: false,\r\n        password: false,\r\n        repeatPassword: false,\r\n        jwtPassword:false\r\n      }\r\n    })\r\n  }\r\n\r\n  setError(fieldName) {\r\n    this.setState({\r\n      errorFields: {\r\n        ...this.state.errorFields,\r\n        [fieldName]: true\r\n      }\r\n    })\r\n  }\r\n\r\n  validate() {\r\n    if (isEmptyOrSpaces(this.state.name)) {\r\n      this.setError('name');\r\n      sendMessage('notification', true, {type: 'failure', message: 'Tenant name cannot be empty', duration: 3000});\r\n      return false;\r\n    }\r\n    if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.state.email))) {\r\n      this.setError('email');\r\n      sendMessage('notification', true, {type: 'failure', message: 'Email ID is invalid', duration: 3000});\r\n      return false;\r\n    } \r\n    \r\n    if (isEmptyOrSpaces(this.state.password)){\r\n      this.setError('password');\r\n      sendMessage('notification', true, {'type': 'failure', message: 'Password cannot be empty', duration: 3000});\r\n      return false;\r\n    }\r\n\r\n    if (this.state.password !== this.state.repeatPassword){\r\n      this.setError('repeatPassword');\r\n      sendMessage('notification', true, {'type': 'failure', message: 'Password and repeat password should be same', duration: 3000});\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  submit = (event) => {\r\n    event.preventDefault();\r\n    sendMessage('spinner');\r\n    const that = this;\r\n    this.clearError();\r\n    \r\n    if (!this.validate()) {\r\n      return;\r\n    }\r\n\r\n    preSignup({name:that.state.name}).then((response) => {\r\n      if (response.status === 200) {\r\n        this.createTenant(response.data);\r\n      }\r\n    });\r\n  }\r\n\r\n  handleImageChange = (e) => {\r\n    this.setState({\r\n      banner: e.target.files[0]\r\n    })\r\n  };\r\n\r\n  createTenant = (preSignupData) => {\r\n    createTenant({\r\n      tenantName: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      jwtPassword:this.state.jwtPassword,\r\n      solution: preSignupData.solution,\r\n      salt: preSignupData.salt,\r\n      banner: this.state.banner\r\n    })\r\n    .then((response) => {\r\n      if (response.status === 200) {\r\n        sendMessage('notification', true, {'type': 'success', message: 'Tenant has been created. You can proceed now', duration: 3000});\r\n        this.setState({pageNo: this.state.pageNo+1, created: true});\r\n      } else {\r\n        sendMessage('notification', true, {message: 'We are facing some problem, please try after sometime', duration: 3000});\r\n        return\r\n      }\r\n    }).catch((error)=>{\r\n      sendMessage('notification', true, {'type': 'failure', message: 'Unknown error. Please try again or at a later time', duration: 3000});\r\n    });\r\n  }\r\n\r\n  gotoTenantPage = () => {\r\n    this.props.history.push(\"/\" + this.state.name + \"/home\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"tenant boxed\">\r\n        {!this.state.created && <div className=\"typography-3 space-bottom-4\">Tenant creation</div>}\r\n        {this.state.created && <div className=\"typography-3 space-bottom-4\">Tenant [{this.state.name}] available now</div>}\r\n        {this.state.pageNo === 1 && <div className=\"form\">\r\n          <ArcText id=\"name\" data={this.state} label=\"Tenant Name\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></ArcText>\r\n          <ArcText id=\"email\" data={this.state} label=\"Administrator Email\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></ArcText>\r\n          <ArcText id=\"password\" type=\"password\" data={this.state} label=\"Administrator Password\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></ArcText>\r\n          <ArcText id=\"repeatPassword\" type=\"password\" data={this.state} label=\"Repeat Password\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></ArcText>\r\n          <ArcText id=\"jwtPassword\" type=\"password\" data={this.state} label=\"JWT Password\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></ArcText>\r\n          <label className=\"file-upload space-top-1 space-bottom-4\">\r\n            <input type=\"file\" accept=\"image/png, image/jpeg\" onChange={this.handleImageChange} required/>\r\n            <i className=\"material-icons\">add_photo_alternate</i>\r\n            {!this.state.banner && \"Choose Banner/Cover Image\"}\r\n            {this.state.banner && this.state.banner.name}\r\n          </label>\r\n          <div className=\"action\">\r\n            <button className=\"primary animate in right\" onClick={this.submit}>Create Tenant</button>\r\n          </div>\r\n        </div>}\r\n        {this.state.created && <button className=\"primary animate out right\" onClick={this.gotoTenantPage}>Take me to my tenant</button>}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './ViewResolver.scss';\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n    sideLabel?: string\r\n}\r\n\r\ninterface State {\r\n    views: any,\r\n    main?: any,\r\n    side?: any,\r\n    showSide: boolean,\r\n    mobileViewPort: any\r\n}\r\n\r\nclass ViewResolver extends Component<Props, State> {\r\n\r\n    _isMounted = false;\r\n    \r\n    viewPort = window.matchMedia(\"(max-width: 767px)\");\r\n\r\n    viewPortChange = (port) => {\r\n        this.setState({\r\n            mobileViewPort: port.matches\r\n        });\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            views: this.props.children,\r\n            showSide: false,\r\n            mobileViewPort: false\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.initializeViews();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        this.viewPortChange(this.viewPort);\r\n        this.viewPort.addListener(this.viewPortChange);\r\n\r\n        receiveMessage().subscribe(message => {\r\n            if (this._isMounted) {\r\n                if (message.name === 'sidebar') {\r\n                    this.setState({\r\n                        showSide: message.signal\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    initializeViews() {\r\n        React.Children.toArray(this.state.views).forEach((node) => {\r\n            // node.type.name is minified after build and so static build result has different alphabet\r\n            // if (node.type.name === 'View') {\r\n                if (node.props.main) {\r\n                    this.setState({\r\n                        main: node\r\n                    })\r\n                } else if (node.props.side) {\r\n                    this.setState({\r\n                        side: node\r\n                    })\r\n                }\r\n            // }\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.children) {\r\n            this.setState({\r\n                views: nextProps.children\r\n            }, () => {\r\n                this.initializeViews();\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleSideView = () => {\r\n        sendMessage('sidebar', !this.state.showSide);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            {!this.state.mobileViewPort && <div className=\"view-desktop\">\r\n                {this.state.side && <div className=\"view-side\">\r\n                    {this.state.side}\r\n                </div>}\r\n                <div className={'view-content' + (this.state.side ? ' side-present' : '')}>\r\n                    {this.state.main}\r\n                </div>\r\n            </div>}\r\n\r\n            {this.state.mobileViewPort && <div className=\"view-mobile\">\r\n                <div className={(this.state.showSide ? \"slider show\" : \"slider hide\")}>\r\n                    <div className=\"topbar\" onClick={this.toggleSideView}>\r\n                        <div>\r\n                            <button className=\"default block alt noborder\" onClick={this.toggleSideView}>\r\n                                {!this.state.showSide && <><i className=\"material-icons\">expand_more</i>{this.props.sideLabel ? this.props.sideLabel.toUpperCase() : 'MENU'}</>}\r\n                                {this.state.showSide && <><i className=\"material-icons\">expand_less</i>COLLAPSE</>}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"view-side\">\r\n                        {this.state.showSide && this.state.side}\r\n                    </div>\r\n                </div>\r\n                {!this.state.showSide && <div className=\"view-main\">\r\n                    {this.state.main}\r\n                </div>}\r\n            </div>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewResolver;","import React, { Component } from 'react';\r\n\r\ninterface Props {\r\n    main?: any,\r\n    side?: any\r\n}\r\n\r\ninterface State {\r\n}\r\n\r\nclass View extends Component<Props, State> {\r\n    render() {\r\n        return (\r\n            <div>\r\n               {/* {this.props} */}\r\n               {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default View;","import React, { Component } from 'react';\r\nimport './Sidebar.scss';\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n    show?: boolean,\r\n    elements?: Array<string>,\r\n    label: string,\r\n    icon: string,\r\n    number?: number,\r\n    animate?: boolean\r\n}\r\n\r\ninterface State {\r\n    show: boolean,\r\n    elements: Array<string>\r\n}\r\n\r\nclass Sidebar extends Component<Props, State> {\r\n\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: this.props.show ? true : false,\r\n            elements: this.props.elements ? this.props.elements : []\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            show: !this.state.show\r\n        }, () => sendMessage('sidebarExpanded', this.state.show, {label: this.props.label}));\r\n    }\r\n\r\n    hide = () => {\r\n        this.setState({\r\n            show: false\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        receiveMessage().subscribe(message => {\r\n            if (this._isMounted) {\r\n                if (message.name === 'sidebarExpanded' && message.signal && message.data && message.data.label !== this.props.label) {\r\n                    this.setState({\r\n                        show: false\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        const elements = this.state.elements.map((item: any) => (\r\n            <div key={item.label} className=\"element\" onClick={item.action}><i className=\"material-icons\">{item.icon}</i><div className=\"label-text\">{item.label}</div></div>\r\n        ))\r\n        return (            \r\n            <div className=\"sidebar\">\r\n                <div className={this.state.show ? \"header active\" : \"header\"} onClick={this.toggle}>\r\n                    <div className=\"label\">\r\n                        {/* <i className=\"material-icons\">{this.props.icon}</i> */}\r\n                        <div className=\"label-text\">\r\n                            {this.props.label}\r\n                            {this.props.number !== undefined && <div className=\"number\">{this.props.number}</div>}\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"aria\"><i className=\"material-icons\">{this.state.show ? 'expand_less' : 'expand_more'}</i></div> */}\r\n                    <div className=\"aria\"><i className={this.state.show ? \"material-icons collapse\" : \"material-icons\"}>keyboard_arrow_left</i></div>\r\n                </div>\r\n                <div className={this.state.show ? \"content show \" + (this.props.animate ? \"animate\" : \"static\") : \"content hide \" + (this.props.animate ? \"animate\" : \"static\")}>\r\n                    {elements}\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React, { Component } from 'react';\r\nimport './style.scss';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\nimport ArcText from '../Ux/ArcText';\r\nimport { getTenant, updateTenant } from '../Tenant/TenantService';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport ViewResolver from '../Ux/ViewResolver';\r\nimport View from '../Ux/View';\r\nimport Sidebar from '../Ux/Sidebar';\r\nimport { any } from 'prop-types';\r\n\r\ninterface Props {\r\n    match: any,\r\n    setProfile: Function,\r\n    profile: any,\r\n    authorization: Authorization\r\n}\r\n\r\ninterface State { \r\n  name: string,\r\n  email: string,\r\n  jwtPassword:string,\r\n  banner: any,\r\n  stage: Array<String>,\r\n  stages: any,\r\n  _id: any,\r\n  errorFields: {\r\n    name: boolean,\r\n    email: boolean,\r\n    jwtPassword:boolean\r\n  },\r\n\r\n  section: String,\r\n\r\n  sidebarElements: any\r\n}\r\n\r\nclass Settings extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n          name: '',\r\n          email: '',\r\n          jwtPassword:'',\r\n          banner: null,\r\n          stage: [],\r\n          stages: '',\r\n          _id: any,\r\n          errorFields: {\r\n            name: false,\r\n            email: false,\r\n            jwtPassword: false\r\n          },\r\n          section: 'tenantProfile',\r\n          \r\n          sidebarElements: {\r\n            tenant: [\r\n                {\r\n                    label: 'Profile',\r\n                    action: () => this.chooseSection('tenantProfile'),\r\n                    icon: 'home'\r\n                },\r\n                {\r\n                    label:'Support levels',\r\n                    action: () => this.chooseSection('stage'),\r\n                    icon:'fast_forward'\r\n                },\r\n                {\r\n                    label:'Training dataset',\r\n                    action: () => this.chooseSection('trainingDataset'),\r\n                    icon:'bubble_chart'\r\n                },\r\n                {\r\n                    label:'Article categories',\r\n                    action: () => this.chooseSection('articleCategories'),\r\n                    icon:'compare'\r\n                }\r\n            ],\r\n            user: [\r\n                {\r\n                    label: 'Profile',\r\n                    action: () => this.chooseSection('userProfile'),\r\n                    icon: 'person'\r\n                },\r\n                {\r\n                    label: 'Password',\r\n                    action: () => this.chooseSection('userPassword'),\r\n                    icon: 'security'\r\n                }\r\n            ]\r\n          }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.props.setProfile({\r\n        ...this.props.profile,\r\n        tenant: this.props.match.params.tenant\r\n      })\r\n\r\n        getTenant(this.props.match.params.tenant,  {\r\n            headers: {\r\n                Authorization: this.props.authorization.token\r\n            }\r\n        }).then ((response) => {\r\n            this.setState({\r\n                name: response.data.name,\r\n                email: response.data.ownerEmail,\r\n                jwtPassword: response.data.jwtPassword,\r\n                stage: response.data.stage,\r\n                _id: response.data._id,\r\n            })\r\n        }).catch(() => {\r\n        })\r\n    }\r\n\r\n    chooseSection = (section: String) => {\r\n        this.setState({\r\n            section: section\r\n        });\r\n        sendMessage('sidebar', false);\r\n    }\r\n\r\n    handleImageChange = (e) => {\r\n      this.setState({\r\n        banner: e.target.files[0]\r\n      })\r\n    }\r\n\r\n    handleAddStage= e => {\r\n        e.preventDefault()\r\n        const stage = this.state.stage.concat(this.state.stages)\r\n        this.setState(state =>({\r\n            stage: [...this.state.stage,this.state.stages]\r\n        }))\r\n    }\r\n\r\n    handleRemoveStage = idx => () =>{\r\n        this.setState({\r\n            stage: [...this.state.stage.filter((s, sidx) => idx != sidx)]\r\n        })\r\n    }\r\n\r\n    levels = () => {\r\n        updateTenant({\r\n            name: this.state.name,\r\n            _id: this.state._id,\r\n            data: this.state.stage,\r\n        },{\r\n        headers: {\r\n            Authorization: this.props.authorization.token\r\n        }\r\n       }\r\n    ) \r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {\r\n                ...this.state,\r\n                [event.currentTarget.name]: event.currentTarget.value,\r\n                errorFields: {\r\n                  ...this.state.errorFields,\r\n                  [event.currentTarget.name]: false\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"settings\">\r\n                \r\n                <ViewResolver sideLabel='More options'>\r\n                    <View main>\r\n                        {this.state.section === 'tenantProfile' && \r\n                        <>\r\n                        <div className=\"typography-3 space-bottom-2\">Tenant Profile</div>\r\n                        <div className=\"form\">\r\n                            <ArcText id=\"email\" data={this.state} label=\"Administrator Email\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></ArcText>\r\n                            <ArcText id=\"jwtPassword\" type=\"password\" data={this.state} label=\"JWT Password\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></ArcText>\r\n                            <label className=\"file-upload space-top-1 space-bottom-4\">\r\n                                <input type=\"file\" accept=\"image/png, image/jpeg\" onChange={this.handleImageChange} required/>\r\n                                <i className=\"material-icons\">add_photo_alternate</i>\r\n                                {!this.state.banner && \"Choose Banner/Cover Image\"}\r\n                                {this.state.banner && this.state.banner.name}\r\n                            </label>\r\n                        </div>\r\n                        </>}\r\n\r\n                        {this.state.section === 'stage' &&\r\n                        <div className=\"stage\">\r\n                            <div className=\"typography-3 space-bottom-2\">Support Levels</div>\r\n                            <div className=\"form\">\r\n                                <button className=\"secondary animate in right align-left\" onClick={e => this.handleAddStage(e)}><i className=\"material-icons\">label_important</i>New Stage</button>\r\n                                <button className=\"primary animate in right align-center\" onClick={this.levels}><i className=\"material-icons\">save_alt</i>Save</button>\r\n                                <button className=\"default animate in right align-right\" onClick={this.levels}><i className=\"material-icons\">undo</i>Reset</button>\r\n                                <div className=\"space-bottom-2\"></div>\r\n                                {this.state.stage && this.state.stage.map((item, idx) => (\r\n                                    <div className=\"stage-row\">\r\n                                        <div><ArcText  id=\"stages\" label=\"\" data={item} handleChange ={ (e) =>this.handleChange(e) } /></div>\r\n                                        <div><button className=\"secondary animate in right space-bottom-2\" onClick={this.handleRemoveStage(idx)}><i className=\"material-icons\">delete</i>Remove</button></div>\r\n                                    </div>\r\n                                ))}\r\n                                {(!this.state.stage || this.state.stage.length === 0) && <div>No custom stages defined</div>}\r\n                            </div>\r\n                        </div>}\r\n\r\n                        {this.state.section === 'userProfile' && \r\n                        <>\r\n                        <div className=\"typography-3 space-bottom-2\">User Profile</div>\r\n                        </>}\r\n\r\n                        {this.state.section === 'userPassword' && \r\n                        <>\r\n                        <div className=\"typography-3 space-bottom-2\">Change Login Password</div>\r\n                        </>}\r\n                    </View>\r\n                    <View side>\r\n                            <div className=\"filter-container\">\r\n                                <div className=\"section-main\">\r\n                                    <Sidebar label=\"Tenant\" elements={this.state.sidebarElements['tenant']} icon=\"home\" animate />\r\n                                    <Sidebar label=\"User\" elements={this.state.sidebarElements['user']} icon=\"account_circle\" animate />\r\n                                </div>\r\n                            </div>\r\n                    </View>\r\n                </ViewResolver>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Settings;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport './style.scss';\r\nimport Home from '../Home';\r\nimport { HashRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport Login from '../Auth/Login';\r\nimport Landing from '../Landing';\r\nimport PrivateRoute from '../Auth/PrivateRoute';\r\nimport AuthInit from '../Auth/AuthInit';\r\nimport PropTypes from 'prop-types';\r\nimport { withCookies } from 'react-cookie';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport { getProfile, setProfile } from '../../actions/ProfileActions';\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport Backdrop from './Backdrop';\r\nimport Notification from '../Notification';\r\nimport Navigation from '../Navigation';\r\nimport store from '../../store';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\nimport Tenant from '../Tenant';\r\nimport Settings from './../Settings';\r\n\r\nconst themes = {\r\n    'themecolor_1': getTheme('#69A7BF'),\r\n    'themecolor_2': getTheme('#99587B'),\r\n    'themecolor_3': getTheme('#A66C26'),\r\n    'themecolor_4': getTheme('#37AE82')\r\n}\r\n\r\nfunction getTheme(color: string) {\r\n    return createMuiTheme({\r\n        palette: {\r\n          primary: {\r\n              main: color         \r\n          },\r\n          secondary: {\r\n              main: color\r\n          }\r\n        }\r\n      });\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    getProfile: Function,\r\n    setProfile: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    cookies: any,\r\n\r\n    // event: PropTypes.object,\r\n    profile: any,\r\n    authorization: Authorization\r\n}\r\n\r\ninterface State {\r\n    authorization: Authorization,\r\n    profile: any,\r\n    event: any\r\n}\r\n\r\nclass Content extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.props.getAuth();\r\n\r\n\r\n        this.state = {\r\n            authorization: {\r\n                isAuth: false\r\n            },\r\n            event: {},\r\n            profile: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe();\r\n    }\r\n    \r\n    logout = (event: any, type = 'success', message = 'You have been logged out') => {\r\n        this.props.removeAuth();\r\n        this.props.cookies.remove('isAuth');\r\n        this.props.cookies.remove('token');\r\n        this.props.cookies.remove('secret');\r\n        this.props.cookies.remove('name');\r\n        sendMessage('notification', true, {type: type, message: message, duration: 3000});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"App\"}>\r\n                \r\n                <HashRouter>\r\n                    <AuthInit />\r\n                    <Backdrop />\r\n                    <div className=\"body\">\r\n                        <div className=\"body-content\">\r\n                            <Notification />\r\n                            <MuiThemeProvider theme={themes['themecolor_1']}>\r\n                                <Navigation {...this.props} logout={() => this.logout} event={this.state.event} />\r\n                                <Route path=\"/:tenant/home\" render={(props: any) => <Home {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                <Route path=\"/:tenant/login\" render={(props: any) => <Login {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                <Route path=\"/\" exact render={(props: any) => <Landing {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                <Route path=\"/home\" exact render={(props: any) => <Landing {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                <Route path=\"/tenant\" exact render={(props: any) => <Tenant {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                <PrivateRoute path=\"/:tenant/settings\" render={(props: any) => <Settings {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                            </MuiThemeProvider>\r\n                        </div>\r\n                    </div>\r\n                </HashRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  authorization: state.authorization,\r\n  profile: state.profile//,\r\n//   event: state.event\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth, getProfile, setProfile })(withCookies(Content));\r\n","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from '../../store';\r\nimport './style.scss';\r\nimport './button.scss';\r\nimport './metric.scss';\r\nimport Content from './Content';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Content {...this.props} />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {CookiesProvider} from \"react-cookie\";\r\n\r\nReactDOM.render(<CookiesProvider><App /></CookiesProvider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/mirror_white.ff53f974.svg\";","module.exports = __webpack_public_path__ + \"static/media/cover.b89312c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mirror_white_small.7aed2e38.svg\";"],"sourceRoot":""}