{"version":3,"sources":["images/mirror_black.svg","images/mirror_white_small.svg","reducers/AuthReducer.ts","reducers/ProfileReducer.ts","reducers/UserReducer.ts","reducers/CategoryReducer.ts","reducers/RequestReducer.ts","reducers/StageReducer.ts","reducers/index.ts","actions/types.ts","store.ts","components/Home/index.tsx","components/Auth/OaLogin.tsx","components/Types/schema.ts","oakui/OakSpinner.tsx","components/Landing/AssetItem.tsx","oakui/OakHeadingLink.tsx","oakui/OakHeading.tsx","components/Landing/ListAssets.tsx","oakui/icons/SendIcon.tsx","oakui/icons/IoakIcon.tsx","oakui/OakIcon.tsx","oakui/OakButton.tsx","components/Landing/GettingStarted.tsx","components/Landing/index.tsx","components/Lib/RestTemplate.ts","events/MessageService.ts","components/Constants.ts","actions/ProfileActions.ts","components/Notification/NotificationMessage.tsx","components/Notification/index.tsx","components/Navigation/Links.tsx","events/SearchEvent.ts","oakui/SearchBar.tsx","components/Navigation/Desktop.tsx","components/Navigation/Mobile.tsx","actions/AuthActions.ts","components/Navigation/index.tsx","oakui/OakText.tsx","components/Auth/AuthService.ts","components/Utils.ts","components/Tenant/index.tsx","oakui/OakPage.tsx","oakui/OakSection.tsx","components/Article/ArticleHome/index.tsx","components/Auth/OakRouteGraph.tsx","components/Auth/Unauthorized.tsx","oakui/OakEditor.tsx","components/Types/ArticleSchema.ts","components/Article/Category/CategoryTree/CategoryView.tsx","components/Article/Category/CategoryTree/CategoryList.tsx","components/Article/Category/CategoryTree/index.tsx","oakui/OakChipGroup.tsx","components/Article/CreateArticle/CreateItem.tsx","components/Article/CreateArticle/index.tsx","oakui/OakModal.tsx","oakui/OakPrompt.tsx","oakui/OakViewer.tsx","components/Article/ViewArticle/TagItem.tsx","components/Article/ViewArticle/TagContainer.tsx","components/Article/ViewArticle/ArticleItem.tsx","components/Article/ViewArticle/FeedbackView.tsx","components/Types/PostSchema.ts","components/Article/ArticleHome/CommentSection/NewCommentItem.tsx","oakui/OakInfiniteScroll.tsx","components/Lib/DateUtils.ts","components/Article/ArticleHome/CommentSection/ParentCommentPreview.tsx","components/Article/ArticleHome/CommentSection/FeedbackView.tsx","components/Article/ArticleHome/CommentSection/EditCommentItem.tsx","oakui/OakAvatar.tsx","components/Article/ArticleHome/CommentSection/MarkComment.tsx","components/Article/ArticleHome/CommentSection/ViewComment.tsx","components/Article/ArticleHome/CommentSection/CommentList.tsx","oakui/OakSubheading.tsx","components/Article/ArticleHome/CommentSection/index.tsx","components/Article/ViewArticle/index.tsx","components/Article/EditArticle/EditItem.tsx","components/Article/EditArticle/index.tsx","components/Article/ArticleLink.tsx","components/Article/ArticleHome/BrowseArticle/ArticleSection.tsx","components/Article/ArticleHome/BrowseArticle/CategoryView.tsx","components/Article/ArticleHome/BrowseArticle/CreateCategory.tsx","components/Article/ArticleHome/BrowseArticle/CreateCategoryLink.tsx","components/Article/ArticleHome/BrowseArticle/CategorySection.tsx","components/Article/ArticleHome/BrowseArticle/index.tsx","components/Article/ArticleHome/SearchArticle/AlternateSection.tsx","components/Article/ArticleHome/SearchArticle/SearchSection.tsx","components/Article/ArticleHome/SearchArticle/index.tsx","components/Article/ArticleHome/ArticlesByTag/TagLink.tsx","components/Article/ArticleHome/ArticlesByTag/TagSection.tsx","components/Article/ArticleHome/ArticlesByTag/ArticleSection.tsx","components/Article/ArticleHome/ArticlesByTag/index.tsx","components/Asset/CreateAsset/CreateItem.tsx","components/Asset/CreateAsset/index.tsx","components/Asset/ViewAsset/ViewItem.tsx","components/Asset/ViewAsset/index.tsx","components/Asset/EditAsset/EditItem.tsx","components/Asset/EditAsset/index.tsx","components/Login/OneAuth/SpaceItem.tsx","components/Login/OneAuth/index.tsx","components/Login/Email/EmailItem.tsx","components/Login/Email/AccountItem.tsx","components/Login/Email/TokenItem.tsx","components/Login/Email/index.tsx","components/Login/LoginMethod.tsx","components/Login/index.tsx","components/Auth/ExternLogin.tsx","components/Post/EditPost/EditItem.tsx","components/Post/EditPost/index.tsx","components/Post/CreatePost/CreateItem.tsx","components/Post/CreatePost/index.tsx","components/Post/ViewPost/TagItem.tsx","components/Post/ViewPost/TagContainer.tsx","components/Post/ViewPost/PostItem.tsx","components/Post/ViewPost/FeedbackView.tsx","components/Post/ViewPost/CommentSection/NewCommentItem.tsx","components/Post/ViewPost/CommentSection/ParentCommentPreview.tsx","components/Post/ViewPost/CommentSection/FeedbackView.tsx","components/Post/ViewPost/CommentSection/EditCommentItem.tsx","components/Post/ViewPost/CommentSection/MarkComment.tsx","components/Post/ViewPost/CommentSection/ViewComment.tsx","components/Post/ViewPost/CommentSection/CommentList.tsx","components/Post/ViewPost/CommentSection/index.tsx","components/Post/ViewPost/FollowerView.tsx","components/Common/StatusChip.tsx","components/Post/ViewPost/StatusView.tsx","components/Post/ViewPost/index.tsx","components/Post/PostHome/PostsByTag/TagLink.tsx","components/Post/PostHome/PostsByTag/TagSection.tsx","components/Post/PostLink.tsx","components/Post/PostHome/PostsByTag/PostSection.tsx","components/Post/PostHome/PostsByTag/index.tsx","components/Post/PostHome/SearchPost/AlternateSection.tsx","components/Post/PostHome/SearchPost/SearchSection.tsx","components/Post/PostHome/SearchPost/index.tsx","components/Post/PostHome/BrowsePost/PostSection.tsx","components/Post/PostHome/BrowsePost/index.tsx","components/Post/PostHome/index.tsx","components/Asset/CreateAsset/AssetCreateSuccess.tsx","components/Post/MyPosts/index.tsx","components/App/Content.tsx","actions/UserActions.ts","components/Logo/index.tsx","components/AppFallback/HealthCheckFailed.tsx","components/AppFallback/HealthCheckProgress.tsx","components/App/index.tsx","serviceWorker.js","index.tsx","images/mirror_white.svg"],"names":["module","exports","initialState","isAuth","firstname","lastname","theme","textSize","themeColor","users","data","items","logs","combineReducers","authorization","state","action","type","console","log","payload","profile","user","category","request","stage","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","Home","props","className","queryString","require","OaLogin","useEffect","location","search","query","parse","cookies","set","asset","space","authKey","history","push","from","GET_SESSION","gql","NEW_EMAIL_SESSION","NEW_EXTERN_SESSION","CREATE_EMAIL_ACCOUNT","LIST_ASSETS","GET_ASSET","CREATE_ASSET","UPDATE_ASSET","USERS","OakSpinner","AssetItem","onClick","assetId","name","description","OakHeadingLink","link","icon","size","label","OakHeading","title","subtitle","links","map","item","index","key","linkSize","children","ListAssets","useQuery","loading","error","assets","id","SendIcon","version","x","y","viewBox","enableBackground","style","dimension","transform","d","IoakIcon","fill","points","accent","width","height","stroke","strokeWidth","strokeMiterlimit","cx","cy","r","OakIcon","getStyle","colorVar","chosenColor","color","getDimension","fontSize","svg","mat","fa","OakButton","useSelector","includes","variant","invert","small","align","GettingStarted","Landing","baseUrl","process","httpGet","endpoint","headers","url","axios","get","httpPost","post","subject","Subject","sendMessage","signal","next","receiveMessage","asObservable","constants","API_URL_TENANT","API_URL_TENANT_BANNER","API_URL_TENANT_CREATE","API_TENANT_URL","API_URL_PRESIGNUP","API_URL_RESET","API_URL_CODE","API_URL_USER_DETAILS","API_URL_STAGE","API_URL_PREDICT","API_URL_CATEGORY","API_URL_FAQ","API_URL_SR","API_URL_USER","API_URL","API_SIGNIN","API_SIGNUP","API_KEYS","API_JWT","API_HEALTHCHECK_HELLO","getProfile","dispatch","setProfile","NotificationMessage","notification","message","handleRemove","Notification","useState","spinner","setSpinner","notificationList","setNotificationList","removeNotification","notificationData","filter","eventBus","subscribe","localCopy","unshift","duration","setTimeout","addNotification","unsubscribe","length","slice","reverse","data-test","Links","to","activeClassName","searchTextChangedEvent$","BehaviorSubject","searchEvent$","SearchBar","searchText","setSearchText","searchTextChangedEventListener","method","onSubmit","event","preventDefault","noValidate","alt","spellCheck","autoComplete","autoFocus","placeholder","required","value","onChange","target","xmlns","Desktop","showSearchBar","setShowSearchBar","signin","login","transparent","src","mirrorBlack","mirrorWhite","toggleDarkMode","logout","Mobile","menu","setData","toggleMenu","mirrorWhiteSmall","addAuth","connect","withCookies","withRouter","visible","mobilemenu","chooseTheme","showSettings","transparentNavBar","firstLoad","useDispatch","setAsset","remove","toggleSettings","OakText","multiline","disabled","errorFields","handleChange","onFocus","handleFocus","htmlFor","errorData","encrypt","password","salt","config","cipher","iter","ks","CryptoJS","enc","Base64","stringify","Utf8","sjcl","isEmptyOrSpaces","str","match","isEmptyAttributes","object","Object","keys","find","htmlToText","toString","replace","Tenant","email","repeatPassword","jwtPassword","pageNo","created","banner","setBanner","setErrorFields","currentTarget","setError","fieldName","createTenantAction","preSignupData","formData","FormData","append","tenantName","solution","then","response","Promise","resolve","createTenant","status","catch","e","accept","files","test","preSignup","OakPage","OakSection","ArticleHome","OakRouteGraph","gqlClient","useApolloClient","runMidleware","middlewareName","readAuthenticationSpace","authenticateSpace","isAdmin","authenticate","a","redirect","params","cookieKey","variables","session","token","secret","firstName","lastName","redirectToLogin","redirectToUnauthorized","pathname","forEach","middlewares","component","Unauthorized","OakEditor","blockApiChangeEvents","setBlockApiChangeEvents","bubble","delta","source","modules","toolbar","list","indent","background","header","font","formats","LIST_ARTICLES","SEARCH_ARTICLES","GET_ARTICLE","ARTICLES_BY_TAG","UPDATE_ARTICLE","DELETE_ARTICLE","LIST_ARTICLE_CATEGORIES","UPDATE_ARTICLE_CATEGORY","ADD_ARTICLE_FEEDBACK","REMOVE_ARTICLE_FEEDBACK","ARTICLE_TAG_CLOUD","CategoryView","parentNode","CategoryList","view","setView","articleCategories","parentCategoryId","CategoryTree","tree","setTree","showChoose","setShowChoose","categories","traceParents","parentCategory","choosable","OakChipGroup","uuidv4","searchOn","setSearchOn","criteria","setCriteria","undefined","dropdownFiltered","setDropdownFiltered","updateSearchResults","objects","selected","handleAddition","searchCriteria","elements","toLowerCase","window","addEventListener","document","getElementById","contains","handleRemoval","handleSubmit","ADD_ARTICLE","CreateItem","useMutation","addArticle","tags","categoryId","addTags","removeTags","setState","formErrors","setFormErrors","categoryid","goBack","CreateArticle","urlParam","setUrlParam","OakModal","setVisible","escFunction","removeEventListener","keyCode","toggleVisibility","getmodalStyle","noheader","fullscreen","donotMobilize","OakPrompt","text","OakViewer","dangerouslySetInnerHTML","__html","TagItem","TagContainer","ArticleItem","article","deleteArticle","confirmDelete","setConfirmDelete","deleteArticledata","getHeadingLinks","FeedbackView","addArticleFeedback","removeArticleFeedback","providedFeedbacks","setProvidedFeedbacks","feedback","articleId","helpful","notHelpful","LIST_POSTS","SEARCH_POSTS","MY_POSTS","GET_POST","POSTS_BY_TAG","UPDATE_POST","DELETE_POST","ADD_POST_FEEDBACK","REMOVE_POST_FEEDBACK","POST_TAG_CLOUD","POST_COMMENTS","POST_COMMENT","UPDATE_POST_COMMENT","ADD_POST_COMMENT_FEEDBACK","REMOVE_POST_COMMENT_FEEDBACK","FOLLOW_POST","UNFOLLOW_POST","MARK_POSTCOMMENT_AS_ANSWER","UNMARK_POSTCOMMENT_AS_ANSWER","NewCommentItem","createComment","comment","closeEdit","parentId","parentid","postId","updatePostComment","OakInfiniteScroll","isFetching","setIsFetching","handleScroll","querySelector","selector","clientHeight","scrollTop","scrollHeight","currentYear","Date","getFullYear","formatDateText","dateText","date","format","ParentCommentPreview","showFullText","setShowFullText","setUser","parentComment","createdBy","createdAt","addPostCommentFeedback","removePostCommentFeedback","commentId","EditCommentItem","updateComment","OakAvatar","substring","showName","MarkComment","markAnswer","unMarkAnswer","isAnswer","setIsAnswer","ViewComment","actionType","setActionType","setParentComment","matchingComment","comments","postComment","CommentList","pageSize","fetchPolicy","fetchMore","usersData","postComments","hasMore","updateQuery","prev","fetchMoreResult","results","OakSubheading","CommentSection","newComment","setNewComment","viewComments","setViewComments","ViewArticle","EditItem","updateArticle","validateEmptyText","update","EditArticle","ArticleLink","views","ArticleSection","articles","articleCount","setArticleCount","subCategoryCount","setSubCategoryCount","addChildrenArticles","count","newCount","handleClick","CreateCategory","addArticleCategory","cache","readQuery","writeQuery","handleClose","CreateCategoryLink","CategorySection","showNewCategoryPrompt","setShowNewCategoryPrompt","BrowseArticle","AlternateSection","browsePost","SearchSection","refetch","handleSearchTextChange","searchArticles","SearchArticle","TagLink","tag","TagSection","articleTagCloud","articlesByTag","ArticlesByTag","createAsset","trim","addition","finally","CreateAsset","ViewItem","ViewAsset","updateAsset","productionMode","assetData","changeMode","EditAsset","SpaceItem","href","spaceId","OneAuth","setSearchCriteria","setLoading","queryParam","setQueryParam","existingSpace","indexOf","_id","EmailItem","isTokenSent","setIsTokenSent","setToken","newEmailSession","sessionId","newAccount","tokenLogin","AccountItem","createEmailAccount","setMessage","submit","emailLogin","TokenItem","auth_token","Email","LoginMethod","svgIcon","Login","setFrom","ExternLogin","isInvalidToken","setIsInvalidToken","createSession","newExternSession","updatePost","EditPost","ADD_POST","addPost","CreatePost","PostItem","deletePost","deletePostdata","addPostFeedback","removePostFeedback","FollowerView","addFollower","removeFollower","isFollowing","setIsFollowing","followerList","userId","StatusChip","StatusView","isAnswered","answeredOn","Math","round","abs","getTime","ViewPost","postTagCloud","PostLink","followers","PostSection","postsByTag","PostsByTag","searchPosts","SearchPost","posts","BrowsePost","PostHome","AssetCreateSuccess","MyPosts","myPosts","themes","themecolor1","getTheme","themecolor2","themecolor3","themecolor4","createMuiTheme","palette","primary","main","secondary","getUser","addUser","httpLink","createHttpLink","uri","authLink","setContext","_","client","ApolloClient","concat","InMemoryCache","path","render","propsLocal","exact","Logo","HealthCheckFailed","HealthCheckProgress","App","isVerified","allowAccess","healthCheck","setHealthCheck","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.706db033.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mirror_black.14bccd72.svg\";","module.exports = __webpack_public_path__ + \"static/media/mirror_white_small.7aed2e38.svg\";","import { GET_AUTH, ADD_AUTH, REMOVE_AUTH } from '../actions/types';\r\n\r\nconst initialState = {\r\n  isAuth: false,\r\n  firstname: '',\r\n  lastname: '',\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_AUTH:\r\n      console.log('GET_AUTH reducer');\r\n      return {\r\n        ...state,\r\n      };\r\n    case ADD_AUTH:\r\n      console.log('ADD_AUTH reducer');\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n\r\n    case REMOVE_AUTH:\r\n      console.log('REMOVE_AUTH reducer');\r\n      return {\r\n        ...state,\r\n        isAuth: false,\r\n        firstname: '',\r\n        lastname: '',\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROFILE, SET_PROFILE } from '../actions/types';\r\n\r\nconst initialState = {\r\n  theme: 'theme_dark',\r\n  textSize: 'textsize_medium',\r\n  themeColor: 'themecolor1',\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROFILE:\r\n      console.log('GET_PROFILE reducer');\r\n      return {\r\n        ...state,\r\n      };\r\n    case SET_PROFILE:\r\n      console.log('SET_PROFILE reducer');\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_USER, ADD_USER, FETCH_ALL_USERS } from '../actions/types';\r\n\r\nconst initialState = {\r\n  users: [],\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_USER:\r\n      console.log('GET_USER reducer');\r\n      return {\r\n        ...state,\r\n      };\r\n    case ADD_USER:\r\n      console.log('ADD_USER reducer');\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    case FETCH_ALL_USERS:\r\n      console.log('FETCH_ALL_USERS reducer');\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { FETCH_CATEGORY } from '../actions/types';\r\n\r\nconst initialState = {\r\n  data: [],\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_CATEGORY:\r\n      console.log('FETCH_CATEGORY reducer');\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { FETCH_REQUEST } from '../actions/types';\r\n\r\nconst initialState = {\r\n  items: [],\r\n  logs: [],\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_REQUEST:\r\n      console.log('FETCH_REQUEST reducer');\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { FETCH_STAGE } from '../actions/types';\r\n\r\nconst initialState = {\r\n  data: [],\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_STAGE:\r\n      console.log('FETCH_STAGE reducer');\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport AuthReducer from './AuthReducer';\r\nimport ProfileReducer from './ProfileReducer';\r\nimport UserReducer from './UserReducer';\r\nimport CategoryReducer from './CategoryReducer';\r\nimport RequestReducer from './RequestReducer';\r\nimport StageReducer from './StageReducer';\r\n\r\nexport default combineReducers({\r\n  authorization: AuthReducer,\r\n  profile: ProfileReducer,\r\n  user: UserReducer,\r\n  category: CategoryReducer,\r\n  request: RequestReducer,\r\n  stage: StageReducer,\r\n});\r\n","export const GET_AUTH = 'GET_AUTH';\r\nexport const ADD_AUTH = 'ADD_AUTH';\r\nexport const REMOVE_AUTH = 'REMOVE_AUTH';\r\n\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const SET_PROFILE = 'SET_PROFILE';\r\n\r\nexport const GET_USER = 'GET_USER';\r\nexport const ADD_USER = 'ADD_USER';\r\n\r\nexport const FETCH_CATEGORY = 'FETCH_CATEGORY';\r\nexport const FETCH_REQUEST = 'FETCH_REQUEST';\r\nexport const FETCH_STAGE = 'FETCH_STAGE';\r\nexport const FETCH_ALL_USERS = 'FETCH_ALL_USERS';\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware) // ,\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './style.scss';\r\nimport cover from '../../images/cover.jpg';\r\nimport SearchBar from '../../oakui/SearchBar';\r\nimport constants from '../Constants';\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\nimport {\r\n  searchTextChangedEvent$,\r\n  searchEvent$,\r\n} from '../../events/SearchEvent';\r\nimport { getBanner } from '../Tenant/TenantService';\r\nimport { httpGet, httpPost, httpPut } from '../Lib/RestTemplate';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport OakDialog from '../../oakui/OakDialog';\r\nimport { isEmptyOrSpaces } from '../Utils';\r\nimport OakPrompt from '../../oakui/OakPrompt';\r\nimport OakText from '../../oakui/OakText';\r\nimport OakButton from '../../oakui/OakButton';\r\n\r\nconst pageYOffsetCutoff = 10;\r\n\r\ninterface Props {\r\n  setProfile: Function;\r\n  profile: any;\r\n  match: any;\r\n  history: any;\r\n}\r\n\r\nconst Home = (props: Props) => {\r\n  return <div className=\"home full\">Home page</div>;\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect } from 'react';\r\nimport './Login.scss';\r\n\r\nconst queryString = require('query-string');\r\n\r\ninterface Props {\r\n  cookies: any;\r\n  history: any;\r\n  location: any;\r\n}\r\n\r\nconst OaLogin = (props: Props) => {\r\n  useEffect(() => {\r\n    if (props.location.search) {\r\n      const query = queryString.parse(props.location.search);\r\n      props.cookies.set(\r\n        `mirror_${query.asset}`,\r\n        `oa ${query.space} ${query.authKey}`\r\n      );\r\n      props.history.push(query.from ? query.from : `/${query.asset}/article`);\r\n    }\r\n  }, []);\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default OaLogin;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const GET_SESSION = gql`\r\n  query Session($key: ID!, $asset: String) {\r\n    session(key: $key, asset: $asset) {\r\n      id\r\n      firstName\r\n      lastName\r\n      email\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NEW_EMAIL_SESSION = gql`\r\n  query NewEmailSession($email: String!) {\r\n    newEmailSession(email: $email) {\r\n      sessionId\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NEW_EXTERN_SESSION = gql`\r\n  query NewExternSession($token: String!, $asset: String) {\r\n    newExternSession(token: $token, asset: $asset) {\r\n      sessionId\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_EMAIL_ACCOUNT = gql`\r\n  mutation CreateEmailAccount($payload: UserPayload) {\r\n    createEmailAccount(payload: $payload) {\r\n      id\r\n      email\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LIST_ASSETS = gql`\r\n  query Assets {\r\n    assets {\r\n      id\r\n      name\r\n      description\r\n      jwtPassword\r\n      productionMode\r\n      assetId\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ASSET = gql`\r\n  query Asset($assetId: String!) {\r\n    asset(assetId: $assetId) {\r\n      id\r\n      name\r\n      description\r\n      jwtPassword\r\n      productionMode\r\n      assetId\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_ASSET = gql`\r\n  mutation CreateAsset(\r\n    $payload: AssetPayload!\r\n    $addition: AssetAdditionPayload!\r\n  ) {\r\n    createAsset(payload: $payload, addition: $addition) {\r\n      id\r\n      name\r\n      description\r\n      jwtPassword\r\n      productionMode\r\n      assetId\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_ASSET = gql`\r\n  mutation UpdateAsset($payload: AssetPayload!) {\r\n    updateAsset(payload: $payload) {\r\n      id\r\n      name\r\n      description\r\n      jwtPassword\r\n      productionMode\r\n      assetId\r\n    }\r\n  }\r\n`;\r\n\r\nexport const USERS = gql`\r\n  query Users {\r\n    users {\r\n      id\r\n      firstName\r\n      lastName\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport './styles/oak-spinner.scss';\r\n\r\nconst OakSpinner = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"oak-spinner\">\r\n        <div className=\"spinner-wrapper\">\r\n          <span />\r\n          <span />\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OakSpinner;\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport { Asset } from '../../types/graphql';\r\n\r\ninterface Props {\r\n  asset: Asset;\r\n  history: any;\r\n}\r\n\r\nconst AssetItem = (props: Props) => {\r\n  const goToAssetPage = () => {\r\n    props.history.push(`/${props.asset.assetId}/login/home`);\r\n  };\r\n  return (\r\n    <div className=\"asset-list-item\" onClick={goToAssetPage}>\r\n      <div className=\"asset-list-item--link\">\r\n        <div className=\"typography-6\">{props.asset.name}</div>\r\n      </div>\r\n      <div className=\"typography-4\">{props.asset.description}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssetItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './styles/oak-heading.scss';\r\n\r\ninterface Props {\r\n  size?: 'large';\r\n  link: {\r\n    label: string;\r\n    icon?: string;\r\n    action: any;\r\n  };\r\n}\r\n\r\nconst OakHeadingLink = (props: Props) => {\r\n  const getLinkSize = () => {\r\n    return props.size === 'large' ? 'typography-5' : 'typography-4';\r\n  };\r\n  return (\r\n    <div className=\"oak-heading-link\" onClick={() => props.link.action()}>\r\n      <i className=\"material-icons typography-6\">{props.link.icon}</i>\r\n      <div className={`heading-link-label ${getLinkSize()}`}>\r\n        {props.link.label}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OakHeadingLink;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './styles/oak-heading.scss';\r\nimport OakHeadingLink from './OakHeadingLink';\r\n\r\ninterface Props {\r\n  title: any;\r\n  subtitle?: string;\r\n  links?: {\r\n    label: string;\r\n    icon?: string;\r\n    action: any;\r\n  }[];\r\n  linkSize?: 'large';\r\n  children?: any;\r\n}\r\n\r\nconst OakHeading = (props: Props) => {\r\n  return (\r\n    <div className=\"oak-heading\">\r\n      <div className=\"heading-title typography-10\">{props.title}</div>\r\n      {props.subtitle && (\r\n        <div className=\"heading-subtitle typography-4\">{props.subtitle}</div>\r\n      )}\r\n      <div className=\"heading-links\">\r\n        {props.links?.map((item, index) => (\r\n          <OakHeadingLink link={item} key={index} size={props.linkSize} />\r\n        ))}\r\n      </div>\r\n      {props.children && (\r\n        <div className=\"heading-children\">{props.children}</div>\r\n      )}\r\n      <div className=\"heading-highlight\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OakHeading;\r\n","import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport './style.scss';\r\nimport { LIST_ASSETS } from '../Types/schema';\r\nimport OakSpinner from '../../oakui/OakSpinner';\r\nimport AssetItem from './AssetItem';\r\nimport OakHeading from '../../oakui/OakHeading';\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\n\r\nconst ListAssets = (props: Props) => {\r\n  const { loading, error, data } = useQuery(LIST_ASSETS);\r\n  return (\r\n    <div className=\"list-assets\">\r\n      <OakHeading title=\"Choose an asset to proceed\" />\r\n      {loading && <OakSpinner />}\r\n      {!loading && !error && (\r\n        <div className=\"list-assets--content\">\r\n          {data?.assets?.map(asset => (\r\n            <AssetItem asset={asset} history={props.history} key={asset.id} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListAssets;\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  style: object;\r\n  accent: object;\r\n  dimension: object;\r\n}\r\nconst SendIcon = (props: Props) => {\r\n  return (\r\n    <svg\r\n      version=\"1.0\"\r\n      id=\"Layer_1\"\r\n      x=\"0px\"\r\n      y=\"0px\"\r\n      viewBox=\"0 0 57 56\"\r\n      enableBackground=\"new 0 0 57 56\"\r\n      style={props.dimension}\r\n    >\r\n      <g id=\"Chat-Fenster\">\r\n        <g\r\n          id=\"chat_FAQ_Accordion2-Copy-13\"\r\n          transform=\"translate(-1364.000000, -1001.000000)\"\r\n        >\r\n          <g id=\"Send-Message\" transform=\"translate(397.000000, 1008.000000)\">\r\n            <g id=\"Send-Button\" transform=\"translate(990.000000, 10.000000)\">\r\n              <g id=\"Send_1_\">\r\n                <path\r\n                  style={props.style}\r\n                  d=\"M16,0.5c-0.1-0.1-0.3-0.1-0.4-0.1L-7,10.8c-0.1,0.1-0.2,0.2-0.2,0.3s0.1,0.3,0.2,0.3l6.4,3.1\r\n\t\t\t\t\t\tc0.1,0.1,0.3,0,0.4,0L6,9.9l-4.9,4.9C1,14.9,1,15,1,15.1l0.5,6.2c0,0.1,0.1,0.3,0.2,0.3h0.1c0.1,0,0.2,0,0.3-0.1l3.4-3.9l4.2,2\r\n\t\t\t\t\t\tc0.1,0,0.2,0,0.3,0s0.2-0.1,0.2-0.2l5.9-18.6C16.1,0.7,16.1,0.6,16,0.5z\"\r\n                />\r\n              </g>\r\n            </g>\r\n          </g>\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default SendIcon;\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  style: object;\r\n  accent: object;\r\n  dimension: object;\r\n}\r\nconst IoakIcon = (props: Props) => {\r\n  return (\r\n    <svg viewBox=\"0 0 73 73\" style={props.dimension}>\r\n      <polygon\r\n        fill=\"#27AAE1\"\r\n        points=\"38.5,-3.8 37.9,-3.8 37.9,-3.8 38.5,-3.8 \"\r\n      />\r\n      <g>\r\n        <path\r\n          fill=\"#149ED9\"\r\n          d=\"M27.6,23c2.6-1.8,5.8-2.9,9.3-2.9c3.4,0,6.6,1.1,9.3,2.9l6.3-7.5c-4.3-3.2-9.7-5.2-15.6-5.2\r\n\t\tc-5.8,0-11.2,1.9-15.6,5.2L27.6,23z\"\r\n          style={props.accent}\r\n        />\r\n        <rect x=\"32\" y=\"37.4\" width=\"9.8\" height=\"25.6\" style={props.style} />\r\n        <circle\r\n          fill=\"none\"\r\n          stroke=\"#000000\"\r\n          strokeWidth=\"9.75\"\r\n          strokeMiterlimit=\"10\"\r\n          cx=\"36.9\"\r\n          cy=\"36.5\"\r\n          r=\"30.9\"\r\n          style={{ ...props.style, fill: 'none' }}\r\n        />\r\n        <polygon\r\n          fill=\"#27AAE1\"\r\n          points=\"37.2,-3.9 36.6,-3.9 36.6,-3.9 37.2,-3.9 \t\"\r\n        />\r\n        <circle cx=\"36.9\" cy=\"32.8\" r=\"7.8\" style={props.style} />\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default IoakIcon;\r\n","import React from 'react';\r\nimport './styles/oak-icon.scss';\r\nimport SendIcon from './icons/SendIcon';\r\nimport IoakIcon from './icons/IoakIcon';\r\n\r\ninterface Props {\r\n  // pass either mat or svg or fa\r\n  // mat for material icon names\r\n  mat?: string;\r\n  // svg for custom svg icon names\r\n  svg?: string;\r\n  fa?: string;\r\n  size?: string;\r\n  color?: string; // theme names and actual color codes or names or variables\r\n  accent?: string;\r\n}\r\nconst OakIcon = (props: Props) => {\r\n  const getStyle = colorVar => {\r\n    const style: any = {};\r\n    let chosenColor = '';\r\n    switch (colorVar) {\r\n      case 'primary':\r\n        chosenColor = 'var(--color-primary-1)';\r\n        break;\r\n      case 'secondary':\r\n        chosenColor = 'var(--color-secondary-1)';\r\n        break;\r\n      case 'tertiary':\r\n        chosenColor = 'var(--color-tertiary-1)';\r\n        break;\r\n      case 'success':\r\n        chosenColor = 'var(--color-success)';\r\n        break;\r\n      case 'failure':\r\n        chosenColor = 'var(--color-failure)';\r\n        break;\r\n      case 'warning':\r\n        chosenColor = 'var(--color-warning)';\r\n        break;\r\n      default:\r\n        chosenColor = colorVar || 'var(--color-foreground-1)';\r\n    }\r\n    style.fill = chosenColor;\r\n    style.color = chosenColor;\r\n    style.stroke = chosenColor;\r\n    return style;\r\n  };\r\n  const getDimension = () => {\r\n    const dimension: any = {};\r\n    dimension.fontSize = props.size ? props.size : '24px';\r\n    if (props.svg) {\r\n      dimension.height = props.size ? props.size : '24px';\r\n      dimension.width = 'auto';\r\n    }\r\n    return dimension;\r\n  };\r\n  return (\r\n    <div className=\"oak-icon\">\r\n      {props.mat && (\r\n        <i\r\n          className=\"material-icons\"\r\n          style={{ ...getStyle(props.color), ...getDimension() }}\r\n        >\r\n          {props.mat}\r\n        </i>\r\n      )}\r\n      {props.fa && (\r\n        <i\r\n          className={`fontawesome-icons ${props.fa}`}\r\n          style={{ ...getStyle(props.color), ...getDimension() }}\r\n        >\r\n          {props.mat}\r\n        </i>\r\n      )}\r\n      {props.svg && props.svg === 'send' && (\r\n        <SendIcon\r\n          style={getStyle(props.color)}\r\n          accent={props.accent && getStyle(props.accent)}\r\n          dimension={getDimension()}\r\n        />\r\n      )}\r\n      {props.svg && props.svg === 'ioak' && (\r\n        <IoakIcon\r\n          style={getStyle(props.color)}\r\n          accent={props.accent && getStyle(props.accent)}\r\n          dimension={getDimension()}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OakIcon;\r\n","import React, { ReactNode } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './styles/oak-button-mirror.scss';\r\nimport OakIcon from './OakIcon';\r\n\r\ninterface Props {\r\n  icon?: string; // points to \"mat\" material icon\r\n  fa?: string;\r\n  svg?: string;\r\n  action?: any;\r\n  variant?:\r\n    | 'block'\r\n    | 'outline'\r\n    | 'appear'\r\n    | 'disappear'\r\n    | 'regular'\r\n    | 'disabled'\r\n    | 'drama';\r\n  theme?: 'primary' | 'secondary' | 'tertiary' | 'default';\r\n  align?: 'left' | 'right' | 'center';\r\n  small?: boolean;\r\n  invert?: boolean;\r\n  children?: ReactNode;\r\n  type?: 'button' | 'submit';\r\n}\r\n\r\nconst OakButton = (props: Props) => {\r\n  const profile = useSelector(state => state.profile);\r\n  const getStyle = () => {\r\n    let style = props.theme ? props.theme : '';\r\n    style += profile?.theme?.includes('theme_light') ? ' light' : '';\r\n    style += props.variant ? ` ${props.variant}` : '';\r\n\r\n    if (!props.children) {\r\n      style += ' icon';\r\n    }\r\n\r\n    style += props.invert ? ' invert' : '';\r\n\r\n    style += props.small ? ' small' : '';\r\n\r\n    style += props.align ? ` align-${props.align}` : '';\r\n\r\n    return style;\r\n  };\r\n\r\n  return (\r\n    // eslint-disable-next-line react/button-has-type\r\n    <button className={`oak-button ${getStyle()}`} onClick={props.action}>\r\n      <div className=\"button-label-container\">\r\n        {props.icon && <OakIcon mat={props.icon} size=\"1.2em\" />}\r\n        {props.fa && <OakIcon fa={props.fa} size=\"1.2em\" />}\r\n        {props.svg && <OakIcon svg={props.svg} size=\"1.2em\" />}\r\n        {props.children && props.children}\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default OakButton;\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport OakButton from '../../oakui/OakButton';\r\nimport OakHeading from '../../oakui/OakHeading';\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\n\r\nconst GettingStarted = (props: Props) => {\r\n  const goToCreatePage = () => {\r\n    props.history.push('/asset/create');\r\n  };\r\n  return (\r\n    <div className=\"getting-started\">\r\n      <div>\r\n        <OakHeading title=\"Getting Started\" />\r\n        <div className=\"getting-started--steps space-top-2\">\r\n          <div className=\"typography-7\">Create Asset</div>\r\n          <div className=\"typography-4\">\r\n            An asset represents an application or product being supported.\r\n            Create an asset to get started with the process of onboarding your\r\n            product into Mirror.\r\n          </div>\r\n          <div className=\"typography-7\">Set Mirror URL in your product</div>\r\n          <div className=\"typography-4\">\r\n            To provide seemless experience to your users, add a link from your\r\n            product to Mirror. By triggering a button for example from your\r\n            product, your users will be securely transferred to Mirror with\r\n            their details.\r\n          </div>\r\n          <div className=\"typography-7\">\r\n            Securely transmit user information to Mirror\r\n          </div>\r\n          <div className=\"typography-4\">\r\n            When you redirect from your product, transmit the user information\r\n            like email and name securely using JWT tokens. Password for JWT is\r\n            set by you during the asset creation process.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"action-footer position-center\">\r\n        <OakButton theme=\"primary\" variant=\"disappear\" action={goToCreatePage}>\r\n          Create a new asset\r\n        </OakButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GettingStarted;\r\n","import React, { useState } from 'react';\r\nimport './style.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport OakButton from '../../oakui/OakButton';\r\nimport OakSpinner from '../../oakui/OakSpinner';\r\nimport AssetItem from './AssetItem';\r\nimport ListAssets from './ListAssets';\r\nimport GettingStarted from './GettingStarted';\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\n\r\nconst Landing = (props: Props) => {\r\n  return (\r\n    <div className=\"landing\">\r\n      <ListAssets history={props.history} />\r\n      <hr />\r\n      <GettingStarted history={props.history} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport function httpGet(endpoint: string, headers: any, url?: string) {\r\n  return axios.get((url || baseUrl) + endpoint, headers);\r\n  // .then(function(response) {\r\n  //     return Promise.resolve(response);\r\n  // }\r\n  // )\r\n}\r\n\r\nexport function httpPost(\r\n  endpoint: string,\r\n  payload: any,\r\n  headers: any,\r\n  url?: string\r\n) {\r\n  return axios.post((url || baseUrl) + endpoint, payload, headers);\r\n  //     .then(function(response) {\r\n  //         return Promise.resolve(response);\r\n  //     }\r\n  // )\r\n}\r\n\r\nexport function httpPut(\r\n  endpoint: string,\r\n  payload: any,\r\n  headers: any,\r\n  url?: string\r\n) {\r\n  return axios.put((url || baseUrl) + endpoint, payload, headers);\r\n  //     .then(function(response) {\r\n  //         return Promise.resolve(response);\r\n  //     }\r\n  // )\r\n}\r\n\r\nexport function httpDelete(endpoint: string, headers: any, url?: string) {\r\n  return axios.delete((url || baseUrl) + endpoint, headers);\r\n  //     .then(function(response) {\r\n  //         return Promise.resolve(response);\r\n  //     }\r\n  // )\r\n}\r\n","import { Subject, Observable } from 'rxjs';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Message } from '../components/Types/GeneralTypes';\r\n\r\nconst subject = new Subject<Message>();\r\n\r\nexport function sendMessage(name: string, signal = true, data?: {}) {\r\n  subject.next({\r\n    name,\r\n    signal,\r\n    data,\r\n  });\r\n}\r\n\r\nexport function clearMessages() {\r\n  subject.next();\r\n}\r\n\r\nexport function receiveMessage(): Observable<Message> {\r\n  return subject.asObservable();\r\n}\r\n\r\nexport function newMessageId() {\r\n  return Math.random();\r\n}\r\n\r\nexport function newId() {\r\n  return uuidv4();\r\n}\r\n\r\nexport function httpHandleRequest(\r\n  messageId: any,\r\n  action: string,\r\n  reference: string\r\n) {\r\n  sendMessage('notification', true, {\r\n    id: messageId,\r\n    type: 'running',\r\n    message: `${action} ${reference ? `(${reference})` : ''} - In progress`,\r\n  });\r\n}\r\n\r\nexport function httpHandleResponse(\r\n  messageId: any,\r\n  response: any,\r\n  action: string,\r\n  reference: string\r\n) {\r\n  if (response.status === 200) {\r\n    sendMessage('notification', true, {\r\n      id: messageId,\r\n      type: 'success',\r\n      message: `${action} ${reference ? `(${reference})` : ''} - Success`,\r\n      duration: 3000,\r\n    });\r\n    return { outcome: true };\r\n  }\r\n  sendMessage('notification', true, {\r\n    id: messageId,\r\n    type: 'failure',\r\n    message: `${action} ${\r\n      reference ? `(${reference})` : ''\r\n    } - Failed with error ${response.status}`,\r\n    duration: 3000,\r\n  });\r\n  return { outcome: false };\r\n}\r\n\r\nexport function httpHandleResponseSilent(response: any) {\r\n  if (response.status === 200) {\r\n    return { outcome: true, response };\r\n  }\r\n  return { outcome: false, response };\r\n}\r\n\r\nexport function httpHandleError(\r\n  messageId: any,\r\n  error: any,\r\n  action: string,\r\n  reference: string\r\n) {\r\n  sendMessage('notification', true, {\r\n    id: messageId,\r\n    type: 'failure',\r\n    message: `${action} ${\r\n      reference ? `(${reference})` : ''\r\n    } - Failed with ${error}`,\r\n  });\r\n  return { outcome: false };\r\n}\r\n\r\nexport function httpHandleErrorSilent(error: any) {\r\n  return { outcome: false, response: error };\r\n}\r\n","const constants = {\r\n  API_URL_TENANT: '/tenant',\r\n  API_URL_TENANT_BANNER: '/tenant/banner',\r\n  API_URL_TENANT_CREATE: '/tenant/create',\r\n  API_TENANT_URL: '/tenant/sendURL',\r\n\r\n  API_URL_PRESIGNUP: '/auth/keys',\r\n  API_URL_RESET: '/auth/reset',\r\n  API_URL_CODE: '/auth/sendResetCode',\r\n  API_URL_USER_DETAILS: '/user/details',\r\n\r\n  API_URL_STAGE: '/stage',\r\n  API_URL_PREDICT: '/model/predict',\r\n\r\n  API_URL_CATEGORY: '/category',\r\n  API_URL_FAQ: '/faq',\r\n  API_URL_SR: '/servicerequests',\r\n  API_URL_USER: '/user',\r\n  API_URL: '/auth/',\r\n  API_SIGNIN: '/signin',\r\n  API_SIGNUP: '/signup',\r\n  API_KEYS: '/keys',\r\n  API_JWT: '/signin/jwt',\r\n  API_HEALTHCHECK_HELLO: '/healthcheck/hello',\r\n};\r\n\r\nexport default constants;\r\n","import { GET_PROFILE, SET_PROFILE } from './types';\r\n\r\nexport const getProfile = () => dispatch => {\r\n  dispatch({\r\n    type: GET_PROFILE,\r\n  });\r\n};\r\n\r\nexport const setProfile = payload => dispatch => {\r\n  dispatch({\r\n    type: SET_PROFILE,\r\n    payload,\r\n  });\r\n};\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\ninterface Props {\r\n  notification: any;\r\n  handleRemove: any;\r\n}\r\n\r\nconst NotificationMessage = (props: Props) => {\r\n  return (\r\n    <div className={`message ${props.notification.type}`}>\r\n      {props.notification.type === 'running' && (\r\n        <div\r\n          className={`message-icon ${\r\n            props.notification.type === 'running' ? 'running' : ''\r\n          }`}\r\n        >\r\n          <i className=\"material-icons\">rotate_right</i>\r\n        </div>\r\n      )}\r\n      {props.notification.type === 'success' && (\r\n        <div className=\"message-icon\">\r\n          <i className=\"material-icons\">check_circle_outline</i>\r\n        </div>\r\n      )}\r\n      {props.notification.type === 'warning' && (\r\n        <div className=\"message-icon\">\r\n          <i className=\"material-icons\">warning</i>\r\n        </div>\r\n      )}\r\n      {props.notification.type === 'failure' && (\r\n        <div className=\"message-icon\">\r\n          <i className=\"material-icons\">error_outline</i>\r\n        </div>\r\n      )}\r\n      <div className=\"message-text\">{props.notification?.message}</div>\r\n      <div className=\"message-action\">\r\n        <i className=\"material-icons\" onClick={props.handleRemove}>\r\n          clear\r\n        </i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationMessage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './style.scss';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\nimport OakSpinner from '../../oakui/OakSpinner';\r\nimport NotificationMessage from './NotificationMessage';\r\n\r\nconst Notification = () => {\r\n  const [spinner, setSpinner] = useState(false);\r\n  const [notificationList, setNotificationList] = useState<any | undefined>([]);\r\n  const [data, setData] = useState<any>({ notificationList: [] });\r\n\r\n  const removeNotification = notificationData => {\r\n    setNotificationList(\r\n      notificationList.filter(item => {\r\n        return item.id !== notificationData.id;\r\n      })\r\n    );\r\n  };\r\n  const addNotification = notificationData => {\r\n    const localCopy = [...notificationList];\r\n    localCopy.unshift(notificationData);\r\n    // setNotificationList([notificationData].concat(notificationList));\r\n    setNotificationList(localCopy);\r\n    // console.log(localCopy);\r\n    if (notificationData.duration) {\r\n      setTimeout(() => {\r\n        removeNotification(notificationData);\r\n      }, notificationData.duration);\r\n    } else if (!notificationData.id) {\r\n      setTimeout(() => {\r\n        removeNotification(notificationData);\r\n      }, 5000);\r\n    }\r\n    // console.log(notificationList.splice(0, 100));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const eventBus = receiveMessage().subscribe(message => {\r\n      if (message.name === 'notification') {\r\n        if (!message.signal) {\r\n          removeNotification(message.data);\r\n        } else {\r\n          removeNotification(message.data);\r\n          addNotification(message.data);\r\n          // turn off spinner when a notification arrives\r\n          setSpinner(false);\r\n\r\n          // if (message.data && message.data.duration) {\r\n          //   setTimeout(() => {\r\n          //     sendMessage('notification', false);\r\n          //   }, message.data.duration);\r\n          // }\r\n        }\r\n      }\r\n\r\n      if (message.name === 'spinner') {\r\n        setSpinner(message.signal);\r\n      }\r\n    });\r\n    return () => eventBus.unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {notificationList && notificationList.length > 0 && (\r\n        <div className=\"notification\">\r\n          {notificationList\r\n            .slice(0, 5)\r\n            .reverse()\r\n            .map(notification => (\r\n              <div key={notification.id || notification.message}>\r\n                <NotificationMessage\r\n                  notification={notification}\r\n                  handleRemove={removeNotification}\r\n                />\r\n              </div>\r\n            ))}\r\n        </div>\r\n      )}\r\n      {/* {spinner && <div data-test=\"spinner\" className=\"lds-dual-ring\" />} */}\r\n      {spinner && <OakSpinner data-test=\"spinner\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\n\r\nimport './style.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n  authorization: Authorization;\r\n  asset: string;\r\n}\r\n\r\nconst Links = (props: Props) => {\r\n  return (\r\n    <div className=\"links\">\r\n      {props.authorization.isAuth && (\r\n        <>\r\n          <NavLink\r\n            to={`/${props.asset}/home`}\r\n            className=\"navitem\"\r\n            activeClassName=\"active\"\r\n          >\r\n            Home\r\n          </NavLink>\r\n          <NavLink\r\n            to={`/${props.asset}/article`}\r\n            className=\"navitem\"\r\n            activeClassName=\"active\"\r\n          >\r\n            Articles\r\n          </NavLink>\r\n          <NavLink\r\n            to={`/${props.asset}/post`}\r\n            className=\"navitem\"\r\n            activeClassName=\"active\"\r\n          >\r\n            Forum\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to={`/${props.asset}/asset/view`}\r\n            className=\"navitem\"\r\n            activeClassName=\"active\"\r\n          >\r\n            Asset\r\n          </NavLink>\r\n          <NavLink\r\n            to={`/${props.asset}/mypost/mypost`}\r\n            className=\"navitem\"\r\n            activeClassName=\"active\"\r\n          >\r\n            My posts\r\n          </NavLink>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Links;\r\n","import { BehaviorSubject, Subject } from 'rxjs';\r\n\r\nexport const searchTextChangedEvent$ = new BehaviorSubject<string>('');\r\nexport const searchEvent$ = new Subject<string>();\r\n","import React, { useEffect, useState } from 'react';\r\nimport './SearchBar.scss';\r\nimport { searchTextChangedEvent$, searchEvent$ } from '../events/SearchEvent';\r\n\r\ninterface Props {\r\n  alt?: boolean;\r\n}\r\n\r\nconst SearchBar = (props: Props) => {\r\n  const [searchText, setSearchText] = useState('');\r\n\r\n  useEffect(() => {\r\n    const searchTextChangedEventListener = searchTextChangedEvent$.subscribe(\r\n      data => {\r\n        setSearchText(data);\r\n      }\r\n    );\r\n    return () => searchTextChangedEventListener.unsubscribe();\r\n  }, []);\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    searchEvent$.next(searchText);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    searchTextChangedEvent$.next(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <form method=\"GET\" onSubmit={onSubmit} noValidate>\r\n      <div className={`search-bar${props.alt ? ' alt' : ''}`}>\r\n        <input\r\n          name=\"searchText\"\r\n          spellCheck={false}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Mirror, mirror, on the wall, who's the fairest of them all?\"\r\n          required\r\n          value={searchText}\r\n          onChange={handleChange}\r\n        />\r\n        <button className=\"icon\">\r\n          <i>\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"24\"\r\n              height=\"24\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\r\n            </svg>\r\n          </i>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './style.scss';\r\nimport mirrorWhite from '../../images/mirror_white.svg';\r\nimport mirrorBlack from '../../images/mirror_black.svg';\r\nimport Links from './Links';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\n// import SearchBar from '../Ux/SearchBar';\r\nimport { receiveMessage } from '../../events/MessageService';\r\nimport SearchBar from '../../oakui/SearchBar';\r\nimport OakButton from '../../oakui/OakButton';\r\n\r\ninterface Props {\r\n  sendEvent: Function;\r\n  getAuth: Function;\r\n  addAuth: Function;\r\n  removeAuth: Function;\r\n  getProfile: Function;\r\n  toggleDarkMode: Function;\r\n  profile: Profile;\r\n  asset: string;\r\n  login: Function;\r\n  transparent: boolean;\r\n  logout: Function;\r\n  toggleSettings: any;\r\n}\r\n\r\nconst Desktop = (props: Props) => {\r\n  const [showSearchBar, setShowSearchBar] = useState(false);\r\n  const authorization = useSelector(state => state.authorization);\r\n\r\n  useEffect(() => {\r\n    props.getProfile();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    receiveMessage().subscribe(message => {\r\n      if (message.name === 'show-navbar-element') {\r\n        setShowSearchBar(message.signal);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const signin = type => {\r\n    props.login(type);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        props.transparent ? 'navbar desktop transparent' : 'navbar desktop'\r\n      }\r\n    >\r\n      <div className=\"left\">\r\n        {!props.transparent && props.profile.theme === 'theme_light' && (\r\n          <img className=\"logo\" src={mirrorBlack} alt=\"Mirror logo\" />\r\n        )}\r\n        {(props.transparent || props.profile.theme === 'theme_dark') && (\r\n          <img className=\"logo\" src={mirrorWhite} alt=\"Mirror logo\" />\r\n        )}\r\n        <Links authorization={authorization} asset={props.asset} />\r\n        {showSearchBar && <SearchBar alt />}\r\n      </div>\r\n      <div className=\"right\">\r\n        <div className=\"dark-mode\">\r\n          <i className=\"material-icons\" onClick={() => props.toggleDarkMode()}>\r\n            brightness_6\r\n          </i>\r\n        </div>\r\n        <div className=\"action\">\r\n          {authorization.isAuth && props.asset && (\r\n            <OakButton\r\n              theme=\"primary\"\r\n              variant=\"disappear\"\r\n              action={props.logout}\r\n            >\r\n              <i className=\"material-icons\">power_settings_new</i>Logout\r\n            </OakButton>\r\n          )}\r\n          {!authorization.isAuth && props.asset && (\r\n            <OakButton\r\n              theme=\"primary\"\r\n              variant=\"appear\"\r\n              align=\"left\"\r\n              small\r\n              action={() => signin('signin')}\r\n            >\r\n              <i className=\"material-icons\">person</i>Login\r\n            </OakButton>\r\n          )}\r\n          {!authorization.isAuth && props.asset && (\r\n            <OakButton\r\n              theme=\"primary\"\r\n              variant=\"appear\"\r\n              align=\"right\"\r\n              small\r\n              action={() => signin('signup')}\r\n            >\r\n              <i className=\"material-icons\">person_add</i>Signup\r\n            </OakButton>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Desktop;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './style.scss';\r\nimport mirrorWhite from '../../images/mirror_white.svg';\r\nimport mirrorWhiteSmall from '../../images/mirror_white_small.svg';\r\nimport mirrorBlack from '../../images/mirror_black.svg';\r\nimport Links from './Links';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport SearchBar from '../../oakui/SearchBar';\r\nimport { receiveMessage } from '../../events/MessageService';\r\nimport OakButton from '../../oakui/OakButton';\r\n// import SearchBar from '../Ux/SearchBar';\r\n\r\ninterface Props {\r\n  sendEvent: Function;\r\n  getAuth: Function;\r\n  addAuth: Function;\r\n  removeAuth: Function;\r\n  getProfile: Function;\r\n  toggleDarkMode: Function;\r\n  profile: Profile;\r\n  asset: string;\r\n  login: Function;\r\n  transparent: boolean;\r\n  logout: Function;\r\n  toggleSettings: any;\r\n}\r\n\r\nconst Mobile = (props: Props) => {\r\n  const authorization = useSelector(state => state.authorization);\r\n  const [data, setData] = useState({\r\n    showSearchBar: false,\r\n    menu: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    props.getProfile();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    receiveMessage().subscribe(message => {\r\n      if (message.name === 'show-navbar-element') {\r\n        setData({ ...data, showSearchBar: message.signal });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const toggleMenu = () => {\r\n    setData({ ...data, menu: !data.menu });\r\n  };\r\n\r\n  const signin = type => {\r\n    props.login(type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={\r\n          props.transparent ? 'navbar mobile transparent' : 'navbar mobile'\r\n        }\r\n      >\r\n        <div className=\"left\">\r\n          {!data.showSearchBar &&\r\n            !props.transparent &&\r\n            props.profile.theme === 'theme_light' && (\r\n              <img className=\"logo\" src={mirrorBlack} alt=\"Mirror logo\" />\r\n            )}\r\n          {!data.showSearchBar &&\r\n            (props.transparent || props.profile.theme === 'theme_dark') && (\r\n              <img className=\"logo\" src={mirrorWhite} alt=\"Mirror logo\" />\r\n            )}\r\n          {data.showSearchBar &&\r\n            !props.transparent &&\r\n            props.profile.theme === 'theme_light' && (\r\n              <img className=\"logo\" src={mirrorWhiteSmall} alt=\"Mirror logo\" />\r\n            )}\r\n          {data.showSearchBar &&\r\n            (props.transparent || props.profile.theme === 'theme_dark') && (\r\n              <img className=\"logo\" src={mirrorWhiteSmall} alt=\"Mirror logo\" />\r\n            )}\r\n          {data.showSearchBar && <SearchBar alt />}\r\n          {/* links */}\r\n        </div>\r\n        <div className=\"right\">\r\n          {/* <div className=\"settings-icon\" onClick={props.toggleSettings}><i className=\"material-icons\">settings</i></div> */}\r\n          <div\r\n            className={data.menu ? 'menu active' : 'menu'}\r\n            onClick={toggleMenu}\r\n          >\r\n            <div />\r\n          </div>\r\n          {/* action login */}\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={data.menu ? 'slider show' : 'slider hide'}\r\n        onClick={toggleMenu}\r\n      >\r\n        <div\r\n          className={data.menu ? 'container' : 'container hidetext'}\r\n          onClick={toggleMenu}\r\n        >\r\n          <div className=\"action\">\r\n            {/* <div className=\"settings-icon\" onClick={props.toggleSettings}>\r\n                        {props.authorization.isAuth && <OakButton invert variant=\"appear\" small action={props.toggleSettings}><i className=\"material-icons\">brush</i>Action 1</OakButton>}\r\n                    </div> */}\r\n            <div className=\"buttons\">\r\n              {authorization.isAuth && (\r\n                <OakButton variant=\"appear\" small action={props.logout}>\r\n                  <i className=\"material-icons\">power_settings_new</i>Logout\r\n                </OakButton>\r\n              )}\r\n              {!authorization.isAuth && (\r\n                <OakButton\r\n                  variant=\"appear\"\r\n                  small\r\n                  action={() => signin('signin')}\r\n                >\r\n                  <i className=\"material-icons\">person</i>Login\r\n                </OakButton>\r\n              )}\r\n              {!authorization.isAuth && (\r\n                <OakButton\r\n                  variant=\"appear\"\r\n                  small\r\n                  action={() => signin('signup')}\r\n                >\r\n                  <i className=\"material-icons\">person_add</i>Signup\r\n                </OakButton>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <Links authorization={authorization} asset={props.asset} />\r\n          <div className=\"dark-mode\">\r\n            <i\r\n              className=\"material-icons\"\r\n              onClick={() => props.toggleDarkMode()}\r\n            >\r\n              brightness_6\r\n            </i>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Mobile;\r\n","import { GET_AUTH, REMOVE_AUTH, ADD_AUTH } from './types';\r\n\r\nexport const getAuth = () => dispatch => {\r\n  dispatch({\r\n    type: GET_AUTH,\r\n  });\r\n};\r\n\r\nexport const addAuth = data => dispatch => {\r\n  dispatch({\r\n    type: ADD_AUTH,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const removeAuth = () => dispatch => {\r\n  dispatch({\r\n    type: REMOVE_AUTH,\r\n  });\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, connect, useDispatch } from 'react-redux';\r\n\r\nimport { withRouter } from 'react-router';\r\nimport { withCookies } from 'react-cookie';\r\nimport { getProfile, setProfile } from '../../actions/ProfileActions';\r\n\r\nimport './style.scss';\r\nimport Desktop from './Desktop';\r\nimport Mobile from './Mobile';\r\n\r\nimport { Profile } from '../Types/GeneralTypes';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\nimport { removeAuth } from '../../actions/AuthActions';\r\n\r\ninterface Props {\r\n  sendEvent: Function;\r\n  getAuth: Function;\r\n  addAuth: Function;\r\n  removeAuth: Function;\r\n  getProfile: Function;\r\n  setProfile: Function;\r\n  profile: Profile;\r\n  login: Function;\r\n  transparent: boolean;\r\n  toggleSettings: any;\r\n  history: any;\r\n  cookies: any;\r\n  location: any;\r\n  match: any;\r\n}\r\n\r\nconst Navigation = (props: Props) => {\r\n  const [data, setData] = useState({\r\n    visible: false,\r\n    mobilemenu: 'hide',\r\n    chooseTheme: false,\r\n    showSettings: false,\r\n    transparentNavBar: false,\r\n    firstLoad: true,\r\n  });\r\n\r\n  const authorization = useSelector(state => state.authorization);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [asset, setAsset] = useState('');\r\n\r\n  useEffect(() => {\r\n    receiveMessage().subscribe(event => {\r\n      if (event.name === 'spaceChange') {\r\n        setAsset(event.data);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    props.getProfile();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    receiveMessage().subscribe(message => {\r\n      if (message.name === 'navbar-transparency') {\r\n        setData({ ...data, transparentNavBar: message.signal });\r\n      }\r\n      if (message.name === 'loggedin') {\r\n        // props.reloadProfile(nextProps.authorization);\r\n        setData({ ...data, firstLoad: false });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (data.firstLoad && authorization && authorization.isAuth) {\r\n      setData({ ...data, firstLoad: false });\r\n    }\r\n  }, [authorization.isAuth]);\r\n\r\n  const logout = (\r\n    event: any,\r\n    type = 'success',\r\n    message = 'You have been logged out'\r\n  ) => {\r\n    dispatch(removeAuth());\r\n    props.cookies.remove(`mirror_${asset}`);\r\n    sendMessage('notification', true, {\r\n      type,\r\n      message,\r\n      duration: 3000,\r\n    });\r\n  };\r\n\r\n  const toggleDarkMode = () => {\r\n    if (props.profile.theme === 'theme_dark') {\r\n      props.setProfile({\r\n        ...props.profile,\r\n        theme: 'theme_light',\r\n      });\r\n    } else {\r\n      props.setProfile({\r\n        ...props.profile,\r\n        theme: 'theme_dark',\r\n      });\r\n    }\r\n  };\r\n\r\n  const login = type => {\r\n    props.history.push(`/${asset}/login/home`);\r\n    // window.location.href = `${process.env.REACT_APP_ONEAUTH_URL}/#/space/${asset}/login?type=${type}&appId=${process.env.REACT_APP_ONEAUTH_APP_ID}`;\r\n  };\r\n\r\n  const toggleSettings = () => {\r\n    setData({ ...data, showSettings: !data.showSettings });\r\n  };\r\n\r\n  return (\r\n    <div className=\"nav\">\r\n      <Desktop\r\n        {...props}\r\n        logout={logout}\r\n        login={login}\r\n        asset={asset}\r\n        toggleSettings={toggleSettings}\r\n        transparent={data.transparentNavBar}\r\n        toggleDarkMode={toggleDarkMode}\r\n      />\r\n      <Mobile\r\n        {...props}\r\n        logout={logout}\r\n        login={login}\r\n        asset={asset}\r\n        toggleSettings={toggleSettings}\r\n        transparent={data.transparentNavBar}\r\n        toggleDarkMode={toggleDarkMode}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfile, setProfile })(\r\n  withCookies(withRouter(Navigation))\r\n);\r\n","import React from 'react';\r\nimport './styles/oak-text-slide.scss';\r\n\r\ninterface Props {\r\n  label?: string;\r\n  id: string;\r\n  data: any;\r\n  errorData?: any;\r\n  type?: string;\r\n  handleChange: any;\r\n  errorFields?: any;\r\n  disabled?: boolean;\r\n  rows?: number;\r\n  multiline?: boolean;\r\n  handleFocus?: Function;\r\n  placeholder?: string;\r\n}\r\nconst OakText = (props: Props) => {\r\n  const handleFocus = () => {\r\n    if (props.handleFocus) {\r\n      props.handleFocus();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"oak-text\">\r\n      {!props.multiline && (\r\n        <input\r\n          disabled={props.disabled}\r\n          autoComplete=\"off\"\r\n          className={\r\n            (props.errorFields && props.errorFields[props.id] ? 'error' : '') +\r\n            (props.disabled ? ' disabled' : '')\r\n          }\r\n          type={props.type ? props.type : 'text'}\r\n          name={props.id}\r\n          id={props.id}\r\n          value={props.data[props.id]}\r\n          onChange={props.handleChange}\r\n          onFocus={handleFocus}\r\n        />\r\n      )}\r\n      {props.multiline && (\r\n        <textarea\r\n          disabled={props.disabled}\r\n          className={\r\n            (props.errorFields && props.errorFields[props.id] ? 'error' : '') +\r\n            (props.disabled ? ' disabled' : '')\r\n          }\r\n          id={props.id}\r\n          name={props.id}\r\n          value={props.data[props.id]}\r\n          onChange={props.handleChange}\r\n        />\r\n      )}\r\n      <label\r\n        htmlFor={props.id}\r\n        className={props.data[props.id] ? 'active' : ''}\r\n      >\r\n        {props.label}\r\n      </label>\r\n      {props.errorData && props.errorData[props.id] && (\r\n        <div className=\"text-field-error\">\r\n          <i className=\"material-icons\">warning</i>\r\n          {props.errorData[props.id]}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OakText;\r\n","import sjcl from 'ioak-sjcl';\r\nimport CryptoJS from 'crypto-js';\r\nimport { httpGet, httpPost, httpPut } from '../Lib/RestTemplate';\r\nimport constants from '../Constants';\r\n\r\nexport function preSignup(data) {\r\n  return httpGet(constants.API_URL + data.name + constants.API_KEYS, null).then(\r\n    function(response) {\r\n      return Promise.resolve(response);\r\n    }\r\n  );\r\n}\r\n\r\nexport function signup(data) {\r\n  return httpPost(\r\n    constants.API_URL + data.tenantName + constants.API_SIGNUP,\r\n    {\r\n      email: data.email,\r\n      problem: encrypt(data.password, data.solution, data.salt),\r\n      solution: data.solution,\r\n      roles: [],\r\n    },\r\n    null\r\n  ).then(function(response) {\r\n    return Promise.resolve(response.status);\r\n  });\r\n}\r\n\r\nexport function createTenant(data) {\r\n  const formData = new FormData();\r\n  formData.append('tenantName', data.tenantName);\r\n  formData.append('email', data.email);\r\n  formData.append('jwtPassword', data.jwtPassword);\r\n  formData.append('problem', encrypt(data.password, data.solution, data.salt));\r\n  formData.append('solution', data.solution);\r\n  if (data.banner) {\r\n    formData.append('banner', data.banner, 'banner.jpg');\r\n  }\r\n  return httpPost(constants.API_URL_TENANT_CREATE, formData, {\r\n    'Content-Type': 'multipart/form-data',\r\n  }).then(function(response) {\r\n    return Promise.resolve(response);\r\n  });\r\n}\r\n\r\nexport function preSignin(data) {\r\n  return httpGet(\r\n    `${constants.API_URL + data.name + constants.API_KEYS}/${data.email}`,\r\n    null\r\n  )\r\n    .then(response => Promise.resolve(response))\r\n    .catch(error => Promise.resolve(error.response));\r\n}\r\n\r\nexport function signin(data, problem) {\r\n  try {\r\n    const solution = decrypt(data.password, JSON.stringify(problem));\r\n    return httpPost(\r\n      constants.API_URL + data.name + constants.API_SIGNIN,\r\n      {\r\n        email: data.email,\r\n        solution,\r\n      },\r\n      null\r\n    ).then(function(response) {\r\n      return Promise.resolve(response);\r\n    });\r\n  } catch (error) {\r\n    if (error.message === \"ccm: tag doesn't match\") {\r\n      return Promise.resolve({\r\n        status: 401,\r\n      });\r\n    }\r\n    return Promise.resolve(error);\r\n  }\r\n}\r\n\r\nexport function signinWithJwt(data) {\r\n  return httpPost(\r\n    constants.API_URL + data.tenantName + constants.API_JWT,\r\n    {\r\n      jwtToken: data.jwt,\r\n    },\r\n    null\r\n  ).then(function(response) {\r\n    return Promise.resolve(response);\r\n  });\r\n}\r\n\r\nexport function sentPasswordChangeEmail(data, type) {\r\n  return httpPost(constants.API_URL_CODE, data, null).then(function(response) {\r\n    return Promise.resolve(response.status);\r\n  });\r\n}\r\n\r\nexport function resetPassword(data, type) {\r\n  return httpGet(constants.API_URL_PRESIGNUP, null).then(function(response) {\r\n    if (response.status === 200) {\r\n      let newData = {};\r\n      if (type && type === 'password') {\r\n        newData = {\r\n          problem: encrypt(\r\n            data.password,\r\n            response.data.solution,\r\n            response.data.salt\r\n          ),\r\n          solution: response.data.solution,\r\n          resetCode: data.resetCode,\r\n        };\r\n      }\r\n\r\n      return httpPost(constants.API_URL_RESET, newData, null).then(function(\r\n        response\r\n      ) {\r\n        return Promise.resolve(response.status);\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nfunction encrypt(password, message, salt) {\r\n  const config = {\r\n    cipher: 'aes',\r\n    iter: '12000',\r\n    ks: 256,\r\n    salt: CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(salt)),\r\n  };\r\n  return sjcl.encrypt(password, message, config);\r\n}\r\n\r\nfunction decrypt(password, ciphertext) {\r\n  return sjcl.decrypt(password, ciphertext);\r\n}\r\n\r\nexport function fetchSpace() {\r\n  return httpGet(\r\n    `/space/introspect`,\r\n    null,\r\n    process.env.REACT_APP_ONEAUTH_API_URL\r\n  ).then(function(response) {\r\n    return Promise.resolve(response.data);\r\n  });\r\n}\r\n","export function isEmptyOrSpaces(str) {\r\n  return str === null || str.match(/^ *$/) !== null;\r\n}\r\n\r\nexport function isEmptyAttributes(object: Record<string, any>) {\r\n  if (!object) {\r\n    return true;\r\n  }\r\n\r\n  return !Object.keys(object).find(key => {\r\n    if (object[key]) {\r\n      return true;\r\n    }\r\n    return false;\r\n  });\r\n}\r\n\r\nexport function match(text, words) {\r\n  let found = false;\r\n  if (words) {\r\n    words.split(' ').forEach(word => {\r\n      if (text.match(new RegExp(`(\\\\w*${word}\\\\w*)`, 'gi'))) {\r\n        found = true;\r\n      }\r\n    });\r\n  }\r\n  return found;\r\n}\r\n\r\nexport function sort(array, property, isReverseOrder) {\r\n  const result = array.sort(function(o1, o2) {\r\n    if (isReverseOrder) {\r\n      return o1[property] > o2[property]\r\n        ? -1\r\n        : o1[property] < o2[property]\r\n        ? 1\r\n        : 0;\r\n    }\r\n    return o1[property] < o2[property]\r\n      ? -1\r\n      : o1[property] > o2[property]\r\n      ? 1\r\n      : 0;\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nexport function htmlToText(str?: string | null) {\r\n  if (!str) return false;\r\n  str = str.toString();\r\n  return str.replace(/(<([^>]+)>)/gi, '');\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport './style.scss';\r\nimport OakText from '../../oakui/OakText';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport { sentTenantUrl } from './TenantService';\r\nimport { preSignup, createTenant } from '../Auth/AuthService';\r\nimport { Profile } from '../Types/GeneralTypes';\r\nimport { isEmptyOrSpaces } from '../Utils';\r\nimport OakButton from '../../oakui/OakButton';\r\n\r\ninterface Props {\r\n  getProfile: Function;\r\n  profile: Profile;\r\n  history: any;\r\n}\r\ninterface State {\r\n  name: string;\r\n  email: string;\r\n  pageNo: number;\r\n  password: string;\r\n  repeatPassword: string;\r\n  jwtPassword: string;\r\n  banner: any;\r\n  created: boolean;\r\n  errorFields: {\r\n    name: boolean;\r\n    email: boolean;\r\n    password: boolean;\r\n    repeatPassword: boolean;\r\n    jwtPassword: boolean;\r\n  };\r\n}\r\n\r\nconst Tenant = (props: Props) => {\r\n  const [data, setData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    repeatPassword: '',\r\n    jwtPassword: '',\r\n    pageNo: 1,\r\n    created: false,\r\n  });\r\n\r\n  const [banner, setBanner] = useState<null | { name: any }>(null);\r\n\r\n  const [errorFields, setErrorFields] = useState({\r\n    name: false,\r\n    email: false,\r\n    password: false,\r\n    repeatPassword: false,\r\n    jwtPassword: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    props.getProfile();\r\n  }, []);\r\n\r\n  const handleChange = event => {\r\n    setData({ ...data, [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n\r\n  const sentTenantUrlAction = () => {\r\n    sentTenantUrl({\r\n      name: data.name,\r\n    })\r\n      .then((response: any) => {\r\n        if (response === 200) {\r\n          sendMessage('notification', true, {\r\n            message: 'Password sent successfully',\r\n            type: 'success',\r\n            duration: 3000,\r\n          });\r\n        } else {\r\n          sendMessage('notification', true, {\r\n            type: 'failure',\r\n            message: 'Invalid Email error',\r\n            duration: 3000,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        sendMessage('notification', true, {\r\n          type: 'failure',\r\n          message: 'Bad request',\r\n          duration: 3000,\r\n        });\r\n      });\r\n  };\r\n\r\n  const clearError = () => {\r\n    setErrorFields({\r\n      name: false,\r\n      email: false,\r\n      password: false,\r\n      repeatPassword: false,\r\n      jwtPassword: false,\r\n    });\r\n  };\r\n\r\n  const setError = fieldName => {\r\n    setErrorFields({ ...errorFields, [fieldName]: true });\r\n  };\r\n\r\n  const validate = () => {\r\n    if (isEmptyOrSpaces(data.name)) {\r\n      setError('name');\r\n      sendMessage('notification', true, {\r\n        type: 'failure',\r\n        message: 'Tenant name cannot be empty',\r\n        duration: 3000,\r\n      });\r\n      return false;\r\n    }\r\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(data.email)) {\r\n      setError('email');\r\n      sendMessage('notification', true, {\r\n        type: 'failure',\r\n        message: 'Email ID is invalid',\r\n        duration: 3000,\r\n      });\r\n      return false;\r\n    }\r\n\r\n    if (isEmptyOrSpaces(data.password)) {\r\n      setError('password');\r\n      sendMessage('notification', true, {\r\n        type: 'failure',\r\n        message: 'Password cannot be empty',\r\n        duration: 3000,\r\n      });\r\n      return false;\r\n    }\r\n\r\n    if (data.password !== data.repeatPassword) {\r\n      setError('repeatPassword');\r\n      sendMessage('notification', true, {\r\n        type: 'failure',\r\n        message: 'Password and repeat password should be same',\r\n        duration: 3000,\r\n      });\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const submit = event => {\r\n    event.preventDefault();\r\n    sendMessage('spinner');\r\n    clearError();\r\n\r\n    if (!validate()) {\r\n      return;\r\n    }\r\n\r\n    preSignup({ name: data.name }).then(response => {\r\n      if (response.status === 200) {\r\n        createTenantAction(response.data);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleImageChange = e => {\r\n    setBanner(e.target.files[0]);\r\n  };\r\n\r\n  const createTenantAction = preSignupData => {\r\n    createTenant({\r\n      tenantName: data.name,\r\n      email: data.email,\r\n      password: data.password,\r\n      jwtPassword: data.jwtPassword,\r\n      solution: preSignupData.solution,\r\n      salt: preSignupData.salt,\r\n      banner,\r\n    })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          sendMessage('notification', true, {\r\n            type: 'success',\r\n            message: 'Tenant has been created. You can proceed now',\r\n            duration: 3000,\r\n          });\r\n          setData({ ...data, pageNo: data.pageNo + 1, created: true });\r\n        } else {\r\n          sendMessage('notification', true, {\r\n            message: 'We are facing some problem, please try after sometime',\r\n            duration: 3000,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        sendMessage('notification', true, {\r\n          type: 'failure',\r\n          message: 'Unknown error. Please try again or at a later time',\r\n          duration: 3000,\r\n        });\r\n      });\r\n  };\r\n\r\n  const gotoTenantPage = () => {\r\n    props.history.push(`/${data.name}/home`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tenant boxed\">\r\n      {!data.created && (\r\n        <div className=\"typography-3 space-bottom-4\">Tenant creation</div>\r\n      )}\r\n      {data.created && (\r\n        <div className=\"typography-3 space-bottom-4\">\r\n          Tenant [{data.name}] available now\r\n        </div>\r\n      )}\r\n      {data.pageNo === 1 && (\r\n        <div className=\"form\">\r\n          <OakText\r\n            id=\"name\"\r\n            data={data}\r\n            label=\"Tenant Name\"\r\n            handleChange={e => handleChange(e)}\r\n            errorFields={errorFields}\r\n          />\r\n          <OakText\r\n            id=\"email\"\r\n            data={data}\r\n            label=\"Administrator Email\"\r\n            handleChange={e => handleChange(e)}\r\n            errorFields={errorFields}\r\n          />\r\n          <OakText\r\n            id=\"password\"\r\n            type=\"password\"\r\n            data={data}\r\n            label=\"Administrator Password\"\r\n            handleChange={e => handleChange(e)}\r\n            errorFields={errorFields}\r\n          />\r\n          <OakText\r\n            id=\"repeatPassword\"\r\n            type=\"password\"\r\n            data={data}\r\n            label=\"Repeat Password\"\r\n            handleChange={e => handleChange(e)}\r\n            errorFields={errorFields}\r\n          />\r\n          <OakText\r\n            id=\"jwtPassword\"\r\n            type=\"password\"\r\n            data={data}\r\n            label=\"JWT Password\"\r\n            handleChange={e => handleChange(e)}\r\n            errorFields={errorFields}\r\n          />\r\n          <label className=\"file-upload space-top-1 space-bottom-4\">\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/png, image/jpeg\"\r\n              onChange={handleImageChange}\r\n              required\r\n            />\r\n            <i className=\"material-icons\">add_photo_alternate</i>\r\n            {!banner && 'Choose Banner/Cover Image'}\r\n            {banner && banner.name}\r\n          </label>\r\n          <div className=\"action\">\r\n            <OakButton theme=\"primary\" variant=\"appear\" action={submit}>\r\n              Create Tenant\r\n            </OakButton>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {data.created && (\r\n        <OakButton theme=\"primary\" variant=\"disappear\" action={gotoTenantPage}>\r\n          Take me to my tenant\r\n        </OakButton>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tenant;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './styles/oak-page.scss';\r\n\r\ninterface Props {\r\n  children?: any;\r\n}\r\n\r\nconst OakPage = (props: Props) => {\r\n  return <div className=\"oak-page\">{props.children}</div>;\r\n};\r\n\r\nexport default OakPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './styles/oak-section.scss';\r\n\r\ninterface Props {\r\n  children?: any;\r\n}\r\n\r\nconst OakSection = (props: Props) => {\r\n  return (\r\n    <div className=\"oak-section\">\r\n      <div className=\"app-text\">{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OakSection;\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport OakButton from '../../../oakui/OakButton';\r\nimport OakHeading from '../../../oakui/OakHeading';\r\nimport OakPage from '../../../oakui/OakPage';\r\nimport OakSection from '../../../oakui/OakSection';\r\n\r\ninterface Props {\r\n  setProfile: Function;\r\n  profile: any;\r\n  match: any;\r\n  location: any;\r\n  history: any;\r\n  asset: string;\r\n}\r\n\r\nconst ArticleHome = (props: Props) => {\r\n  const browseArticle = event => {\r\n    props.history.push(`/${props.asset}/article/browse`);\r\n  };\r\n\r\n  const searchArticle = event => {\r\n    props.history.push(`/${props.asset}/article/search`);\r\n  };\r\n\r\n  const viewByTags = event => {\r\n    props.history.push(`/${props.asset}/article/tag`);\r\n  };\r\n\r\n  return (\r\n    <OakPage>\r\n      <OakSection>\r\n        <OakHeading\r\n          title=\"Article knowledge base\"\r\n          subtitle=\"Home of knowledge\"\r\n        />\r\n        <div className=\"typography-4 space-bottom-4\">\r\n          Welcome to the world of knowledge. Here you will find articles that\r\n          will answer the question on your mind about this application. You can\r\n          access the articles by different means. Start to explore by picking\r\n          one of the below choices to navigate and reach your desired article.\r\n        </div>\r\n        <div className=\"action-header\">\r\n          <OakButton theme=\"primary\" variant=\"appear\" action={searchArticle}>\r\n            Search article\r\n          </OakButton>\r\n          <OakButton theme=\"primary\" variant=\"appear\" action={browseArticle}>\r\n            Browse by category\r\n          </OakButton>\r\n          <OakButton theme=\"primary\" variant=\"appear\" action={viewByTags}>\r\n            View by tags\r\n          </OakButton>\r\n        </div>\r\n      </OakSection>\r\n    </OakPage>\r\n  );\r\n};\r\n\r\nexport default ArticleHome;\r\n","import React from 'react';\r\nimport { useApolloClient } from '@apollo/react-hooks';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addAuth } from '../../actions/AuthActions';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport { GET_SESSION } from '../Types/schema';\r\n\r\ninterface Props {\r\n  authorization: Authorization;\r\n  path?: string;\r\n  render?: any;\r\n  component: any;\r\n  match: any;\r\n  history: any;\r\n  middleware?: string[];\r\n  cookies: any;\r\n}\r\n\r\nconst OakRouteGraph = (props: Props) => {\r\n  const gqlClient = useApolloClient();\r\n  const authorization = useSelector(state => state.authorization);\r\n  const profile = useSelector(state => state.profile);\r\n  const dispatch = useDispatch();\r\n\r\n  const middlewares = () => {\r\n    props.middleware?.forEach(middlewareName => {\r\n      if (!runMidleware(middlewareName)) {\r\n        return false;\r\n      }\r\n    });\r\n    return true;\r\n  };\r\n\r\n  const runMidleware = middlewareName => {\r\n    sendMessage('spaceChange', true, '');\r\n    switch (middlewareName) {\r\n      case 'readAuthentication':\r\n        return readAuthenticationSpace();\r\n      case 'authenticate':\r\n        return authenticateSpace();\r\n      case 'isAdmin':\r\n        return isAdmin();\r\n      default:\r\n        return true;\r\n    }\r\n  };\r\n\r\n  const authenticateSpace = () => {\r\n    return authenticate('asset');\r\n  };\r\n  const readAuthenticationSpace = () => {\r\n    return authenticate('asset', false);\r\n  };\r\n\r\n  const authenticate = async (type, redirect = true) => {\r\n    sendMessage('spaceChange', true, props.match.params.asset);\r\n    if (authorization.isAuth) {\r\n      return true;\r\n    }\r\n    const cookieKey = `mirror_${props.match.params.asset}`;\r\n    const authKey = props.cookies.get(cookieKey);\r\n    const baseAuthUrl = `/auth/${props.match.params.asset}`;\r\n    if (authKey) {\r\n      const { data } = await gqlClient.query({\r\n        query: GET_SESSION,\r\n        variables: { key: authKey, asset: props.match.params.asset },\r\n      });\r\n\r\n      if (data?.session) {\r\n        dispatch(\r\n          addAuth({\r\n            isAuth: true,\r\n            token: data.session.token,\r\n            secret: '',\r\n            firstName: data.session.firstName,\r\n            lastName: data.session.lastName,\r\n            email: data.session.email,\r\n            id: data.session.id,\r\n          })\r\n        );\r\n      } else {\r\n        props.cookies.remove(cookieKey);\r\n        if (redirect) {\r\n          sendMessage('notification', true, {\r\n            type: 'failure',\r\n            message: 'Invalid session token',\r\n            duration: 3000,\r\n          });\r\n          redirectToLogin(props.match.params.asset);\r\n        }\r\n      }\r\n    } else if (redirect) {\r\n      redirectToLogin(props.match.params.asset);\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const isAdmin = () => {\r\n    redirectToUnauthorized();\r\n    return false;\r\n  };\r\n\r\n  const redirectToLogin = asset => {\r\n    // window.location.href = `${process.env.REACT_APP_ONEAUTH_URL}/#/space/${spaceId}/login?type=signin&appId=${process.env.REACT_APP_ONEAUTH_APP_ID}`;\r\n    props.history.push(\r\n      `/${asset}/login/home?from=${props.history.location.pathname}${props.history.location.search}`\r\n    );\r\n  };\r\n\r\n  const redirectToUnauthorized = () => {\r\n    props.history.push(`/${profile.asset}/unauthorized`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {middlewares() && (\r\n        <props.component\r\n          {...props}\r\n          profile={profile}\r\n          asset={props.match.params.asset}\r\n          // getProfile={getProfile}\r\n          // setProfile={props.setProfile}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OakRouteGraph;\r\n","import React from 'react';\r\n\r\nconst Unauthorized = () => {\r\n  return (\r\n    <div>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      Unauthorized\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Unauthorized;\r\n","import React, { useState } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport './styles/oak-editor.scss';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport 'react-quill/dist/quill.bubble.css';\r\n\r\ninterface Props {\r\n  id: string;\r\n  data: any;\r\n  errorData?: any;\r\n  handleChange: any;\r\n  bubble?: boolean;\r\n  label?: string;\r\n}\r\nconst OakEditor = (props: Props) => {\r\n  const [blockApiChangeEvents, setBlockApiChangeEvents] = useState(true);\r\n  const modules = {\r\n    toolbar: [\r\n      [\r\n        'bold',\r\n        'italic',\r\n        'underline',\r\n        'strike',\r\n        { align: 'left' },\r\n        { align: 'center' },\r\n        { align: 'right' },\r\n        { align: 'justify' },\r\n        // { header: 1 },\r\n        // { header: 2 },\r\n        { list: 'ordered' },\r\n        { list: 'bullet' },\r\n        { indent: '-1' },\r\n        { indent: '+1' },\r\n        { color: [] },\r\n        { background: [] },\r\n        // 'blockquote',\r\n        'code-block',\r\n        { header: [1, 2, 3, 4, 5, 6, false] },\r\n        { font: [] },\r\n        // 'clean',\r\n        'image',\r\n      ],\r\n    ],\r\n  };\r\n  // toolbarBkp: [\r\n  //   ['bold', 'italic', 'underline', 'strike'], // toggled buttons\r\n  //   ['blockquote', 'code-block'],\r\n\r\n  //   [{ header: 1 }, { header: 2 }], // custom button values\r\n  //   [{ list: 'ordered' }, { list: 'bullet' }],\r\n  //   [{ indent: '-1' }, { indent: '+1' }], // outdent/indent\r\n  //   [{ direction: 'rtl' }], // text direction\r\n\r\n  //   [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n\r\n  //   [{ color: [] }, { background: [] }], // dropdown with defaults from theme\r\n  //   [{ font: [] }],\r\n  //   [{ align: [] }],\r\n\r\n  //   ['clean'], // remove formatting button\r\n  // ],\r\n\r\n  const formats = [\r\n    'header',\r\n    'bold',\r\n    'italic',\r\n    'underline',\r\n    'strike',\r\n    'blockquote',\r\n    'list',\r\n    'bullet',\r\n    'indent',\r\n    'color',\r\n    'font',\r\n    'code-block',\r\n    'link',\r\n    'image',\r\n    'background',\r\n    'align',\r\n  ];\r\n  const handleChange = (value, delta, source) => {\r\n    if (source === 'api' && blockApiChangeEvents) {\r\n      setBlockApiChangeEvents(false);\r\n    } else {\r\n      props.handleChange({\r\n        target: {\r\n          name: props.id,\r\n          value,\r\n        },\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div className={props.bubble ? 'oak-editor bubble' : 'oak-editor'}>\r\n      <label>{props.label}</label>\r\n      <ReactQuill\r\n        value={props.data[props.id]}\r\n        onChange={handleChange}\r\n        theme={props.bubble ? 'bubble' : 'snow'}\r\n        modules={modules}\r\n        formats={formats}\r\n      />\r\n      {props.errorData && props.errorData[props.id] && (\r\n        <div className=\"text-field-error\">\r\n          <i className=\"material-icons\">warning</i>\r\n          {props.errorData[props.id]}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OakEditor;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const LIST_ARTICLES = gql`\r\n  query Articles($categoryId: ID!, $pageNo: Int, $pageSize: Int) {\r\n    articles(categoryId: $categoryId, pageNo: $pageNo, pageSize: $pageSize) {\r\n      results {\r\n        id\r\n        title\r\n        description\r\n        views\r\n        helpful\r\n        notHelpful\r\n        createdAt\r\n        updatedAt\r\n        tags {\r\n          id\r\n          name\r\n        }\r\n      }\r\n      pageNo\r\n      hasMore\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SEARCH_ARTICLES = gql`\r\n  query SearchArticles($text: String, $pageNo: Int, $pageSize: Int) {\r\n    searchArticles(text: $text, pageNo: $pageNo, pageSize: $pageSize) {\r\n      results {\r\n        id\r\n        title\r\n        description\r\n        views\r\n        helpful\r\n        notHelpful\r\n        createdAt\r\n        updatedAt\r\n        tags {\r\n          id\r\n          name\r\n        }\r\n      }\r\n      pageNo\r\n      hasMore\r\n      total\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ARTICLE = gql`\r\n  query Article($id: ID!) {\r\n    article(id: $id) {\r\n      id\r\n      title\r\n      description\r\n      views\r\n      helpful\r\n      notHelpful\r\n      createdAt\r\n      updatedAt\r\n      tags {\r\n        id\r\n        name\r\n      }\r\n      category {\r\n        id\r\n      }\r\n      feedback {\r\n        type\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ARTICLES_BY_TAG = gql`\r\n  query ArticlesByTag($tag: String!, $pageNo: Int, $pageSize: Int) {\r\n    articlesByTag(tag: $tag, pageNo: $pageNo, pageSize: $pageSize) {\r\n      results {\r\n        id\r\n        name\r\n        article {\r\n          id\r\n          title\r\n          description\r\n          views\r\n          helpful\r\n          notHelpful\r\n          createdAt\r\n          updatedAt\r\n          tags {\r\n            id\r\n            name\r\n          }\r\n        }\r\n      }\r\n      pageNo\r\n      hasMore\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_ARTICLE = gql`\r\n  mutation UpdateArticle($payload: ArticlePayload!) {\r\n    addArticle(payload: $payload) {\r\n      id\r\n      title\r\n      description\r\n      views\r\n      helpful\r\n      notHelpful\r\n      createdAt\r\n      updatedAt\r\n      tags {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_ARTICLE = gql`\r\n  mutation DeleteArticle($id: ID!) {\r\n    deleteArticle(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LIST_ARTICLE_CATEGORIES = gql`\r\n  query ArticleCategories {\r\n    articleCategories {\r\n      id\r\n      name\r\n      parentCategoryId\r\n      articles\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_ARTICLE_CATEGORY = gql`\r\n  mutation UpdateArticleCategory($payload: ArticleCategoryPayload!) {\r\n    addArticleCategory(payload: $payload) {\r\n      id\r\n      name\r\n      parentCategoryId\r\n      articles\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_ARTICLE_FEEDBACK = gql`\r\n  mutation AddArticleFeedback($articleId: String!, $type: String!) {\r\n    addArticleFeedback(articleId: $articleId, type: $type) {\r\n      id\r\n      article {\r\n        id\r\n        title\r\n        description\r\n        views\r\n        helpful\r\n        notHelpful\r\n        createdAt\r\n        updatedAt\r\n        tags {\r\n          id\r\n          name\r\n        }\r\n        category {\r\n          id\r\n        }\r\n        feedback {\r\n          type\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REMOVE_ARTICLE_FEEDBACK = gql`\r\n  mutation RemoveArticleFeedback($articleId: String!, $type: String!) {\r\n    removeArticleFeedback(articleId: $articleId, type: $type) {\r\n      id\r\n      article {\r\n        id\r\n        title\r\n        description\r\n        views\r\n        helpful\r\n        notHelpful\r\n        createdAt\r\n        updatedAt\r\n        tags {\r\n          id\r\n          name\r\n        }\r\n        category {\r\n          id\r\n        }\r\n        feedback {\r\n          type\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ARTICLE_TAG_CLOUD = gql`\r\n  query ArticleTagCloud {\r\n    articleTagCloud {\r\n      name\r\n      count\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport { ArticleCategory } from '../../../../types/graphql';\r\n\r\ninterface Props {\r\n  category: ArticleCategory;\r\n  handleChange?: any;\r\n  parentNode?: boolean;\r\n}\r\n\r\nconst CategoryView = (props: Props) => {\r\n  return (\r\n    <>\r\n      {!props.parentNode && props.category && (\r\n        <div className=\"category-tree-link-child\" onClick={props.handleChange}>\r\n          <div className=\"typography-5\">{props.category.name}</div>\r\n        </div>\r\n      )}\r\n      {props.parentNode && props.category && (\r\n        <div className=\"category-tree-link-parent\">\r\n          <div className=\"typography-5 align-horizontal\">\r\n            {props.category.name}\r\n            <div className=\"typography-4 space-left-2 current-node-label\">\r\n              chosen\r\n            </div>\r\n          </div>\r\n          <i className=\"material-icons\" onClick={props.handleChange}>\r\n            call_made\r\n          </i>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoryView;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { gql } from 'apollo-boost';\r\nimport './style.scss';\r\nimport { LIST_ARTICLE_CATEGORIES } from '../../../Types/ArticleSchema';\r\nimport { ArticleCategory } from '../../../../types/graphql';\r\nimport CategoryView from './CategoryView';\r\n\r\ninterface Props {\r\n  category: ArticleCategory;\r\n  handleChange: Function;\r\n}\r\n\r\nconst CategoryList = (props: Props) => {\r\n  const { loading, error, data } = useQuery(LIST_ARTICLE_CATEGORIES);\r\n\r\n  const [view, setView] = useState<Array<ArticleCategory> | undefined>();\r\n\r\n  useEffect(() => {\r\n    if (data?.articleCategories && props.category?.id) {\r\n      setView(\r\n        data.articleCategories.filter(\r\n          (item: ArticleCategory) =>\r\n            item.parentCategoryId === props.category?.id\r\n        )\r\n      );\r\n    } else if (data?.articleCategories) {\r\n      setView(\r\n        data.articleCategories.filter(\r\n          (item: ArticleCategory) => !item.parentCategoryId\r\n        )\r\n      );\r\n    }\r\n  }, [props.category, data]);\r\n\r\n  return (\r\n    <div className=\"category-tree-list\">\r\n      {/* <div className=\"close-category-tree hyperlink-container align-horizontal\">\r\n        <i className=\"material-icons\">close</i>\r\n        <div className=\"hyperlink\">Close</div>\r\n      </div> */}\r\n      <div className=\"category-list\">\r\n        <CategoryView\r\n          category={props.category}\r\n          key={props.category?.id}\r\n          parentNode\r\n          handleChange={() =>\r\n            props.handleChange(props.category?.parentCategoryId)\r\n          }\r\n        />\r\n        {view?.map((item: ArticleCategory) => (\r\n          <CategoryView\r\n            category={item}\r\n            key={item.id}\r\n            handleChange={() => props.handleChange(item.id)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './style.scss';\r\nimport { ArticleCategory } from '../../../../types/graphql';\r\nimport CategoryList from './CategoryList';\r\n\r\ninterface Props {\r\n  category: ArticleCategory;\r\n  categories: Array<ArticleCategory>;\r\n  handleChange: any;\r\n  choosable?: boolean;\r\n}\r\nconst CategoryTree = (props: Props) => {\r\n  const [tree, setTree] = useState<Array<ArticleCategory | any>>();\r\n\r\n  const [showChoose, setShowChoose] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (props.category && props.categories) {\r\n      setTree([{ name: 'all' }, ...traceParents(props.category)]);\r\n    } else {\r\n      setTree([{ name: '...' }]);\r\n    }\r\n  }, [props.category, props.categories]);\r\n\r\n  const traceParents = (category: ArticleCategory) => {\r\n    const parentCategory = props.categories.find(\r\n      item => item.id === category.parentCategoryId\r\n    );\r\n\r\n    if (parentCategory) {\r\n      return [...traceParents(parentCategory), category];\r\n    }\r\n    return [category];\r\n  };\r\n\r\n  return (\r\n    <div className=\"category-tree\">\r\n      <div className=\"node-structure\">\r\n        <i className=\"material-icons\">label_important</i>\r\n        {tree &&\r\n          tree.map((item, index) => (\r\n            <div key={item.id || index} className=\"tree-node\">\r\n              {(index === tree.length - 1 ||\r\n                (props.choosable && !showChoose)) && (\r\n                <div className=\"category-name typography-5\" key={item.id}>\r\n                  {item.name}\r\n                </div>\r\n              )}\r\n\r\n              {index !== tree.length - 1 && (!props.choosable || showChoose) && (\r\n                <div\r\n                  className=\"category-name typography-5 hyperlink\"\r\n                  key={item.id}\r\n                  onClick={() => props.handleChange(item.id)}\r\n                >\r\n                  {item.name}\r\n                </div>\r\n              )}\r\n              {index !== tree.length - 1 && (\r\n                <div className=\"category-relation\">\r\n                  <i className=\"material-icons\">keyboard_arrow_right</i>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        {props.choosable && !showChoose && (\r\n          <div className=\"hyperlink-container align-horizontal action-link space-left-1\">\r\n            <i className=\"material-icons\">edit</i>\r\n            <div className=\"hyperlink\" onClick={() => setShowChoose(true)}>\r\n              Change\r\n            </div>\r\n          </div>\r\n        )}\r\n        {props.choosable && showChoose && (\r\n          <div className=\"hyperlink-container align-horizontal action-link space-left-1\">\r\n            <i className=\"material-icons\">close</i>\r\n            <div className=\"hyperlink\" onClick={() => setShowChoose(false)}>\r\n              Close\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"choose-node-container\">\r\n        {showChoose && (\r\n          <CategoryList\r\n            category={props.category}\r\n            handleChange={props.handleChange}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryTree;\r\n","import React, { ReactNode, useState, useEffect } from 'react';\r\nimport './styles/oak-chip-group.scss';\r\nimport OakText from './OakText';\r\nimport { newId } from '../events/MessageService';\r\nimport { isEmptyOrSpaces } from '../components/Utils';\r\n\r\ninterface Props {\r\n  label?: string;\r\n  placeholder?: string;\r\n  objects?: any;\r\n  elements?: any;\r\n  data: any;\r\n  id: string;\r\n  handleAddition: Function;\r\n  handleRemoval: Function;\r\n}\r\n\r\nconst OakChipGroup = (props: Props) => {\r\n  const [id, setId] = useState(newId());\r\n  const [searchOn, setSearchOn] = useState(false);\r\n  const [criteria, setCriteria] = useState({\r\n    [id]: '',\r\n  });\r\n  const [dropdownFiltered, setDropdownFiltered] = useState<any>(undefined);\r\n\r\n  useEffect(() => {\r\n    updateSearchResults(criteria[id]);\r\n  }, [props.objects]);\r\n\r\n  const selected = key => {\r\n    setSearchOn(false);\r\n    props.handleAddition(key);\r\n    setCriteria({ [id]: '' });\r\n  };\r\n\r\n  const handleFocus = () => {\r\n    setSearchOn(true);\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setSearchOn(true);\r\n    setCriteria({ [event.target.name]: event.target.value });\r\n    updateSearchResults(event.target.value);\r\n  };\r\n  const updateSearchResults = searchCriteria => {\r\n    if (props.elements) {\r\n      setDropdownFiltered(\r\n        props.elements.filter(item =>\r\n          item.toLowerCase().includes(searchCriteria.toLowerCase())\r\n        )\r\n      );\r\n    } else {\r\n      setDropdownFiltered(\r\n        props.objects.filter(item =>\r\n          item.value?.toLowerCase().includes(searchCriteria.toLowerCase())\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('click', (e: any) => {\r\n      if (!document.getElementById(id)?.contains(e.target)) {\r\n        setSearchOn(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleSubmit = (event, key) => {\r\n    event.preventDefault();\r\n    if (!isEmptyOrSpaces(key)) {\r\n      selected(key);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"oak-chip-group\" id={id}>\r\n      <div\r\n        className={`search-bar ${\r\n          props.data[props.id]?.length > 0 ? 'hide-label' : ''\r\n        }`}\r\n      >\r\n        <div className=\"chip-group\">\r\n          {props.data[props.id].map(item => (\r\n            <div className=\"chip\" key={item}>\r\n              {item}\r\n              <i\r\n                className=\"material-icons\"\r\n                onClick={() => props.handleRemoval(item)}\r\n              >\r\n                close\r\n              </i>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <form\r\n          method=\"GET\"\r\n          onSubmit={event => handleSubmit(event, criteria[id])}\r\n          noValidate\r\n        >\r\n          <OakText\r\n            id={id}\r\n            data={criteria}\r\n            label={props.label}\r\n            handleFocus={handleFocus}\r\n            handleChange={handleChange}\r\n            placeholder={props.placeholder}\r\n          />\r\n        </form>\r\n      </div>\r\n      {searchOn && dropdownFiltered && dropdownFiltered.length > 0 && (\r\n        <div className=\"results\">\r\n          {props.elements &&\r\n            dropdownFiltered?.map(item => (\r\n              <div\r\n                className=\"element\"\r\n                key={item}\r\n                onClick={() => selected(item)}\r\n              >\r\n                {props.elements ? item : item.value}\r\n              </div>\r\n            ))}\r\n          {props.objects &&\r\n            dropdownFiltered?.map(item => (\r\n              <div\r\n                className=\"element\"\r\n                key={item.key}\r\n                onClick={() => selected(item.key)}\r\n              >\r\n                {props.elements ? item : item.value}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OakChipGroup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { gql } from 'apollo-boost';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport OakText from '../../../oakui/OakText';\r\nimport OakEditor from '../../../oakui/OakEditor';\r\nimport OakButton from '../../../oakui/OakButton';\r\nimport { isEmptyOrSpaces, isEmptyAttributes } from '../../Utils';\r\nimport { sendMessage } from '../../../events/MessageService';\r\nimport CategoryTree from '../Category/CategoryTree';\r\nimport OakChipGroup from '../../../oakui/OakChipGroup';\r\nimport { ArticlePayload, ArticleCategory } from '../../../types/graphql';\r\nimport {\r\n  LIST_ARTICLES,\r\n  LIST_ARTICLE_CATEGORIES,\r\n} from '../../Types/ArticleSchema';\r\nimport OakHeading from '../../../oakui/OakHeading';\r\n\r\ninterface Props {\r\n  categoryid: any;\r\n  history: any;\r\n  asset: any;\r\n}\r\n\r\nconst ADD_ARTICLE = gql`\r\n  mutation AddArticle($payload: ArticlePayload!) {\r\n    addArticle(payload: $payload) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst CreateItem = (props: Props) => {\r\n  const { loading, error, data } = useQuery(LIST_ARTICLE_CATEGORIES);\r\n  const [addArticle, { data: savedArticle }] = useMutation(ADD_ARTICLE);\r\n  const [state, setState] = useState<any>({\r\n    title: '',\r\n    description: '',\r\n    tags: [],\r\n    categoryId: '',\r\n    addTags: [],\r\n    removeTags: [],\r\n  });\r\n  const [formErrors, setFormErrors] = useState<any>({\r\n    title: null,\r\n    description: null,\r\n  });\r\n  const [view, setView] = useState<any>({\r\n    tags: [],\r\n  });\r\n\r\n  const globalTags = [\r\n    'int',\r\n    'lorem',\r\n    'ipsum',\r\n    'dolor',\r\n    'wrsedfdsf',\r\n    'fgfdgyy',\r\n    'ujku',\r\n    'fre546',\r\n    'yudsf',\r\n    'uiasedas',\r\n    'y78sd',\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setState({\r\n      title: '',\r\n      description: '',\r\n      tags: [],\r\n      addTags: [],\r\n      removeTags: [],\r\n      categoryId: props.categoryid,\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setState({ ...state, categoryId: props.categoryid });\r\n  }, [props.categoryid]);\r\n\r\n  useEffect(\r\n    () =>\r\n      setView({\r\n        ...view,\r\n        tags: [...state.tags, ...state.addTags].filter(\r\n          item => !state.removeTags.includes(item)\r\n        ),\r\n      }),\r\n    [state.addTags, state.tags, state.removeTags]\r\n  );\r\n\r\n  const handleChange = event => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const handleCategoryChange = id => {\r\n    // setUrlParam({ categoryid: id });\r\n    setState({ ...state, categoryId: id });\r\n  };\r\n\r\n  const handleTagAddition = key => {\r\n    if (!state.tags.includes(key)) {\r\n      setState({\r\n        ...state,\r\n        addTags: [...state.addTags, key],\r\n        removeTags: state.removeTags.filter(item => item !== key),\r\n      });\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        removeTags: state.removeTags.filter(item => item !== key),\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleTagRemoval = key => {\r\n    if (state.tags.includes(key)) {\r\n      setState({\r\n        ...state,\r\n        removeTags: [...state.removeTags, key],\r\n        addTags: state.addTags.filter(item => item !== key),\r\n      });\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        addTags: state.addTags.filter(item => item !== key),\r\n      });\r\n    }\r\n  };\r\n\r\n  const submit = () => {\r\n    const errorFields: any = { title: null, description: '' };\r\n    if (isEmptyOrSpaces(state.title)) {\r\n      errorFields.title = 'Title cannot be empty';\r\n    }\r\n    if (isEmptyOrSpaces(state.description)) {\r\n      errorFields.description = 'Description cannot be empty';\r\n    }\r\n    setFormErrors(errorFields);\r\n    if (isEmptyAttributes(errorFields)) {\r\n      const payload: ArticlePayload = {\r\n        title: state.title,\r\n        categoryId: state.categoryId,\r\n        description: state.description,\r\n        addTags: state.addTags,\r\n        removeTags: state.removeTags,\r\n      };\r\n      addArticle({\r\n        variables: {\r\n          payload,\r\n        },\r\n        // update: (cache, { data: { addArticle } }) => {\r\n        //   const data: any = cache.readQuery({ query: LIST_ARTICLE_CATEGORIES });\r\n        //   console.log('********');\r\n        //   console.log(data);\r\n        //   // data.items = [...data.items, addArticle];\r\n        //   // cache.writeQuery({ query: GET_ITEMS }, data);\r\n        // },\r\n      }).then(response => {\r\n        props.history.length > 2\r\n          ? props.history.goBack()\r\n          : props.history.push(`/${props.asset}/article`);\r\n      });\r\n    }\r\n  };\r\n\r\n  const cancelCreation = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-header\">\r\n        <OakHeading title=\"Create article\" />\r\n        <div className=\"action-header position-right\">\r\n          <OakButton action={submit} theme=\"primary\" variant=\"appear\">\r\n            <i className=\"material-icons\">double_arrow</i>Save\r\n          </OakButton>\r\n          {props.history.length > 2 && (\r\n            <OakButton\r\n              action={() => cancelCreation()}\r\n              theme=\"default\"\r\n              variant=\"appear\"\r\n            >\r\n              <i className=\"material-icons\">close</i>Cancel\r\n            </OakButton>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"create-article-item\">\r\n        <CategoryTree\r\n          category={data?.articleCategories?.find(\r\n            (item: ArticleCategory) => item.id === state.categoryId\r\n          )}\r\n          categories={data?.articleCategories}\r\n          handleChange={handleCategoryChange}\r\n          choosable\r\n        />\r\n        {state.categoryId && (\r\n          <div className=\"user-form\">\r\n            {/* <CategoryTree id={props.categoryid} /> */}\r\n            <OakText\r\n              label=\"Title\"\r\n              data={state}\r\n              errorData={formErrors}\r\n              id=\"title\"\r\n              handleChange={e => handleChange(e)}\r\n            />\r\n            <OakEditor\r\n              label=\"Description\"\r\n              data={state}\r\n              errorData={formErrors}\r\n              id=\"description\"\r\n              handleChange={e => handleChange(e)}\r\n            />\r\n            <OakChipGroup\r\n              handleAddition={handleTagAddition}\r\n              handleRemoval={handleTagRemoval}\r\n              elements={globalTags}\r\n              data={view}\r\n              id=\"tags\"\r\n              label=\"Tags\"\r\n            />\r\n          </div>\r\n        )}\r\n        {!state.categoryId && (\r\n          <div className=\"typography-4\">Choose a category to continue</div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default CreateItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './style.scss';\r\nimport CreateItem from './CreateItem';\r\nimport OakPage from '../../../oakui/OakPage';\r\nimport OakSection from '../../../oakui/OakSection';\r\n\r\ninterface Props {\r\n  location: any;\r\n  history: any;\r\n  asset: string;\r\n}\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst CreateArticle = (props: Props) => {\r\n  const [urlParam, setUrlParam] = useState({\r\n    categoryid: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    setUrlParam(queryString.parse(props.location.search));\r\n  }, []);\r\n\r\n  return (\r\n    <OakPage>\r\n      <OakSection>\r\n        <CreateItem\r\n          history={props.history}\r\n          categoryid={urlParam.categoryid}\r\n          asset={props.asset}\r\n        />\r\n      </OakSection>\r\n    </OakPage>\r\n  );\r\n};\r\n\r\nexport default CreateArticle;\r\n","import React, { useEffect, ReactNode, useState } from 'react';\r\nimport './styles/oak-modal.scss';\r\nimport OakIcon from './OakIcon';\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  toggleVisibility: any;\r\n  label?: string;\r\n  children?: ReactNode;\r\n  fullscreen?: boolean;\r\n  noheader?: boolean;\r\n  donotMobilize?: boolean;\r\n}\r\n\r\nconst OakModal = (props: Props) => {\r\n  const [visible, setVisible] = useState(false);\r\n  useEffect(() => {\r\n    if (visible !== props.visible) {\r\n      if (props.visible) {\r\n        setVisible(props.visible);\r\n      } else {\r\n        setTimeout(() => setVisible(props.visible), 250);\r\n      }\r\n    }\r\n  }, [props.visible]);\r\n\r\n  useEffect(() => {\r\n    // if (visible) {\r\n    //   document.body.classList.add('oak-modal-open');\r\n    // } else {\r\n    //   document.body.classList.remove('oak-modal-open');\r\n    // }\r\n    document.addEventListener('keydown', escFunction, false);\r\n    return () => document.removeEventListener('keydown', escFunction, false);\r\n  }, [visible]);\r\n\r\n  const escFunction = event => {\r\n    if (event.keyCode === 27) {\r\n      if (visible) {\r\n        props.toggleVisibility();\r\n      }\r\n    }\r\n  };\r\n\r\n  const getmodalStyle = () => {\r\n    let style = '';\r\n    style += props.noheader ? ' noheader' : '';\r\n    style += props.fullscreen ? ' fullscreen' : '';\r\n    style += props.donotMobilize ? '' : ' mobilize';\r\n    return style;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {visible && (\r\n        <div\r\n          className={\r\n            props.visible\r\n              ? `modal-root show ${getmodalStyle()}`\r\n              : `modal-root hide ${getmodalStyle()}`\r\n          }\r\n        >\r\n          <div className=\"backdrop-fade\" onClick={props.toggleVisibility} />\r\n          <div className=\"oak-modal\">\r\n            {/* {visible && ( */}\r\n            <div className=\"modal\">\r\n              <div\r\n                className={props.visible ? 'container' : 'container hidetext'}\r\n              >\r\n                <div className=\"modal-header\">\r\n                  {/* <div className=\"container\" data-test=\"toggle-visibility\"> */}\r\n\r\n                  <div className=\"left\">\r\n                    <div className=\"icon\">\r\n                      {/* <i className=\"material-icons\">blur_on</i> */}N\r\n                    </div>\r\n                    <div className=\"label one-liner\">{props.label}</div>\r\n                  </div>\r\n                  <div className=\"right\">\r\n                    <div onClick={props.toggleVisibility}>\r\n                      <i className=\"material-icons modal-close-icon\">close</i>\r\n                      {/* <div className=\"text-esc\">esc</div> */}\r\n                    </div>\r\n                  </div>\r\n                  {/* </div> */}\r\n                </div>\r\n                {props.children}\r\n              </div>\r\n            </div>\r\n            {/* )} */}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OakModal;\r\n","import React from 'react';\r\nimport './styles/oak-prompt.scss';\r\nimport OakButton from './OakButton';\r\nimport OakModal from './OakModal';\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  toggleVisibility: any;\r\n  action: any;\r\n  text?: string;\r\n  children?: any;\r\n}\r\n\r\nconst OakPrompt = (props: Props) => {\r\n  // useEffect(() => {\r\n  //     document.addEventListener(\"keydown\", escFunction, false);\r\n  //     return () => document.removeEventListener(\"keydown\", escFunction, false);\r\n  // }, []);\r\n\r\n  // const escFunction = (event) => {\r\n  //     if(event.keyCode === 27) {\r\n  //       if (props.visible) {\r\n  //         props.toggleVisibility();\r\n  //       }\r\n  //     }\r\n  // }\r\n\r\n  const action = () => {\r\n    console.log('triggered action');\r\n    props.toggleVisibility();\r\n    console.log('before action');\r\n    props.action();\r\n    console.log('after action');\r\n  };\r\n\r\n  return (\r\n    <OakModal\r\n      visible={props.visible}\r\n      toggleVisibility={props.toggleVisibility}\r\n      noheader\r\n    >\r\n      <div className=\"modal-body typography-8 space-top-4 space-bottom-4 confirmation-text\">\r\n        {props.text ? props.text : 'Are you sure you want to continue?'}\r\n      </div>\r\n      <div className=\"modal-footer\">\r\n        {props.children && props.children}\r\n        {!props.children && (\r\n          <>\r\n            <OakButton\r\n              data-test=\"action-close\"\r\n              action={props.toggleVisibility}\r\n              theme=\"default\"\r\n              variant=\"appear\"\r\n              align=\"left\"\r\n              fa=\"fas fa-times\"\r\n            >\r\n              No\r\n            </OakButton>\r\n            <OakButton\r\n              data-test=\"action-proceed\"\r\n              action={action}\r\n              theme=\"primary\"\r\n              variant=\"disappear\"\r\n              align=\"right\"\r\n              fa=\"fas fa-check\"\r\n            >\r\n              Yes\r\n            </OakButton>\r\n          </>\r\n        )}\r\n      </div>\r\n    </OakModal>\r\n  );\r\n};\r\n\r\nexport default OakPrompt;\r\n","import React, { useState } from 'react';\r\nimport './styles/oak-viewer.scss';\r\n\r\ninterface Props {\r\n  children: any;\r\n}\r\nconst OakViewer = (props: Props) => {\r\n  return (\r\n    <div className=\"oak-viewer\">\r\n      <div dangerouslySetInnerHTML={{ __html: props.children || '' }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OakViewer;\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  name: string;\r\n  history: any;\r\n  asset: string;\r\n}\r\n\r\nconst TagItem = (props: Props) => {\r\n  const viewTag = event => {\r\n    props.history.push(`/${props.asset}/article/tag?name=${props.name}`);\r\n  };\r\n  return (\r\n    <div className=\"tag-item\" onClick={viewTag}>\r\n      <div className=\"tag-content\">\r\n        <i className=\"material-icons\">local_offer</i>\r\n        {props.name}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagItem;\r\n","import React from 'react';\r\nimport Maybe from 'graphql/tsutils/Maybe';\r\nimport { ArticleTag } from '../../../types/graphql';\r\nimport TagItem from './TagItem';\r\n\r\ninterface Props {\r\n  tags: Array<Maybe<ArticleTag>>;\r\n  history: any;\r\n  asset: string;\r\n}\r\n\r\nconst TagContainer = (props: Props) => {\r\n  return (\r\n    <div className=\"tag-container\">\r\n      {props.tags.map((item: Maybe<ArticleTag>) => (\r\n        <div key={item?.id}>\r\n          {item && (\r\n            <TagItem\r\n              name={item.name || ''}\r\n              history={props.history}\r\n              asset={props.asset}\r\n            />\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagContainer;\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport OakPrompt from '../../../oakui/OakPrompt';\r\nimport { Article } from '../../../types/graphql';\r\nimport OakViewer from '../../../oakui/OakViewer';\r\nimport TagContainer from './TagContainer';\r\nimport { DELETE_ARTICLE } from '../../Types/ArticleSchema';\r\nimport OakHeading from '../../../oakui/OakHeading';\r\n\r\ninterface Props {\r\n  id: string;\r\n  history: any;\r\n  article: Article;\r\n  asset: string;\r\n}\r\n\r\nconst ArticleItem = (props: Props) => {\r\n  const [deleteArticle] = useMutation(DELETE_ARTICLE, {\r\n    variables: { id: props.article.id },\r\n  });\r\n  const [confirmDelete, setConfirmDelete] = useState(false);\r\n\r\n  const editArticle = () => {\r\n    props.history.push(`/${props.asset}/article/edit?id=${props.id}`);\r\n  };\r\n\r\n  const goBack = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  const searchArticle = () => {\r\n    props.history.push(`/${props.asset}/article/search`);\r\n  };\r\n\r\n  const deleteArticlePrompt = () => {\r\n    setConfirmDelete(true);\r\n  };\r\n\r\n  const deleteArticledata = async () => {\r\n    deleteArticle().then(() => {\r\n      if (props.history.length > 2) {\r\n        goBack();\r\n      } else {\r\n        searchArticle();\r\n      }\r\n    });\r\n  };\r\n\r\n  const getHeadingLinks = () => {\r\n    const links: any[] = [];\r\n    if (props.history.length > 2) {\r\n      links.push({\r\n        label: 'Go back',\r\n        icon: 'reply',\r\n        action: () => goBack(),\r\n      });\r\n    }\r\n    links.push({ label: 'Edit', icon: 'edit', action: () => editArticle() });\r\n    links.push({\r\n      label: 'Delete',\r\n      icon: 'delete_outline',\r\n      action: () => deleteArticlePrompt(),\r\n    });\r\n    return links;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"view-article-item\">\r\n        <OakHeading\r\n          title={props.article.title || ''}\r\n          links={getHeadingLinks()}\r\n          linkSize=\"large\"\r\n        />\r\n        <TagContainer\r\n          tags={props.article.tags || []}\r\n          history={props.history}\r\n          asset={props.asset}\r\n        />\r\n        <OakViewer>{props.article.description}</OakViewer>\r\n      </div>\r\n      <OakPrompt\r\n        action={() => deleteArticledata()}\r\n        visible={confirmDelete}\r\n        toggleVisibility={() => setConfirmDelete(!confirmDelete)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ArticleItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { Article } from '../../../types/graphql';\r\nimport {\r\n  ADD_ARTICLE_FEEDBACK,\r\n  REMOVE_ARTICLE_FEEDBACK,\r\n  GET_ARTICLE,\r\n} from '../../Types/ArticleSchema';\r\nimport { sendMessage } from '../../../events/MessageService';\r\n\r\ninterface Props {\r\n  article: Article;\r\n}\r\n\r\nconst FeedbackView = (props: Props) => {\r\n  const [addArticleFeedback, { data: addedFeedback }] = useMutation(\r\n    ADD_ARTICLE_FEEDBACK\r\n  );\r\n  const [removeArticleFeedback, { data: removedFeedback }] = useMutation(\r\n    REMOVE_ARTICLE_FEEDBACK\r\n  );\r\n  const [providedFeedbacks, setProvidedFeedbacks] = useState<any[]>([]);\r\n\r\n  const feedback = type => {\r\n    if (providedFeedbacks.includes(type)) {\r\n      removeArticleFeedback({\r\n        variables: {\r\n          articleId: props.article.id,\r\n          type,\r\n        },\r\n      }).then(() => {\r\n        sendMessage('notification', true, {\r\n          type: 'success',\r\n          message: 'You have withdrawn your feedback',\r\n        });\r\n      });\r\n    } else {\r\n      addArticleFeedback({\r\n        variables: {\r\n          articleId: props.article.id,\r\n          type,\r\n        },\r\n      }).then(() => {\r\n        sendMessage('notification', true, {\r\n          type: 'success',\r\n          message: 'Thank you for sharing your feedback',\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.article?.feedback) {\r\n      setProvidedFeedbacks(\r\n        props.article.feedback.map((item: any) => item.type)\r\n      );\r\n    } else {\r\n      setProvidedFeedbacks([]);\r\n    }\r\n  }, [props.article.feedback]);\r\n\r\n  return (\r\n    <div className=\"action-footer position-right space-top-4 post-feedback align-horizontal\">\r\n      <div className=\"align-horizontal\">\r\n        <i\r\n          className={`material-icons helpful ${\r\n            providedFeedbacks.includes('helpful') ? ' active' : ''\r\n          }`}\r\n          onClick={() => feedback('helpful')}\r\n        >\r\n          thumb_up\r\n        </i>\r\n        <div className=\"typography-5\">{props.article.helpful}</div>\r\n      </div>\r\n      <div className=\"align-horizontal\">\r\n        <i\r\n          className={`material-icons not-helpful ${\r\n            providedFeedbacks.includes('notHelpful') ? ' active' : ''\r\n          }`}\r\n          onClick={() => feedback('notHelpful')}\r\n        >\r\n          thumb_down\r\n        </i>\r\n        <div className=\"typography-5\">{props.article.notHelpful}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackView;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const LIST_POSTS = gql`\r\n  query Posts($pageNo: Int, $pageSize: Int) {\r\n    posts(pageNo: $pageNo, pageSize: $pageSize) {\r\n      results {\r\n        id\r\n        title\r\n        description\r\n        views\r\n        followers\r\n        comments\r\n        helpful\r\n        notHelpful\r\n        isAnswered\r\n        answeredOn\r\n        createdAt\r\n        updatedAt\r\n        tags {\r\n          id\r\n          name\r\n        }\r\n      }\r\n      pageNo\r\n      hasMore\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SEARCH_POSTS = gql`\r\n  query SearchPosts($text: String, $pageNo: Int, $pageSize: Int) {\r\n    searchPosts(text: $text, pageNo: $pageNo, pageSize: $pageSize) {\r\n      results {\r\n        id\r\n        title\r\n        description\r\n        views\r\n        followers\r\n        comments\r\n        helpful\r\n        notHelpful\r\n        isAnswered\r\n        answeredOn\r\n        createdAt\r\n        updatedAt\r\n        tags {\r\n          id\r\n          name\r\n        }\r\n      }\r\n      pageNo\r\n      hasMore\r\n      total\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MY_POSTS = gql`\r\n  query MyPosts($pageNo: Int, $pageSize: Int) {\r\n    myPosts(pageNo: $pageNo, pageSize: $pageSize) {\r\n      results {\r\n        id\r\n        title\r\n        description\r\n        views\r\n        followers\r\n        comments\r\n        helpful\r\n        notHelpful\r\n        isAnswered\r\n        answeredOn\r\n        createdAt\r\n        updatedAt\r\n        tags {\r\n          id\r\n          name\r\n        }\r\n      }\r\n      pageNo\r\n      hasMore\r\n      total\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_POST = gql`\r\n  query Post($id: ID!) {\r\n    post(id: $id) {\r\n      id\r\n      title\r\n      description\r\n      views\r\n      followers\r\n      comments\r\n      helpful\r\n      notHelpful\r\n      isAnswered\r\n      answeredOn\r\n      createdAt\r\n      updatedAt\r\n      followerList {\r\n        id\r\n        userId\r\n      }\r\n      tags {\r\n        id\r\n        name\r\n      }\r\n      feedback {\r\n        type\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const POSTS_BY_TAG = gql`\r\n  query PostsByTag($tag: String!, $pageNo: Int, $pageSize: Int) {\r\n    postsByTag(tag: $tag, pageNo: $pageNo, pageSize: $pageSize) {\r\n      results {\r\n        id\r\n        name\r\n        post {\r\n          id\r\n          title\r\n          description\r\n          views\r\n          followers\r\n          comments\r\n          helpful\r\n          notHelpful\r\n          isAnswered\r\n          answeredOn\r\n          createdAt\r\n          updatedAt\r\n          tags {\r\n            id\r\n            name\r\n          }\r\n        }\r\n      }\r\n      pageNo\r\n      hasMore\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_POST = gql`\r\n  mutation UpdatePost($payload: PostPayload!) {\r\n    addPost(payload: $payload) {\r\n      id\r\n      title\r\n      description\r\n      views\r\n      followers\r\n      comments\r\n      helpful\r\n      notHelpful\r\n      isAnswered\r\n      answeredOn\r\n      createdAt\r\n      updatedAt\r\n      tags {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_POST = gql`\r\n  mutation DeletePost($id: ID!) {\r\n    deletePost(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_POST_FEEDBACK = gql`\r\n  mutation AddPostFeedback($postId: String!, $type: String!) {\r\n    addPostFeedback(postId: $postId, type: $type) {\r\n      id\r\n      post {\r\n        id\r\n        helpful\r\n        notHelpful\r\n        feedback {\r\n          type\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REMOVE_POST_FEEDBACK = gql`\r\n  mutation RemovePostFeedback($postId: String!, $type: String!) {\r\n    removePostFeedback(postId: $postId, type: $type) {\r\n      id\r\n      post {\r\n        id\r\n        helpful\r\n        notHelpful\r\n        feedback {\r\n          type\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const POST_TAG_CLOUD = gql`\r\n  query PostTagCloud {\r\n    postTagCloud {\r\n      name\r\n      count\r\n    }\r\n  }\r\n`;\r\n\r\nexport const POST_COMMENTS = gql`\r\n  query PostComments($postId: String!, $pageNo: Int, $pageSize: Int) {\r\n    postComments(postId: $postId, pageNo: $pageNo, pageSize: $pageSize) {\r\n      results {\r\n        id\r\n        text\r\n        parentId\r\n        helpful\r\n        notHelpful\r\n        isAnswer\r\n        createdBy\r\n        updatedBy\r\n        createdAt\r\n        updatedAt\r\n        feedback {\r\n          type\r\n        }\r\n      }\r\n      pageNo\r\n      hasMore\r\n    }\r\n  }\r\n`;\r\n\r\nexport const POST_COMMENT = gql`\r\n  query PostComment($id: ID!) {\r\n    postComment(id: $id) {\r\n      id\r\n      text\r\n      parentId\r\n      helpful\r\n      notHelpful\r\n      isAnswer\r\n      createdBy\r\n      updatedBy\r\n      createdAt\r\n      updatedAt\r\n      feedback {\r\n        type\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_POST_COMMENT = gql`\r\n  mutation UpdatePostComment($payload: PostCommentPayload!) {\r\n    updatePostComment(payload: $payload) {\r\n      id\r\n      text\r\n      parentId\r\n      helpful\r\n      notHelpful\r\n      isAnswer\r\n      createdBy\r\n      updatedBy\r\n      createdAt\r\n      updatedAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_POST_COMMENT_FEEDBACK = gql`\r\n  mutation AddPostCommentFeedback($commentId: String!, $type: String!) {\r\n    addPostCommentFeedback(commentId: $commentId, type: $type) {\r\n      id\r\n      postComment {\r\n        id\r\n        helpful\r\n        notHelpful\r\n        feedback {\r\n          type\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REMOVE_POST_COMMENT_FEEDBACK = gql`\r\n  mutation RemovePostCommentFeedback($commentId: String!, $type: String!) {\r\n    removePostCommentFeedback(commentId: $commentId, type: $type) {\r\n      id\r\n      postComment {\r\n        id\r\n        helpful\r\n        notHelpful\r\n        feedback {\r\n          type\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FOLLOW_POST = gql`\r\n  mutation FollowPost($postId: String!) {\r\n    followPost(postId: $postId) {\r\n      id\r\n      post {\r\n        id\r\n        followers\r\n        followerList {\r\n          id\r\n          userId\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UNFOLLOW_POST = gql`\r\n  mutation UnfollowPost($postId: String!) {\r\n    unfollowPost(postId: $postId) {\r\n      id\r\n      userId\r\n      post {\r\n        id\r\n        followers\r\n        followerList {\r\n          id\r\n          userId\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MARK_POSTCOMMENT_AS_ANSWER = gql`\r\n  mutation MarkPostCommentAsAnswer($id: ID!) {\r\n    markPostCommentAsAnswer(id: $id) {\r\n      id\r\n      isAnswer\r\n      post {\r\n        id\r\n        isAnswered\r\n        answeredOn\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UNMARK_POSTCOMMENT_AS_ANSWER = gql`\r\n  mutation UnmarkPostCommentAsAnswer($id: ID!) {\r\n    unmarkPostCommentAsAnswer(id: $id) {\r\n      id\r\n      isAnswer\r\n      post {\r\n        id\r\n        isAnswered\r\n        answeredOn\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport OakEditor from '../../../../oakui/OakEditor';\r\nimport OakButton from '../../../../oakui/OakButton';\r\nimport { UPDATE_POST_COMMENT } from '../../../Types/PostSchema';\r\nimport { isEmptyOrSpaces, isEmptyAttributes } from '../../../Utils';\r\nimport { PostCommentPayload } from '../../../../types/graphql';\r\n\r\ninterface Props {\r\n  postId: string;\r\n  parentid?: string;\r\n  closeEdit: Function;\r\n}\r\n\r\nconst NewCommentItem = (props: Props) => {\r\n  const [createComment] = useMutation(UPDATE_POST_COMMENT);\r\n  const [state, setState] = useState({ comment: '' });\r\n  const [formErrors, setFormErrors] = useState<any>({\r\n    comment: '',\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const submit = () => {\r\n    const errorFields: any = { comment: '' };\r\n    if (isEmptyOrSpaces(state.comment)) {\r\n      errorFields.comment = 'Add comment to reply';\r\n    }\r\n    setFormErrors(errorFields);\r\n    if (isEmptyAttributes(errorFields)) {\r\n      const payload: PostCommentPayload = {\r\n        parentId: props.parentid,\r\n        postId: props.postId,\r\n        text: state.comment,\r\n      };\r\n      createComment({\r\n        variables: {\r\n          payload,\r\n        },\r\n      }).then(response => {\r\n        if (response.data.updatePostComment.id) {\r\n          props.closeEdit();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <OakEditor\r\n        data={state}\r\n        errorData={formErrors}\r\n        id=\"comment\"\r\n        handleChange={e => handleChange(e)}\r\n      />\r\n      <div className=\"action-header position-right\">\r\n        <OakButton\r\n          action={() => props.closeEdit()}\r\n          theme=\"default\"\r\n          variant=\"appear\"\r\n        >\r\n          <i className=\"material-icons\">close</i>Cancel\r\n        </OakButton>\r\n        <OakButton action={submit} theme=\"primary\" variant=\"appear\">\r\n          <i className=\"material-icons\">double_arrow</i>Save\r\n        </OakButton>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewCommentItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './styles/oak-infinite-scroll.scss';\r\nimport { sendMessage } from '../events/MessageService';\r\n\r\ninterface Props {\r\n  selector?: string;\r\n  children?: any;\r\n  handleChange: any;\r\n}\r\n\r\nconst OakInfiniteScroll = (props: Props) => {\r\n  const [isFetching, setIsFetching] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document\r\n      .querySelector(props.selector || '.oak-infinite-scroll')\r\n      ?.addEventListener('scroll', handleScroll);\r\n    return () =>\r\n      document\r\n        .querySelector(props.selector || '.oak-infinite-scroll')\r\n        ?.addEventListener('scroll', handleScroll);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isFetching) return;\r\n    fetchMoreListItems();\r\n  }, [isFetching]);\r\n\r\n  function fetchMoreListItems() {\r\n    props.handleChange();\r\n    setIsFetching(false);\r\n  }\r\n\r\n  function handleScroll() {\r\n    if (\r\n      (document.querySelector(props.selector || '.oak-infinite-scroll')\r\n        ?.clientHeight || 0) +\r\n        (document.querySelector(props.selector || '.oak-infinite-scroll')\r\n          ?.scrollTop || 0) >=\r\n      (document.querySelector(props.selector || '.oak-infinite-scroll')\r\n        ?.scrollHeight || 0)\r\n    ) {\r\n      // console.log('Fetch more list items!');\r\n      setIsFetching(true);\r\n      // props.handleChange();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        props.selector\r\n          ? 'oak-infinite-scroll'\r\n          : 'oak-infinite-scroll native-scroll'\r\n      }\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OakInfiniteScroll;\r\n","import format from 'date-fns/format';\r\n\r\nconst currentYear = new Date().getFullYear();\r\n\r\nconst dateFormatWithoutYear = 'MMM d';\r\nconst dateFormat = 'MMM d, yyyy';\r\n\r\nexport const formatDateText = (dateText: string) => {\r\n  if (dateText) {\r\n    const date = new Date(dateText);\r\n    return format(\r\n      date,\r\n      date.getFullYear() === currentYear ? dateFormatWithoutYear : dateFormat\r\n    );\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const formatDate = (date: Date) => {\r\n  if (date) {\r\n    return format(\r\n      date,\r\n      date.getFullYear() === currentYear ? dateFormatWithoutYear : dateFormat\r\n    );\r\n  }\r\n  return '';\r\n};\r\n\r\nexport const days = (dateText: string) => {\r\n  if (dateText) {\r\n    const date = new Date(dateText);\r\n    return (date.getTime() - new Date().getTime()) / (1000 * 3600 * 24);\r\n  }\r\n  return 0;\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { PostComment, User } from '../../../../types/graphql';\r\nimport OakViewer from '../../../../oakui/OakViewer';\r\nimport { formatDateText } from '../../../Lib/DateUtils';\r\nimport { htmlToText } from '../../../Utils';\r\nimport OakAvatar from '../../../../oakui/OakAvatar';\r\n\r\ninterface Props {\r\n  parentComment: PostComment;\r\n  users: User[];\r\n}\r\n\r\nconst ParentCommentPreview = (props: Props) => {\r\n  const [showFullText, setShowFullText] = useState(false);\r\n  const [user, setUser] = useState<User | undefined>();\r\n\r\n  useEffect(() => {\r\n    setUser(\r\n      props.users?.find(item => item.id === props.parentComment?.createdBy)\r\n    );\r\n  }, [props.parentComment]);\r\n\r\n  return (\r\n    <div className=\"parent-comment-preview\">\r\n      <div className=\"parent-comment-preview-header\">\r\n        <div\r\n          className=\"hyperlink align-horizontal\"\r\n          onClick={() => setShowFullText(!showFullText)}\r\n        >\r\n          In reply to {`${user?.firstName} ${user?.lastName}`}\r\n          &apos;s post on {formatDateText(props.parentComment.createdAt)}\r\n        </div>\r\n        {!showFullText && (\r\n          <div className=\"one-liner\">\r\n            {htmlToText(props.parentComment.text)}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {showFullText && (\r\n        <div className=\"parent-comment-preview-content\">\r\n          <OakViewer>{props.parentComment.text}</OakViewer>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ParentCommentPreview;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { PostComment } from '../../../../types/graphql';\r\nimport {\r\n  ADD_POST_FEEDBACK,\r\n  REMOVE_POST_FEEDBACK,\r\n  GET_POST,\r\n  ADD_POST_COMMENT_FEEDBACK,\r\n  REMOVE_POST_COMMENT_FEEDBACK,\r\n} from '../../../Types/PostSchema';\r\nimport { sendMessage } from '../../../../events/MessageService';\r\n\r\ninterface Props {\r\n  comment: PostComment;\r\n}\r\n\r\nconst FeedbackView = (props: Props) => {\r\n  const [addPostCommentFeedback, { data: addedCommentFeedback }] = useMutation(\r\n    ADD_POST_COMMENT_FEEDBACK\r\n  );\r\n  const [\r\n    removePostCommentFeedback,\r\n    { data: removedCommentFeedback },\r\n  ] = useMutation(REMOVE_POST_COMMENT_FEEDBACK);\r\n  const [providedFeedbacks, setProvidedFeedbacks] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (props.comment?.feedback) {\r\n      setProvidedFeedbacks(\r\n        props.comment.feedback.map((item: any) => item.type)\r\n      );\r\n    } else {\r\n      setProvidedFeedbacks([]);\r\n    }\r\n  }, [props.comment.feedback]);\r\n\r\n  const feedback = type => {\r\n    if (providedFeedbacks.includes(type)) {\r\n      removePostCommentFeedback({\r\n        variables: {\r\n          commentId: props.comment.id,\r\n          type,\r\n        },\r\n      }).then(() => {\r\n        sendMessage('notification', true, {\r\n          type: 'success',\r\n          message: 'You have withdrawn your feedback',\r\n        });\r\n      });\r\n    } else {\r\n      addPostCommentFeedback({\r\n        variables: {\r\n          commentId: props.comment.id,\r\n          type,\r\n        },\r\n      }).then(() => {\r\n        sendMessage('notification', true, {\r\n          type: 'success',\r\n          message: 'Thank you for sharing your feedback',\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (props.comment?.feedback) {\r\n  //     setProvidedFeedbacks(\r\n  //       props.comment.feedback.map((item: any) => item.type)\r\n  //     );\r\n  //   } else {\r\n  //     setProvidedFeedbacks([]);\r\n  //   }\r\n  // }, [props.comment.feedback]);\r\n\r\n  return (\r\n    <div className=\"action-footer position-left comment-feedback align-horizontal\">\r\n      <div className=\"align-horizontal\">\r\n        <i\r\n          className={`material-icons helpful ${\r\n            providedFeedbacks.includes('helpful') ? ' active' : ''\r\n          }`}\r\n          onClick={() => feedback('helpful')}\r\n        >\r\n          thumb_up\r\n        </i>\r\n        <div className=\"typography-5\">{props.comment.helpful}</div>\r\n      </div>\r\n      <div className=\"align-horizontal\">\r\n        <i\r\n          className={`material-icons not-helpful ${\r\n            providedFeedbacks.includes('notHelpful') ? ' active' : ''\r\n          }`}\r\n          onClick={() => feedback('notHelpful')}\r\n        >\r\n          thumb_down\r\n        </i>\r\n        <div className=\"typography-5\">{props.comment.notHelpful}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackView;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { PostComment, PostCommentPayload } from '../../../../types/graphql';\r\nimport OakEditor from '../../../../oakui/OakEditor';\r\nimport OakButton from '../../../../oakui/OakButton';\r\nimport { UPDATE_POST_COMMENT } from '../../../Types/PostSchema';\r\nimport { isEmptyOrSpaces, isEmptyAttributes } from '../../../Utils';\r\n\r\ninterface Props {\r\n  postId: string;\r\n  comment: PostComment;\r\n  closeEdit: Function;\r\n}\r\nconst EditCommentItem = (props: Props) => {\r\n  const [updateComment] = useMutation(UPDATE_POST_COMMENT);\r\n  const [state, setState] = useState<any>({ comment: '' });\r\n  const [formErrors, setFormErrors] = useState<any>({\r\n    comment: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    setState({ comment: props.comment?.text });\r\n  }, [props.comment]);\r\n\r\n  const handleChange = event => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const submit = () => {\r\n    const errorFields: any = { comment: '' };\r\n    if (isEmptyOrSpaces(state.comment)) {\r\n      errorFields.comment = 'Add comment to reply';\r\n    }\r\n    setFormErrors(errorFields);\r\n    if (isEmptyAttributes(errorFields)) {\r\n      const payload: PostCommentPayload = {\r\n        id: props.comment.id,\r\n        parentId: props.comment.parentId,\r\n        postId: props.postId,\r\n        text: state.comment,\r\n      };\r\n      updateComment({\r\n        variables: {\r\n          payload,\r\n        },\r\n      }).then(response => {\r\n        if (response.data.updatePostComment.id) {\r\n          props.closeEdit();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <OakEditor\r\n        data={state}\r\n        errorData={formErrors}\r\n        id=\"comment\"\r\n        handleChange={e => handleChange(e)}\r\n      />\r\n      <div className=\"action-footer position-right\">\r\n        <OakButton action={props.closeEdit} theme=\"default\" variant=\"appear\">\r\n          <i className=\"material-icons\">close</i>Cancel\r\n        </OakButton>\r\n        <OakButton action={submit} theme=\"primary\" variant=\"appear\">\r\n          <i className=\"material-icons\">double_arrow</i>Save\r\n        </OakButton>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditCommentItem;\r\n","import React, { useEffect } from 'react';\r\nimport './styles/oak-avatar.scss';\r\n\r\ninterface Props {\r\n  showName?: boolean;\r\n  size?: string;\r\n  firstName?: string;\r\n  lastName?: string;\r\n}\r\nconst OakAvatar = (props: Props) => {\r\n  return (\r\n    <div className=\"oak-avatar\">\r\n      {/* <AvatarImage\r\n      v-if=\"user.avatar\"\r\n      v-bind:reference=\"user.avatar\"\r\n      v-bind:size=\"size\"\r\n    /> */}\r\n      <div\r\n        className={`${props.size ? props.size : ''} avatar-icon typography-6`}\r\n      >\r\n        {`${props.firstName?.substring(0, 1)}${props.lastName?.substring(\r\n          0,\r\n          1\r\n        )}`}\r\n      </div>\r\n      {props.showName && <div className=\"avatar-name\">{props.firstName}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OakAvatar;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport {\r\n  MARK_POSTCOMMENT_AS_ANSWER,\r\n  UNMARK_POSTCOMMENT_AS_ANSWER,\r\n} from '../../../Types/PostSchema';\r\nimport { sendMessage } from '../../../../events/MessageService';\r\nimport { PostComment } from '../../../../types/graphql';\r\n\r\ninterface Props {\r\n  comment: PostComment;\r\n}\r\n\r\nconst MarkComment = (props: Props) => {\r\n  const [markAnswer] = useMutation(MARK_POSTCOMMENT_AS_ANSWER);\r\n  const [unMarkAnswer] = useMutation(UNMARK_POSTCOMMENT_AS_ANSWER);\r\n  const [isAnswer, setIsAnswer] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsAnswer(!!props.comment.isAnswer);\r\n  }, [props.comment.isAnswer]);\r\n\r\n  const answer = () => {\r\n    markAnswer({\r\n      variables: {\r\n        id: props.comment.id,\r\n        isAnswer,\r\n      },\r\n    }).then(() => {\r\n      sendMessage('notification', true, {\r\n        type: 'success',\r\n        message: 'You marked a comment as answer',\r\n      });\r\n    });\r\n  };\r\n\r\n  const removeAnswer = () => {\r\n    unMarkAnswer({\r\n      variables: {\r\n        id: props.comment.id,\r\n        isAnswer,\r\n      },\r\n    }).then(() => {\r\n      sendMessage('notification', true, {\r\n        type: 'success',\r\n        message: 'You removed a comment as answer',\r\n      });\r\n    });\r\n  };\r\n  return (\r\n    <div\r\n      className=\"mark-comment\"\r\n      onClick={() => (isAnswer ? removeAnswer() : answer())}\r\n    >\r\n      <div className={`mark-action ${isAnswer ? 'active' : ''}`}>\r\n        <div className=\"followers-count\">\r\n          <i className=\"material-icons-outlined\">check</i>\r\n        </div>\r\n        {isAnswer && <>Remove Answer</>}\r\n        {!isAnswer && <>Mark Answer</>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarkComment;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useApolloClient } from '@apollo/react-hooks';\r\nimport OakViewer from '../../../../oakui/OakViewer';\r\nimport NewCommentItem from './NewCommentItem';\r\nimport ParentCommentPreview from './ParentCommentPreview';\r\nimport './style.scss';\r\nimport { formatDateText } from '../../../Lib/DateUtils';\r\nimport { PostComment, User } from '../../../../types/graphql';\r\nimport FeedbackView from './FeedbackView';\r\nimport EditCommentItem from './EditCommentItem';\r\nimport { POST_COMMENT } from '../../../Types/PostSchema';\r\nimport OakAvatar from '../../../../oakui/OakAvatar';\r\nimport MarkComment from './MarkComment';\r\n\r\ninterface Props {\r\n  postId: string;\r\n  comment: PostComment;\r\n  comments?: PostComment[];\r\n  users: User[];\r\n}\r\nfunction ViewComment(props: Props) {\r\n  const gqlClient = useApolloClient();\r\n  const [actionType, setActionType] = useState('none');\r\n  const [parentComment, setParentComment] = useState<PostComment | undefined>();\r\n  const [user, setUser] = useState<User | undefined>();\r\n\r\n  useEffect(() => {\r\n    (async function anonymous() {\r\n      const matchingComment = props.comments?.find(\r\n        item => item.id === props.comment.parentId\r\n      );\r\n      setParentComment(matchingComment);\r\n      if (!matchingComment) {\r\n        const { data: response } = await gqlClient.query({\r\n          query: POST_COMMENT,\r\n          variables: { id: props.comment.parentId },\r\n        });\r\n        setParentComment(response?.postComment);\r\n      }\r\n\r\n      setUser(props.users?.find(item => item.id === props.comment?.createdBy));\r\n    })();\r\n  }, [props.comment]);\r\n\r\n  return (\r\n    <div className={`view-comment ${props.comment.isAnswer ? 'answer' : ''}`}>\r\n      <div className=\"view-comment-header\">\r\n        <div className=\"view-comment-meta\">\r\n          {user && (\r\n            <OakAvatar\r\n              firstName={user.firstName || ''}\r\n              lastName={user.lastName || ''}\r\n              showName\r\n              size=\"small\"\r\n            />\r\n          )}{' '}\r\n          replied on {formatDateText(props.comment?.createdAt)}\r\n        </div>\r\n        <div className=\"view-comment-actions\">\r\n          <MarkComment comment={props.comment} />\r\n          <div className=\"hyperlink-container\">\r\n            <i className=\"material-icons typography-6\">edit</i>\r\n            <div\r\n              className=\"hyperlink\"\r\n              onClick={() => setActionType('editcomment')}\r\n            >\r\n              Edit\r\n            </div>\r\n          </div>\r\n          <div className=\"hyperlink-container\">\r\n            <i className=\"material-icons typography-6\">reply</i>\r\n            <div className=\"hyperlink\" onClick={() => setActionType('reply')}>\r\n              Reply\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {['none', 'reply'].includes(actionType) && (\r\n        <>\r\n          {parentComment && (\r\n            <ParentCommentPreview\r\n              parentComment={parentComment}\r\n              users={props.users}\r\n            />\r\n          )}\r\n          <OakViewer>{props.comment?.text}</OakViewer>\r\n          {actionType === 'none' && (\r\n            <div className=\"action-footer position-between space-top-4\">\r\n              <FeedbackView comment={props.comment} />\r\n              {props.comment.isAnswer && (\r\n                <div className=\"align-horizontal accepted-answer-container\">\r\n                  <div className=\"accepted-answer-label typography-4\">\r\n                    Accepted answer\r\n                  </div>\r\n                  <i className=\"answered-answer-icon material-icons-outlined\">\r\n                    verified\r\n                  </i>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n      {actionType === 'reply' && (\r\n        <NewCommentItem\r\n          postId={props.postId}\r\n          closeEdit={() => setActionType('none')}\r\n          parentid={props.comment.id}\r\n        />\r\n      )}\r\n      {actionType === 'editcomment' && (\r\n        <EditCommentItem\r\n          postId={props.postId}\r\n          closeEdit={() => setActionType('none')}\r\n          comment={props.comment}\r\n        />\r\n      )}\r\n      {/* {actionType === 'markcomment' && <MarkComment postId={props.postId} />} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewComment;\r\n","import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport OakInfiniteScroll from '../../../../oakui/OakInfiniteScroll';\r\nimport { POST_COMMENTS } from '../../../Types/PostSchema';\r\nimport OakSpinner from '../../../../oakui/OakSpinner';\r\nimport { PostComment } from '../../../../types/graphql';\r\nimport ViewComment from './ViewComment';\r\nimport { USERS } from '../../../Types/schema';\r\n\r\ninterface Props {\r\n  postId: string;\r\n}\r\n\r\nconst CommentList = (props: Props) => {\r\n  const { loading, data, fetchMore } = useQuery(POST_COMMENTS, {\r\n    variables: {\r\n      postId: props.postId,\r\n      pageSize: 10,\r\n      pageNo: 0,\r\n    },\r\n    fetchPolicy: 'cache-and-network',\r\n  });\r\n  const { loading: usersLoading, data: usersData } = useQuery(USERS);\r\n\r\n  const fetchMoreComments = () => {\r\n    if (data?.postComments?.hasMore) {\r\n      fetchMore({\r\n        variables: {\r\n          pageNo: data?.postComments?.pageNo,\r\n        },\r\n        updateQuery: (prev: any, { fetchMoreResult }: any) => {\r\n          return {\r\n            postComments: {\r\n              ...prev.postComments,\r\n              results: [\r\n                ...prev.postComments.results,\r\n                ...fetchMoreResult.postComments.results,\r\n              ],\r\n              pageNo: fetchMoreResult.postComments.pageNo,\r\n              hasMore: fetchMoreResult.postComments.hasMore,\r\n            },\r\n          };\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <OakInfiniteScroll handleChange={fetchMoreComments} selector=\".oak-page\">\r\n      <div className=\"comment-list\">\r\n        {data?.postComments?.results?.map((item: PostComment) => (\r\n          <ViewComment\r\n            postId={props.postId}\r\n            comment={item}\r\n            comments={data.postComments?.results}\r\n            users={usersData?.users}\r\n            key={item.id}\r\n          />\r\n        ))}\r\n\r\n        {data?.postComments?.results?.length === 0 && (\r\n          <div className=\"typography-6\">No comments</div>\r\n        )}\r\n      </div>\r\n      <div>{loading ? <OakSpinner /> : ''}</div>\r\n    </OakInfiniteScroll>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './styles/oak-subheading.scss';\r\nimport OakHeadingLink from './OakHeadingLink';\r\n\r\ninterface Props {\r\n  title: any;\r\n  subtitle?: string;\r\n  links?: {\r\n    label: string;\r\n    icon?: string;\r\n    action: any;\r\n  }[];\r\n  linkSize?: 'large';\r\n  children?: any;\r\n}\r\n\r\nconst OakSubheading = (props: Props) => {\r\n  return (\r\n    <div className=\"oak-subheading\">\r\n      <div className=\"heading-title typography-8\">{props.title}</div>\r\n      {props.subtitle && (\r\n        <div className=\"heading-subtitle typography-4\">{props.subtitle}</div>\r\n      )}\r\n      <div className=\"heading-links\">\r\n        {props.links?.map((item, index) => (\r\n          <OakHeadingLink link={item} key={index} size={props.linkSize} />\r\n        ))}\r\n      </div>\r\n      {props.children && (\r\n        <div className=\"heading-children\">{props.children}</div>\r\n      )}\r\n      <div className=\"heading-highlight\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OakSubheading;\r\n","import React, { useState } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport NewCommentItem from './NewCommentItem';\r\nimport CommentList from './CommentList';\r\nimport { POST_COMMENTS } from '../../../Types/PostSchema';\r\nimport './style.scss';\r\nimport OakSubheading from '../../../../oakui/OakSubheading';\r\n\r\ninterface Props {\r\n  postId: string;\r\n}\r\n\r\nconst CommentSection = (props: Props) => {\r\n  const { loading, data, fetchMore } = useQuery(POST_COMMENTS, {\r\n    variables: {\r\n      postId: props.postId,\r\n    },\r\n    fetchPolicy: 'network-only',\r\n  });\r\n  const [newComment, setNewComment] = useState(false);\r\n  const [viewComments, setViewComments] = useState(true);\r\n\r\n  const getSectionLinks = () => {\r\n    return [\r\n      {\r\n        label: 'New comment',\r\n        icon: 'add_comment',\r\n        action: () => setNewComment(!newComment),\r\n      },\r\n      {\r\n        label: viewComments ? 'Hide' : 'Show',\r\n        icon: viewComments ? 'expand_less' : 'expand_more',\r\n        action: () => setViewComments(!viewComments),\r\n      },\r\n    ];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"section-header\">\r\n        <OakSubheading\r\n          title={`Comments (${data?.postComments?.results?.length})`}\r\n          links={getSectionLinks()}\r\n          linkSize=\"large\"\r\n        />\r\n      </div>\r\n\r\n      {newComment && (\r\n        <NewCommentItem\r\n          postId={props.postId}\r\n          closeEdit={() => setNewComment(false)}\r\n        />\r\n      )}\r\n      <div className={viewComments ? 'comment-list show' : 'comment-list hide'}>\r\n        <CommentList postId={props.postId} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommentSection;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport './style.scss';\r\nimport ArticleItem from './ArticleItem';\r\nimport { GET_ARTICLE } from '../../Types/ArticleSchema';\r\nimport OakButton from '../../../oakui/OakButton';\r\nimport FeedbackView from './FeedbackView';\r\nimport OakSpinner from '../../../oakui/OakSpinner';\r\nimport OakPage from '../../../oakui/OakPage';\r\nimport OakSection from '../../../oakui/OakSection';\r\nimport CommentSection from '../ArticleHome/CommentSection';\r\n\r\ninterface Props {\r\n  location: any;\r\n  history: any;\r\n  asset: string;\r\n}\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst ViewArticle = (props: Props) => {\r\n  const [urlParam, setUrlParam] = useState({\r\n    id: '',\r\n  });\r\n  const { loading, error, data } = useQuery(GET_ARTICLE, {\r\n    variables: { id: urlParam.id },\r\n    fetchPolicy: 'cache-and-network',\r\n  });\r\n\r\n  useEffect(() => {\r\n    setUrlParam(queryString.parse(props.location.search));\r\n  }, [props.location.search]);\r\n\r\n  return (\r\n    <OakPage>\r\n      <OakSection>\r\n        {loading && <OakSpinner />}\r\n        {!loading && !error && (\r\n          <>\r\n            <ArticleItem\r\n              history={props.history}\r\n              id={urlParam.id}\r\n              asset={props.asset}\r\n              article={data.article}\r\n            />\r\n            <FeedbackView article={data.article} />\r\n          </>\r\n        )}\r\n        {error && <div className=\"typography-6\">Article does not exist</div>}\r\n      </OakSection>\r\n      <OakSection>\r\n        <div className=\"comment-section-wrapper\">\r\n          <CommentSection postId={urlParam.id} />\r\n        </div>\r\n      </OakSection>\r\n    </OakPage>\r\n  );\r\n};\r\n\r\nexport default ViewArticle;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport OakText from '../../../oakui/OakText';\r\nimport OakEditor from '../../../oakui/OakEditor';\r\nimport OakButton from '../../../oakui/OakButton';\r\nimport { isEmptyOrSpaces } from '../../Utils';\r\nimport { sendMessage } from '../../../events/MessageService';\r\nimport CategoryTree from '../Category/CategoryTree';\r\nimport {\r\n  Article,\r\n  ArticlePayload,\r\n  ArticleCategory,\r\n} from '../../../types/graphql';\r\nimport OakChipGroup from '../../../oakui/OakChipGroup';\r\nimport {\r\n  UPDATE_ARTICLE,\r\n  LIST_ARTICLE_CATEGORIES,\r\n} from '../../Types/ArticleSchema';\r\nimport OakHeading from '../../../oakui/OakHeading';\r\n\r\ninterface Props {\r\n  id: string;\r\n  history: any;\r\n  asset: any;\r\n  article: Article;\r\n}\r\n\r\nconst EditItem = (props: Props) => {\r\n  const { data } = useQuery(LIST_ARTICLE_CATEGORIES);\r\n  const [updateArticle] = useMutation(UPDATE_ARTICLE);\r\n  const [state, setState] = useState<any>({\r\n    id: '',\r\n    title: '',\r\n    description: '',\r\n    tags: [],\r\n    addTags: [],\r\n    removeTags: [],\r\n    categoryId: '',\r\n  });\r\n  const [view, setView] = useState<any>({\r\n    tags: [],\r\n  });\r\n\r\n  const globalTags = [\r\n    'int',\r\n    'lorem',\r\n    'ipsum',\r\n    'dolor',\r\n    'wrsedfdsf',\r\n    'fgfdgyy',\r\n    'ujku',\r\n    'fre546',\r\n    'yudsf',\r\n    'uiasedas',\r\n    'y78sd',\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const tags: string[] = [];\r\n    props.article.tags?.map(item => {\r\n      tags.push(item?.name || '');\r\n    });\r\n    setState({\r\n      id: props.article.id,\r\n      title: props.article.title,\r\n      description: props.article.description,\r\n      categoryId: props.article.category?.id,\r\n      tags,\r\n      addTags: [],\r\n      removeTags: [],\r\n    });\r\n  }, []);\r\n\r\n  useEffect(\r\n    () =>\r\n      setView({\r\n        ...view,\r\n        tags: [...state.tags, ...state.addTags].filter(\r\n          item => !state.removeTags.includes(item)\r\n        ),\r\n      }),\r\n    [state.addTags, state.tags, state.removeTags]\r\n  );\r\n\r\n  const handleChange = event => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const validateEmptyText = (text, message) => {\r\n    if (isEmptyOrSpaces(text)) {\r\n      sendMessage('notification', true, {\r\n        type: 'failure',\r\n        message,\r\n        duration: 5000,\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleTagAddition = key => {\r\n    if (!state.tags.includes(key)) {\r\n      setState({\r\n        ...state,\r\n        addTags: [...state.addTags, key],\r\n        removeTags: state.removeTags.filter(item => item !== key),\r\n      });\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        removeTags: state.removeTags.filter(item => item !== key),\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleTagRemoval = key => {\r\n    if (state.tags.includes(key)) {\r\n      setState({\r\n        ...state,\r\n        removeTags: [...state.removeTags, key],\r\n        addTags: state.addTags.filter(item => item !== key),\r\n      });\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        addTags: state.addTags.filter(item => item !== key),\r\n      });\r\n    }\r\n  };\r\n\r\n  const update = async () => {\r\n    if (\r\n      validateEmptyText(state.title, 'Title is not provided') &&\r\n      validateEmptyText(\r\n        state.description,\r\n        'Provide details for the mentioned title'\r\n      )\r\n    ) {\r\n      const payload: ArticlePayload = {\r\n        id: props.article.id,\r\n        title: state.title,\r\n        description: state.description,\r\n        addTags: state.addTags,\r\n        removeTags: state.removeTags,\r\n        categoryId: state.categoryId,\r\n      };\r\n      updateArticle({\r\n        variables: {\r\n          payload,\r\n        },\r\n      }).then(response => {\r\n        if (props.history.length > 2) props.history.goBack();\r\n      });\r\n    }\r\n  };\r\n  const handleCategoryChange = id => {\r\n    // setUrlParam({ categoryid: id });\r\n    setState({ ...state, categoryId: id });\r\n  };\r\n\r\n  const cancelCreation = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-header\">\r\n        <OakHeading title=\"Edit article\" />\r\n        <div className=\"action-header position-right\">\r\n          <OakButton action={update} theme=\"primary\" variant=\"appear\">\r\n            <i className=\"material-icons\">double_arrow</i>Save\r\n          </OakButton>\r\n          {props.history.length > 2 && (\r\n            <OakButton\r\n              action={() => cancelCreation()}\r\n              theme=\"default\"\r\n              variant=\"appear\"\r\n            >\r\n              <i className=\"material-icons\">close</i>Cancel\r\n            </OakButton>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"create-article-item\">\r\n        <CategoryTree\r\n          category={data?.articleCategories?.find(\r\n            (item: ArticleCategory) => item.id === state.categoryId\r\n          )}\r\n          categories={data?.articleCategories}\r\n          handleChange={handleCategoryChange}\r\n          choosable\r\n        />\r\n        <div className=\"user-form\">\r\n          {/* <CategoryTree id={props.article.category} /> */}\r\n          <OakText\r\n            label=\"Title\"\r\n            data={state}\r\n            id=\"title\"\r\n            handleChange={e => handleChange(e)}\r\n          />\r\n          <OakEditor\r\n            label=\"Description\"\r\n            data={state}\r\n            id=\"description\"\r\n            handleChange={handleChange}\r\n          />\r\n          <OakChipGroup\r\n            handleAddition={handleTagAddition}\r\n            handleRemoval={handleTagRemoval}\r\n            elements={globalTags}\r\n            data={view}\r\n            id=\"tags\"\r\n            label=\"Tags\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default EditItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport './style.scss';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport EditItem from './EditItem';\r\nimport OakSpinner from '../../../oakui/OakSpinner';\r\nimport { GET_ARTICLE } from '../../Types/ArticleSchema';\r\nimport OakPage from '../../../oakui/OakPage';\r\nimport OakSection from '../../../oakui/OakSection';\r\n\r\ninterface Props {\r\n  asset: string;\r\n  location: any;\r\n  history?: any;\r\n}\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst EditArticle = (props: Props) => {\r\n  const [urlParam, setUrlParam] = useState({\r\n    id: '',\r\n    categoryId: '',\r\n  });\r\n\r\n  const { loading, error, data } = useQuery(GET_ARTICLE, {\r\n    variables: { id: urlParam.id },\r\n  });\r\n\r\n  useEffect(() => {\r\n    setUrlParam(queryString.parse(props.location.search));\r\n  }, [props.location.search]);\r\n\r\n  return (\r\n    <OakPage>\r\n      <OakSection>\r\n        {!loading && !error && (\r\n          <EditItem\r\n            history={props.history}\r\n            id={urlParam.id}\r\n            asset={props.asset}\r\n            article={data.article}\r\n          />\r\n        )}\r\n        {loading && <OakSpinner />}\r\n      </OakSection>\r\n    </OakPage>\r\n  );\r\n};\r\n\r\nexport default EditArticle;\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport { Article } from '../../types/graphql';\r\nimport { formatDateText } from '../Lib/DateUtils';\r\nimport { htmlToText } from '../Utils';\r\n\r\ninterface Props {\r\n  article: Article;\r\n  history: any;\r\n  asset: string;\r\n}\r\n\r\nconst ArticleLink = (props: Props) => {\r\n  const viewArticle = () => {\r\n    props.history.push(`/${props.asset}/article/view?id=${props.article.id}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"article-link\">\r\n      <div className=\"article-title typography-7\">\r\n        <div className=\"link hyperlink-drama\" onClick={viewArticle}>\r\n          {props.article?.title}\r\n        </div>\r\n      </div>\r\n      <div className=\"article-meta\">\r\n        {props.article?.createdAt && (\r\n          <div className=\"article-date\">\r\n            Published on {formatDateText(props.article?.createdAt)}\r\n          </div>\r\n        )}\r\n        {props.article?.views > 0 && (\r\n          <div className=\"article-statistic-chip\">\r\n            {`${props.article?.views} ${\r\n              props.article?.views === 1 ? 'view' : 'views'\r\n            }`}\r\n          </div>\r\n        )}\r\n        {props.article?.helpful > 0 && (\r\n          <div className=\"article-statistic-chip helpful\">\r\n            {props.article?.helpful}\r\n            <i className=\"material-icons\">thumb_up</i>\r\n          </div>\r\n        )}\r\n        {props.article?.notHelpful > 0 && (\r\n          <div className=\"article-statistic-chip not-helpful\">\r\n            {props.article?.notHelpful}\r\n            <i className=\"material-icons\">thumb_down</i>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"article-description typography-4 three-liner\">\r\n        {htmlToText(props.article.description)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticleLink;\r\n","import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport './style.scss';\r\nimport { Article } from '../../../../types/graphql';\r\nimport OakInfiniteScroll from '../../../../oakui/OakInfiniteScroll';\r\nimport OakSpinner from '../../../../oakui/OakSpinner';\r\nimport ArticleLink from '../../ArticleLink';\r\nimport OakButton from '../../../../oakui/OakButton';\r\nimport { LIST_ARTICLES } from '../../../Types/ArticleSchema';\r\nimport OakSubheading from '../../../../oakui/OakSubheading';\r\n\r\ninterface Props {\r\n  categoryId: string;\r\n  history: any;\r\n  asset: string;\r\n}\r\n\r\nconst ArticleSection = (props: Props) => {\r\n  const { loading, data, fetchMore } = useQuery(LIST_ARTICLES, {\r\n    variables: { categoryId: props.categoryId, pageSize: 10, pageNo: 0 },\r\n    fetchPolicy: 'cache-and-network',\r\n  });\r\n\r\n  const fetchMoreArticles = () => {\r\n    if (data?.articles?.hasMore) {\r\n      fetchMore({\r\n        variables: {\r\n          pageNo: data?.articles?.pageNo,\r\n        },\r\n        updateQuery: (prev: any, { fetchMoreResult }: any) => {\r\n          return {\r\n            articles: {\r\n              ...prev.articles,\r\n              results: [\r\n                ...prev.articles.results,\r\n                ...fetchMoreResult.articles.results,\r\n              ],\r\n              pageNo: fetchMoreResult.articles.pageNo,\r\n              hasMore: fetchMoreResult.articles.hasMore,\r\n            },\r\n          };\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   refetch();\r\n  // }, [props.categoryId]);\r\n\r\n  const createArticleLink = event => {\r\n    props.history.push(\r\n      `/${props.asset}/article/create?categoryid=${props.categoryId}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.categoryId && (\r\n        <>\r\n          <div className=\"section-header\">\r\n            <OakSubheading title=\"Articles\" />\r\n            <div>\r\n              <OakButton\r\n                theme=\"primary\"\r\n                variant=\"regular\"\r\n                action={createArticleLink}\r\n              >\r\n                New article\r\n              </OakButton>\r\n            </div>\r\n          </div>\r\n          <OakInfiniteScroll\r\n            handleChange={fetchMoreArticles}\r\n            selector=\".oak-page\"\r\n          >\r\n            <div className=\"article-section\">\r\n              <div className=\"article-list-container\">\r\n                {data?.articles?.results?.map((item: Article) => (\r\n                  <ArticleLink\r\n                    key={item.id}\r\n                    article={item}\r\n                    asset={props.asset}\r\n                    history={props.history}\r\n                  />\r\n                ))}\r\n                {data?.articles?.results?.length === 0 && (\r\n                  <div className=\"typography-6\">No articles</div>\r\n                )}\r\n              </div>\r\n              <div>{loading ? <OakSpinner /> : ''}</div>\r\n            </div>\r\n          </OakInfiniteScroll>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ArticleSection;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './style.scss';\r\nimport { ArticleCategory } from '../../../../types/graphql';\r\n\r\ninterface Props {\r\n  category: ArticleCategory;\r\n  categories: Array<ArticleCategory>;\r\n  handleClick: any;\r\n}\r\n\r\nconst CategoryView = (props: Props) => {\r\n  const [articleCount, setArticleCount] = useState(0);\r\n  const [subCategoryCount, setSubCategoryCount] = useState(0);\r\n\r\n  const computeTotalArticles = () => {\r\n    setArticleCount(addChildrenArticles(0, props.category));\r\n    setSubCategoryCount(\r\n      props.categories.filter(\r\n        item => item.parentCategoryId === props.category.id\r\n      ).length\r\n    );\r\n  };\r\n\r\n  const addChildrenArticles = (count, category: ArticleCategory) => {\r\n    let newCount = count;\r\n    newCount += category.articles;\r\n    const children = props.categories.filter(\r\n      item => item.parentCategoryId === category.id\r\n    );\r\n    if (children.length === 0) {\r\n      return newCount;\r\n    }\r\n\r\n    children.forEach(item => {\r\n      newCount += addChildrenArticles(count, item);\r\n    });\r\n\r\n    return newCount;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.category && props.categories) {\r\n      computeTotalArticles();\r\n    }\r\n  }, [props.categories, props.category]);\r\n  return (\r\n    <div className=\"category-view\" onClick={props.handleClick}>\r\n      <div className=\"typography-8\">{props.category.name}</div>\r\n      {articleCount > 0 && (\r\n        <div className=\"typography-4\">{`${articleCount} articles`}</div>\r\n      )}\r\n      {articleCount === 0 && <div className=\"typography-4\">No articles</div>}\r\n      {subCategoryCount > 0 && (\r\n        <div className=\"typography-4\">{`${subCategoryCount} sub categories`}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryView;\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport './style.scss';\r\nimport OakText from '../../../../oakui/OakText';\r\nimport OakButton from '../../../../oakui/OakButton';\r\nimport {\r\n  UPDATE_ARTICLE_CATEGORY,\r\n  LIST_ARTICLE_CATEGORIES,\r\n} from '../../../Types/ArticleSchema';\r\nimport { ArticleCategoryPayload } from '../../../../types/graphql';\r\n\r\ninterface Props {\r\n  parentCategoryId: string;\r\n  handleClose: Function;\r\n}\r\n\r\nconst CreateCategory = (props: Props) => {\r\n  const [addArticleCategory] = useMutation(UPDATE_ARTICLE_CATEGORY);\r\n  const [state, setState] = useState({ name: '' });\r\n\r\n  const handleChange = event => {\r\n    setState({ ...state, [event.target.name]: event.target.value });\r\n  };\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    const payload: ArticleCategoryPayload = {\r\n      name: state.name,\r\n      parentCategoryId: props.parentCategoryId,\r\n    };\r\n    addArticleCategory({\r\n      variables: {\r\n        payload,\r\n      },\r\n      update: (cache, { data: { addArticleCategory } }) => {\r\n        const data: any = cache.readQuery({ query: LIST_ARTICLE_CATEGORIES });\r\n        cache.writeQuery({\r\n          query: LIST_ARTICLE_CATEGORIES,\r\n          data: {\r\n            articleCategories: [...data.articleCategories, addArticleCategory],\r\n          },\r\n        });\r\n      },\r\n    });\r\n    props.handleClose();\r\n  };\r\n  return (\r\n    <div className=\"create-category\">\r\n      <form method=\"GET\" onSubmit={onSubmit} noValidate>\r\n        <OakText\r\n          data={state}\r\n          id=\"name\"\r\n          handleChange={handleChange}\r\n          label=\"Category name\"\r\n        />\r\n      </form>\r\n      <div className=\"action-footer\">\r\n        {state.name && (\r\n          <OakButton theme=\"primary\" variant=\"appear\" action={onSubmit}>\r\n            Save\r\n          </OakButton>\r\n        )}\r\n        <OakButton theme=\"default\" variant=\"appear\" action={props.handleClose}>\r\n          Cancel\r\n        </OakButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateCategory;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\ninterface Props {\r\n  action: any;\r\n}\r\n\r\nconst CreateCategoryLink = (props: Props) => {\r\n  return (\r\n    <div className=\"create-category-link\" onClick={props.action}>\r\n      <i className=\"material-icons\">add_circle</i>\r\n      <div>Category</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateCategoryLink;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { gql } from 'apollo-boost';\r\nimport './style.scss';\r\nimport { Article, ArticleCategory } from '../../../../types/graphql';\r\nimport CategoryView from './CategoryView';\r\nimport CategoryTree from '../../Category/CategoryTree';\r\nimport OakSpinner from '../../../../oakui/OakSpinner';\r\nimport CreateCategory from './CreateCategory';\r\nimport CreateCategoryLink from './CreateCategoryLink';\r\nimport OakButton from '../../../../oakui/OakButton';\r\nimport { LIST_ARTICLE_CATEGORIES } from '../../../Types/ArticleSchema';\r\nimport OakSubheading from '../../../../oakui/OakSubheading';\r\n\r\ninterface Props {\r\n  categoryId: string;\r\n  handleChange: Function;\r\n  asset: string;\r\n  history: any;\r\n}\r\n\r\nconst CategorySection = (props: Props) => {\r\n  const { loading, error, data } = useQuery(LIST_ARTICLE_CATEGORIES);\r\n\r\n  const [view, setView] = useState<Array<ArticleCategory> | undefined>();\r\n\r\n  const [showNewCategoryPrompt, setShowNewCategoryPrompt] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (data?.articleCategories && props.categoryId) {\r\n      setView(\r\n        data.articleCategories.filter(\r\n          (item: ArticleCategory) => item.parentCategoryId === props.categoryId\r\n        )\r\n      );\r\n    } else if (data?.articleCategories) {\r\n      setView(\r\n        data.articleCategories.filter(\r\n          (item: ArticleCategory) => !item.parentCategoryId\r\n        )\r\n      );\r\n    }\r\n  }, [props.categoryId, data]);\r\n\r\n  return (\r\n    <div className=\"category-section\">\r\n      <div className=\"category-section-header\">\r\n        <OakSubheading title=\"Category\">\r\n          <CategoryTree\r\n            category={data?.articleCategories?.find(\r\n              (item: ArticleCategory) => item.id === props.categoryId\r\n            )}\r\n            categories={data?.articleCategories}\r\n            handleChange={props.handleChange}\r\n          />\r\n        </OakSubheading>\r\n      </div>\r\n      {view && view.length > 0 && (\r\n        <div className=\"typography-4\">Choose a category to explore</div>\r\n      )}\r\n      <div className=\"category-list\">\r\n        {view?.map((item: ArticleCategory) => (\r\n          <CategoryView\r\n            category={item}\r\n            categories={data?.articleCategories}\r\n            key={item.id}\r\n            handleClick={() => props.handleChange(item.id)}\r\n          />\r\n        ))}\r\n        {!showNewCategoryPrompt && (\r\n          <CreateCategoryLink action={() => setShowNewCategoryPrompt(true)} />\r\n        )}\r\n        {showNewCategoryPrompt && (\r\n          <CreateCategory\r\n            parentCategoryId={props.categoryId}\r\n            handleClose={() => setShowNewCategoryPrompt(false)}\r\n          />\r\n        )}\r\n      </div>\r\n      {props.categoryId && <div className=\"section-close\" />}\r\n      <div>{loading ? <OakSpinner /> : ''}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategorySection;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './style.scss';\r\nimport OakButton from '../../../../oakui/OakButton';\r\nimport ArticleSection from './ArticleSection';\r\nimport CategorySection from './CategorySection';\r\nimport OakHeading from '../../../../oakui/OakHeading';\r\nimport OakPage from '../../../../oakui/OakPage';\r\nimport OakSection from '../../../../oakui/OakSection';\r\n\r\ninterface Props {\r\n  setProfile: Function;\r\n  profile: any;\r\n  match: any;\r\n  location: any;\r\n  history: any;\r\n  asset: string;\r\n}\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst BrowseArticle = (props: Props) => {\r\n  const [urlParam, setUrlParam] = useState({\r\n    categoryid: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    setUrlParam(queryString.parse(props.location.search));\r\n  }, [props.location.search]);\r\n\r\n  const createArticleLink = event => {\r\n    props.history.push(\r\n      `/${props.asset}/article/create?categoryid=${urlParam.categoryid}`\r\n    );\r\n  };\r\n\r\n  const searchArticle = () => {\r\n    props.history.push(`/${props.asset}/article/search`);\r\n  };\r\n\r\n  const handleCategoryChange = id => {\r\n    props.history.push({\r\n      pathname: props.location.pathname,\r\n      search: id ? `?categoryid=${id}` : '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <OakPage>\r\n      <OakSection>\r\n        <div className=\"browse-article\">\r\n          <OakHeading\r\n            title=\"Browse articles by category\"\r\n            links={[\r\n              { label: 'Or Search instead', action: () => searchArticle() },\r\n            ]}\r\n          />\r\n          <div className=\"typography-4\">\r\n            Articles are grouped based on a logical hierarchy for easier\r\n            navigation. Here you can explore the articles by narrowing down your\r\n            search context in the predefined category structure\r\n          </div>\r\n          <div className=\"section-close\" />\r\n          <CategorySection\r\n            categoryId={urlParam.categoryid}\r\n            handleChange={handleCategoryChange}\r\n            history={props.history}\r\n            asset={props.asset}\r\n          />\r\n          <ArticleSection\r\n            categoryId={urlParam.categoryid}\r\n            history={props.history}\r\n            asset={props.asset}\r\n          />\r\n        </div>\r\n      </OakSection>\r\n    </OakPage>\r\n  );\r\n};\r\n\r\nexport default BrowseArticle;\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport OakSubheading from '../../../../oakui/OakSubheading';\r\n\r\ninterface Props {\r\n  asset: string;\r\n  history: any;\r\n}\r\n\r\nconst AlternateSection = (props: Props) => {\r\n  const browseArticle = event => {\r\n    props.history.push(`/${props.asset}/article/browse`);\r\n  };\r\n\r\n  const browsePost = event => {\r\n    props.history.push(`/${props.asset}/post`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-alternate-section\">\r\n      <div className=\"typography-4 no-article-match-message\">\r\n        No articles found matching your search criteria\r\n      </div>\r\n      <OakSubheading\r\n        title=\"Here is what you can do next\"\r\n        subtitle=\"Other ways of getting answer\"\r\n      />\r\n      <div className=\"no-article-match-action\">\r\n        <div className=\"hyperlink\" onClick={browseArticle}>\r\n          Browse articles by category\r\n        </div>\r\n        <div className=\"hyperlink\" onClick={browsePost}>\r\n          Search posts from other users\r\n        </div>\r\n        <div className=\"hyperlink\" onClick={browsePost}>\r\n          Submit your question\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlternateSection;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport './style.scss';\r\nimport { Article } from '../../../../types/graphql';\r\nimport OakInfiniteScroll from '../../../../oakui/OakInfiniteScroll';\r\nimport OakSpinner from '../../../../oakui/OakSpinner';\r\nimport ArticleLink from '../../ArticleLink';\r\nimport { SEARCH_ARTICLES } from '../../../Types/ArticleSchema';\r\nimport OakText from '../../../../oakui/OakText';\r\nimport AlternateSection from './AlternateSection';\r\nimport OakSubheading from '../../../../oakui/OakSubheading';\r\n\r\ninterface Props {\r\n  asset: string;\r\n  history: any;\r\n  text: string;\r\n  handleSearchTextChange: Function;\r\n}\r\n\r\nconst SearchSection = (props: Props) => {\r\n  const [state, setState] = useState({ text: '' });\r\n\r\n  const { loading, error, data, fetchMore, refetch } = useQuery(\r\n    SEARCH_ARTICLES,\r\n    {\r\n      variables: { text: props.text, pageSize: 10, pageNo: 0 },\r\n      // fetchPolicy: 'cache-and-network',\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    setState({ text: props.text || '' });\r\n    refetch();\r\n  }, [props.text]);\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    if (state.text) {\r\n      props.handleSearchTextChange(state.text);\r\n    }\r\n  };\r\n\r\n  const fetchMoreArticles = () => {\r\n    if (data?.searchArticles?.hasMore) {\r\n      fetchMore({\r\n        variables: {\r\n          pageNo: data?.searchArticles?.pageNo,\r\n        },\r\n        updateQuery: (prev: any, { fetchMoreResult }: any) => {\r\n          return {\r\n            searchArticles: {\r\n              ...prev.searchArticles,\r\n              results: [\r\n                ...prev.searchArticles.results,\r\n                ...fetchMoreResult.searchArticles.results,\r\n              ],\r\n              pageNo: fetchMoreResult.searchArticles.pageNo,\r\n              hasMore: fetchMoreResult.searchArticles.hasMore,\r\n            },\r\n          };\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setState({ ...state, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-section\">\r\n      <form method=\"GET\" onSubmit={onSubmit} noValidate>\r\n        <OakText\r\n          data={state}\r\n          id=\"text\"\r\n          handleChange={handleChange}\r\n          label=\"Type your question\"\r\n        />\r\n      </form>\r\n      <OakInfiniteScroll handleChange={fetchMoreArticles} selector=\".oak-page\">\r\n        <div className=\"search-results-section\">\r\n          <div className=\"search-results-container\">\r\n            {data?.searchArticles?.results?.length > 0 && (\r\n              <OakSubheading\r\n                title=\"Search results\"\r\n                subtitle={`Showing results for \"${props.text}\"`}\r\n              />\r\n            )}\r\n            {data?.searchArticles?.results?.map((item: Article) => (\r\n              <ArticleLink\r\n                key={item.id}\r\n                article={item}\r\n                asset={props.asset}\r\n                history={props.history}\r\n              />\r\n            ))}\r\n            {data?.searchArticles?.results?.length === 0 &&\r\n              props.text &&\r\n              !loading && (\r\n                <AlternateSection history={props.history} asset={props.asset} />\r\n              )}\r\n          </div>\r\n          <div>{loading ? <OakSpinner /> : ''}</div>\r\n        </div>\r\n      </OakInfiniteScroll>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchSection;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './style.scss';\r\nimport SearchSection from './SearchSection';\r\nimport OakHeading from '../../../../oakui/OakHeading';\r\nimport OakPage from '../../../../oakui/OakPage';\r\nimport OakSection from '../../../../oakui/OakSection';\r\n\r\ninterface Props {\r\n  setProfile: Function;\r\n  profile: any;\r\n  match: any;\r\n  location: any;\r\n  history: any;\r\n  asset: string;\r\n}\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst SearchArticle = (props: Props) => {\r\n  const [urlParam, setUrlParam] = useState({\r\n    text: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    setUrlParam(queryString.parse(props.location.search));\r\n  }, [props.location.search]);\r\n\r\n  const browseArticle = () => {\r\n    props.history.push(`/${props.asset}/article/browse`);\r\n  };\r\n\r\n  const handleSearchTextChange = text => {\r\n    props.history.push(`/${props.asset}/article/search?text=${text}`);\r\n  };\r\n\r\n  return (\r\n    <OakPage>\r\n      <OakSection>\r\n        <div className=\"browse-article\">\r\n          <OakHeading\r\n            title=\"Search articles\"\r\n            links={[\r\n              {\r\n                label: 'Or Browse by category instead',\r\n                action: () => browseArticle(),\r\n              },\r\n            ]}\r\n          />\r\n          {/* <div className=\"typography-4 align-horizontal\">\r\n            Find your questions answered, from the knowledge base. If you\r\n            don&apos;t get your desired answers, you can post your question for\r\n            response from our customer support team or a community member\r\n          </div> */}\r\n          <SearchSection\r\n            asset={props.asset}\r\n            history={props.history}\r\n            text={urlParam.text}\r\n            handleSearchTextChange={handleSearchTextChange}\r\n          />\r\n        </div>\r\n      </OakSection>\r\n    </OakPage>\r\n  );\r\n};\r\n\r\nexport default SearchArticle;\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport { ArticleTagCloud } from '../../../../types/graphql';\r\n\r\ninterface Props {\r\n  tag: ArticleTagCloud;\r\n  handleClick: any;\r\n}\r\n\r\nconst TagLink = (props: Props) => {\r\n  return (\r\n    <div className=\"tag-link\">\r\n      <div className=\"hyperlink-drama\" onClick={props.handleClick}>\r\n        {props.tag.name}{' '}\r\n      </div>\r\n      <div>{`\\u00A0(${props.tag.count})`}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagLink;\r\n","import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport './style.scss';\r\nimport { ARTICLE_TAG_CLOUD } from '../../../Types/ArticleSchema';\r\nimport TagLink from './TagLink';\r\nimport OakHeading from '../../../../oakui/OakHeading';\r\nimport OakSection from '../../../../oakui/OakSection';\r\n\r\ninterface Props {\r\n  handleChange: Function;\r\n  history: any;\r\n  asset: string;\r\n}\r\n\r\nconst TagSection = (props: Props) => {\r\n  const { data } = useQuery(ARTICLE_TAG_CLOUD, {\r\n    fetchPolicy: 'cache-and-network',\r\n  });\r\n\r\n  const searchArticle = () => {\r\n    props.history.push(`/${props.asset}/article/search`);\r\n  };\r\n\r\n  return (\r\n    <OakSection>\r\n      <OakHeading\r\n        title=\"Articles by tag\"\r\n        links={[{ label: 'Or Search instead', action: () => searchArticle() }]}\r\n      />\r\n      <div className=\"tag-section\">\r\n        {data?.articleTagCloud?.map(item => (\r\n          <TagLink\r\n            key={item.name}\r\n            tag={item}\r\n            handleClick={() => props.handleChange(item.name)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </OakSection>\r\n  );\r\n};\r\n\r\nexport default TagSection;\r\n","import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport './style.scss';\r\nimport { ARTICLES_BY_TAG } from '../../../Types/ArticleSchema';\r\nimport OakInfiniteScroll from '../../../../oakui/OakInfiniteScroll';\r\nimport ArticleLink from '../../ArticleLink';\r\nimport { Article, ArticleTag } from '../../../../types/graphql';\r\nimport OakSpinner from '../../../../oakui/OakSpinner';\r\nimport OakHeading from '../../../../oakui/OakHeading';\r\nimport OakSection from '../../../../oakui/OakSection';\r\n\r\ninterface Props {\r\n  tag: string;\r\n  asset: string;\r\n  history: any;\r\n}\r\n\r\nconst ArticleSection = (props: Props) => {\r\n  const { loading, error, data, fetchMore, refetch } = useQuery(\r\n    ARTICLES_BY_TAG,\r\n    {\r\n      variables: { tag: props.tag, pageSize: 10, pageNo: 0 },\r\n      fetchPolicy: 'cache-and-network',\r\n    }\r\n  );\r\n\r\n  const fetchMoreArticles = () => {\r\n    if (data?.articlesByTag?.hasMore) {\r\n      fetchMore({\r\n        variables: {\r\n          pageNo: data?.articlesByTag?.pageNo,\r\n        },\r\n        updateQuery: (prev: any, { fetchMoreResult }: any) => {\r\n          return {\r\n            articlesByTag: {\r\n              ...prev.articlesByTag,\r\n              results: [\r\n                ...prev.articlesByTag.results,\r\n                ...fetchMoreResult.articlesByTag.results,\r\n              ],\r\n              pageNo: fetchMoreResult.articlesByTag.pageNo,\r\n              hasMore: fetchMoreResult.articlesByTag.hasMore,\r\n            },\r\n          };\r\n        },\r\n      });\r\n    }\r\n  };\r\n  const goBack = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  const viewByTags = () => {\r\n    props.history.push(`/${props.asset}/article/tag`);\r\n  };\r\n\r\n  const getHeadingLinks = () => {\r\n    return [\r\n      {\r\n        label: 'Go back',\r\n        icon: 'reply',\r\n        action: () => goBack(),\r\n      },\r\n      {\r\n        label: 'See other tags',\r\n        icon: 'local_offer',\r\n        action: () => viewByTags(),\r\n      },\r\n    ];\r\n  };\r\n\r\n  return (\r\n    <OakSection>\r\n      <OakHeading\r\n        title=\"Articles by tag\"\r\n        subtitle={`Showing articles for tag \"${props.tag}\"`}\r\n        links={getHeadingLinks()}\r\n      />\r\n      <div className=\"tag-article-section\">\r\n        <OakInfiniteScroll\r\n          handleChange={fetchMoreArticles}\r\n          selector=\".oak-page\"\r\n        >\r\n          <div className=\"search-results-section\">\r\n            <div className=\"search-results-container\">\r\n              {data?.articlesByTag?.results?.map((item: ArticleTag, index) => (\r\n                <div key={item?.article?.id || index}>\r\n                  {item?.article && (\r\n                    <ArticleLink\r\n                      article={item.article}\r\n                      asset={props.asset}\r\n                      history={props.history}\r\n                    />\r\n                  )}\r\n                </div>\r\n              ))}\r\n              {/* {data?.articlesByTag?.results?.length === 0 &&\r\n              props.text &&\r\n              !loading && (\r\n                <AlternateSection history={props.history} asset={props.asset} />\r\n              )} */}\r\n            </div>\r\n            <div>{loading ? <OakSpinner /> : ''}</div>\r\n          </div>\r\n        </OakInfiniteScroll>\r\n      </div>\r\n    </OakSection>\r\n  );\r\n};\r\n\r\nexport default ArticleSection;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './style.scss';\r\nimport TagSection from './TagSection';\r\nimport ArticleSection from './ArticleSection';\r\nimport OakPage from '../../../../oakui/OakPage';\r\n\r\ninterface Props {\r\n  setProfile: Function;\r\n  profile: any;\r\n  match: any;\r\n  location: any;\r\n  history: any;\r\n  asset: string;\r\n}\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst ArticlesByTag = (props: Props) => {\r\n  const [urlParam, setUrlParam] = useState({\r\n    name: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    setUrlParam(queryString.parse(props.location.search));\r\n  }, [props.location.search]);\r\n\r\n  const handleChange = name => {\r\n    props.history.push(`/${props.asset}/article/tag?name=${name}`);\r\n  };\r\n\r\n  return (\r\n    <OakPage>\r\n      {/* <div className=\"typography-4 align-horizontal\">\r\n            Find your questions answered, from the knowledge base. If you\r\n            don&apos;t get your desired answers, you can post your question for\r\n            response from our customer support team or a community member\r\n          </div> */}\r\n      {!urlParam.name && (\r\n        <TagSection\r\n          handleChange={handleChange}\r\n          asset={props.asset}\r\n          history={props.history}\r\n        />\r\n      )}\r\n      {urlParam.name && (\r\n        <ArticleSection\r\n          tag={urlParam.name}\r\n          asset={props.asset}\r\n          history={props.history}\r\n        />\r\n      )}\r\n    </OakPage>\r\n  );\r\n};\r\n\r\nexport default ArticlesByTag;\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { isEmptyOrSpaces, isEmptyAttributes } from '../../Utils';\r\nimport { sendMessage } from '../../../events/MessageService';\r\nimport { AssetPayload, AssetAdditionPayload } from '../../../types/graphql';\r\nimport OakButton from '../../../oakui/OakButton';\r\nimport OakText from '../../../oakui/OakText';\r\nimport { CREATE_ASSET } from '../../Types/schema';\r\nimport OakHeading from '../../../oakui/OakHeading';\r\n\r\ninterface Props {\r\n  history: any;\r\n  asset?: string;\r\n}\r\n\r\nconst CreateItem = (props: Props) => {\r\n  const [createAsset, { data: savedAsset }] = useMutation(CREATE_ASSET);\r\n  const [state, setState] = useState<any>({\r\n    name: '',\r\n    description: '',\r\n    email: '',\r\n    jwtPassword: '',\r\n  });\r\n  const [formErrors, setFormErrors] = useState<any>({\r\n    name: '',\r\n    description: '',\r\n    email: '',\r\n    jwtPassword: '',\r\n  });\r\n  const handleChange = event => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const submit = event => {\r\n    const errorFields: any = {\r\n      name: '',\r\n      description: '',\r\n      email: '',\r\n      jwtPassword: '',\r\n    };\r\n    if (isEmptyOrSpaces(state.name)) {\r\n      errorFields.name = 'Name cannot be empty';\r\n    }\r\n    if (isEmptyOrSpaces(state.description)) {\r\n      errorFields.description = 'Description cannot be empty';\r\n    }\r\n    if (isEmptyOrSpaces(state.email)) {\r\n      errorFields.email = 'Email cannot be empty';\r\n    }\r\n    if (isEmptyOrSpaces(state.jwtPassword)) {\r\n      errorFields.jwtPassword = 'JWT Password cannot be empty';\r\n    }\r\n\r\n    if (\r\n      !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(\r\n        state.email.trim().toLowerCase()\r\n      )\r\n    ) {\r\n      errorFields.email = 'Invalid email';\r\n    }\r\n    setFormErrors(errorFields);\r\n    if (isEmptyAttributes(errorFields)) {\r\n      const payload: AssetPayload = {\r\n        name: state.name,\r\n        description: state.description,\r\n        jwtPassword: state.jwtPassword,\r\n      };\r\n      const addition: AssetAdditionPayload = {\r\n        email: state.email.trim().toLowerCase(),\r\n      };\r\n      createAsset({\r\n        variables: {\r\n          payload,\r\n          addition,\r\n        },\r\n      })\r\n        .then((response: any) => {\r\n          console.log(response);\r\n          if (response.data.createAsset.id) {\r\n            props.history.push(\r\n              `/asset/summary?id=${response.data.createAsset.assetId}`\r\n            );\r\n          } else {\r\n            sendMessage('notification', true, {\r\n              type: 'failure',\r\n              message: 'Unknown error',\r\n            });\r\n          }\r\n        })\r\n        .finally(() => {\r\n          setFormErrors(errorFields);\r\n          sendMessage('spinner', false);\r\n        });\r\n    } else {\r\n      setFormErrors(errorFields);\r\n      sendMessage('spinner', false);\r\n    }\r\n  };\r\n  const cancelCreation = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-header\">\r\n        <OakHeading title=\"Create asset\" />\r\n\r\n        <div className=\"action-header position-right\">\r\n          <OakButton action={submit} theme=\"primary\" variant=\"appear\">\r\n            <i className=\"material-icons\">double_arrow</i>Save\r\n          </OakButton>\r\n          {props.history.length > 2 && (\r\n            <OakButton\r\n              action={() => cancelCreation()}\r\n              theme=\"default\"\r\n              variant=\"appear\"\r\n            >\r\n              <i className=\"material-icons\">close</i>Cancel\r\n            </OakButton>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"create-article-item\">\r\n        <div className=\"user-form\">\r\n          <OakText\r\n            label=\"Asset Name\"\r\n            data={state}\r\n            errorData={formErrors}\r\n            id=\"name\"\r\n            handleChange={e => handleChange(e)}\r\n          />\r\n          <OakText\r\n            label=\"Description\"\r\n            data={state}\r\n            errorData={formErrors}\r\n            id=\"description\"\r\n            multiline\r\n            handleChange={e => handleChange(e)}\r\n          />\r\n          <OakText\r\n            label=\"Email\"\r\n            data={state}\r\n            errorData={formErrors}\r\n            id=\"email\"\r\n            handleChange={e => handleChange(e)}\r\n          />\r\n          <div className=\"typography-3\">\r\n            This email is used for sending first time login information with\r\n            Administrative rights to this asset. You will be sent with a login\r\n            token that you can use to setup the asset. You can add more\r\n            administrator accounts once you login with the provided link.\r\n          </div>\r\n\r\n          <OakText\r\n            label=\"JWT Password\"\r\n            data={state}\r\n            errorData={formErrors}\r\n            id=\"jwtPassword\"\r\n            handleChange={e => handleChange(e)}\r\n          />\r\n          <div className=\"typography-3\">\r\n            Make a note of this password. You need this password to setup\r\n            redirection from your host application. This is the password that is\r\n            used to securely transmit or redirect user information from host\r\n            application to mirror. Use this password in your host application\r\n            while creating a JWT token to transmit information to mirror.\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateItem;\r\n","import React from 'react';\r\nimport CreateItem from './CreateItem';\r\nimport OakPage from '../../../oakui/OakPage';\r\nimport OakSection from '../../../oakui/OakSection';\r\n\r\ninterface Props {\r\n  history: any;\r\n}\r\n\r\nconst CreateAsset = (props: Props) => {\r\n  return (\r\n    <OakPage>\r\n      <OakSection>\r\n        <CreateItem history={props.history} />\r\n      </OakSection>\r\n    </OakPage>\r\n  );\r\n};\r\n\r\nexport default CreateAsset;\r\n","import React from 'react';\r\nimport { Asset } from '../../../types/graphql';\r\nimport OakViewer from '../../../oakui/OakViewer';\r\nimport OakHeading from '../../../oakui/OakHeading';\r\n\r\ninterface Props {\r\n  history: any;\r\n  asset: Asset;\r\n}\r\n\r\nconst ViewItem = (props: Props) => {\r\n  const editAsset = () => {\r\n    props.history.push(`/${props.asset.assetId}/asset/edit`);\r\n  };\r\n\r\n  const deleteAssetPrompt = () => {\r\n    console.log('To Be implemented');\r\n  };\r\n  const getHeadingLinks = () => {\r\n    return [\r\n      {\r\n        label: 'Edit',\r\n        icon: 'edit',\r\n        action: () => editAsset(),\r\n      },\r\n      {\r\n        label: 'Delete',\r\n        icon: 'delete_outline',\r\n        action: () => deleteAssetPrompt(),\r\n      },\r\n    ];\r\n  };\r\n  return (\r\n    <>\r\n      {props.asset && (\r\n        <div className=\"view-asset-item\">\r\n          <OakHeading\r\n            title=\"Asset detail\"\r\n            links={getHeadingLinks()}\r\n            linkSize=\"large\"\r\n          />\r\n          <div className=\"typography-8\">{props.asset.name}</div>\r\n          <OakViewer>{props.asset.description}</OakViewer>\r\n        </div>\r\n      )}\r\n      {!props.asset && <div className=\"typography-6\">Asset does not exist</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewItem;\r\n","import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport './style.scss';\r\nimport { GET_ASSET } from '../../Types/schema';\r\nimport OakSpinner from '../../../oakui/OakSpinner';\r\nimport ViewItem from './ViewItem';\r\nimport OakPage from '../../../oakui/OakPage';\r\nimport OakSection from '../../../oakui/OakSection';\r\n\r\ninterface Props {\r\n  location: any;\r\n  history: any;\r\n  asset: string;\r\n  match: any;\r\n}\r\n\r\nconst ViewAsset = (props: Props) => {\r\n  const { loading, error, data } = useQuery(GET_ASSET, {\r\n    variables: {\r\n      assetId: props.asset,\r\n    },\r\n  });\r\n  return (\r\n    <OakPage>\r\n      <OakSection>\r\n        {loading && <OakSpinner />}\r\n        {!loading && !error && (\r\n          <ViewItem history={props.history} asset={data.asset} />\r\n        )}\r\n        {error && <div className=\"typography-6\">Asset does not exist</div>}\r\n      </OakSection>\r\n    </OakPage>\r\n  );\r\n};\r\n\r\nexport default ViewAsset;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './style.scss';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport OakText from '../../../oakui/OakText';\r\nimport OakButton from '../../../oakui/OakButton';\r\nimport { isEmptyOrSpaces, isEmptyAttributes } from '../../Utils';\r\n\r\nimport { AssetPayload, Asset } from '../../../types/graphql';\r\n\r\nimport { UPDATE_ASSET } from '../../Types/schema';\r\nimport OakHeading from '../../../oakui/OakHeading';\r\n\r\ninterface Props {\r\n  id: string;\r\n  history: any;\r\n  asset: string;\r\n  assetData: Asset;\r\n}\r\n\r\nconst EditItem = (props: Props) => {\r\n  const [updateAsset] = useMutation(UPDATE_ASSET);\r\n  const [state, setState] = useState<any>({\r\n    id: '',\r\n    name: '',\r\n    description: '',\r\n    jwtPassword: '',\r\n    productionMode: '',\r\n  });\r\n  const [formErrors, setFormErrors] = useState<any>({\r\n    id: '',\r\n    name: '',\r\n    description: '',\r\n    jwtPassword: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (props.asset) {\r\n      setState({\r\n        id: props.id,\r\n        name: props.assetData.name,\r\n        description: props.assetData.description,\r\n        productionMode: props.assetData.productionMode,\r\n        jwtPassword: props.assetData.jwtPassword,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = event => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const update = async () => {\r\n    const errorFields: any = {\r\n      name: '',\r\n      description: '',\r\n      email: '',\r\n      jwtPassword: '',\r\n    };\r\n    if (isEmptyOrSpaces(state.name)) {\r\n      errorFields.name = 'Name cannot be empty';\r\n    }\r\n    if (isEmptyOrSpaces(state.description)) {\r\n      errorFields.description = 'Description cannot be empty';\r\n    }\r\n\r\n    if (isEmptyOrSpaces(state.jwtPassword)) {\r\n      errorFields.jwtPassword = 'JWT Password cannot be empty';\r\n    }\r\n    setFormErrors(errorFields);\r\n    if (isEmptyAttributes(errorFields)) {\r\n      const payload: AssetPayload = {\r\n        id: props.assetData.id,\r\n        name: state.name,\r\n        description: state.description,\r\n        jwtPassword: state.jwtPassword,\r\n        productionMode: state.productionMode,\r\n      };\r\n      updateAsset({\r\n        variables: {\r\n          payload,\r\n        },\r\n      }).then(response => {\r\n        if (props.history.length > 2) props.history.goBack();\r\n      });\r\n    }\r\n  };\r\n\r\n  const cancelCreation = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  const changeMode = () => {\r\n    const payload: AssetPayload = {\r\n      id: props.assetData.id,\r\n      productionMode: !state.productionMode,\r\n    };\r\n    updateAsset({\r\n      variables: {\r\n        payload,\r\n      },\r\n    }).then(response => {\r\n      if (response.data.updateAsset.id) {\r\n        props.history.goBack();\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-header\">\r\n        {props.asset && (\r\n          <OakHeading\r\n            title={\r\n              <div className=\"align-horizontal\">\r\n                Edit asset\r\n                <div className=\"asset-status-container space-left-1 typography-4\">\r\n                  {!state.productionMode && (\r\n                    <div className=\"asset-status down\">down</div>\r\n                  )}\r\n                  {state.productionMode && (\r\n                    <div className=\"asset-status live\">live</div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            }\r\n          >\r\n            {!state.productionMode && (\r\n              <div className=\"align-horizontal\">\r\n                To activate asset, &nbsp;\r\n                <div className=\"hyperlink\" onClick={changeMode}>\r\n                  turn on production mode\r\n                </div>\r\n              </div>\r\n            )}\r\n            {state.productionMode && (\r\n              <div className=\"align-horizontal\">\r\n                To activate asset, &nbsp;\r\n                <div className=\"hyperlink\" onClick={changeMode}>\r\n                  turn off production mode\r\n                </div>\r\n              </div>\r\n            )}\r\n          </OakHeading>\r\n        )}\r\n        {props.assetData && (\r\n          <div className=\"action-header position-right\">\r\n            <OakButton action={update} theme=\"primary\" variant=\"appear\">\r\n              <i className=\"material-icons\">double_arrow</i>Save\r\n            </OakButton>\r\n            {props.history.length > 2 && (\r\n              <OakButton\r\n                action={() => cancelCreation()}\r\n                theme=\"default\"\r\n                variant=\"appear\"\r\n              >\r\n                <i className=\"material-icons\">close</i>Cancel\r\n              </OakButton>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {props.asset && (\r\n        <div className=\"create-article-item\">\r\n          <div className=\"user-form\">\r\n            <OakText\r\n              label=\"Asset Name\"\r\n              data={state}\r\n              errorData={formErrors}\r\n              id=\"name\"\r\n              handleChange={e => handleChange(e)}\r\n            />\r\n            <OakText\r\n              label=\"Description\"\r\n              data={state}\r\n              errorData={formErrors}\r\n              id=\"description\"\r\n              multiline\r\n              handleChange={handleChange}\r\n            />\r\n            <OakText\r\n              label=\"JWTPassword\"\r\n              data={state}\r\n              errorData={formErrors}\r\n              id=\"jwtPassword\"\r\n              type=\"password\"\r\n              handleChange={e => handleChange(e)}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n      {!props.assetData && (\r\n        <div className=\"typography-6\">Asset does not exist</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default EditItem;\r\n","import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { GET_ASSET } from '../../Types/schema';\r\nimport EditItem from './EditItem';\r\nimport OakPage from '../../../oakui/OakPage';\r\nimport OakSection from '../../../oakui/OakSection';\r\n\r\ninterface Props {\r\n  match: any;\r\n  history: any;\r\n  asset: string;\r\n  location: string;\r\n}\r\n\r\nconst EditAsset = (props: Props) => {\r\n  const { loading, error, data } = useQuery(GET_ASSET, {\r\n    variables: {\r\n      assetId: props.match.params.asset,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <OakPage>\r\n      <OakSection>\r\n        {!loading && !error && (\r\n          <EditItem\r\n            asset={props.asset}\r\n            history={props.history}\r\n            id={props.match.params.asset}\r\n            assetData={data.asset}\r\n          />\r\n        )}\r\n        {error && <div className=\"typography-6\">Asset does not exist</div>}\r\n      </OakSection>\r\n    </OakPage>\r\n  );\r\n};\r\n\r\nexport default EditAsset;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\ninterface Props {\r\n  space: any;\r\n  history: any;\r\n  asset: string;\r\n  from?: string;\r\n}\r\n\r\nconst SpaceItem = (props: Props) => {\r\n  const oaLogin = () => {\r\n    window.location.href = `${process.env.REACT_APP_ONEAUTH_URL}/#/space/${\r\n      props.space.spaceId\r\n    }/login?type=signin&appId=${process.env.REACT_APP_ONEAUTH_APP_ID}&asset=${\r\n      props.asset\r\n    }${props.from ? `&from=${props.from}` : ''}`;\r\n  };\r\n  return (\r\n    <div className=\"space-list-item align-horizontal\" onClick={oaLogin}>\r\n      <div className=\"space-list-item--link\">\r\n        <div className=\"typography-6 space-horizontal-1\">\r\n          {props.space.name}\r\n        </div>\r\n      </div>\r\n      ( <div className=\"typography-4\">{props.space.spaceId}</div> )\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpaceItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport OakText from '../../../oakui/OakText';\r\nimport { isEmptyOrSpaces } from '../../Utils';\r\nimport OakHeading from '../../../oakui/OakHeading';\r\nimport OakPage from '../../../oakui/OakPage';\r\nimport OakSection from '../../../oakui/OakSection';\r\nimport { fetchSpace } from '../../Auth/AuthService';\r\nimport SpaceItem from './SpaceItem';\r\nimport './style.scss';\r\nimport OakSpinner from '../../../oakui/OakSpinner';\r\n\r\ninterface Props {\r\n  history: any;\r\n  location: any;\r\n  asset: string;\r\n}\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst OneAuth = (props: Props) => {\r\n  const authorization = useSelector(state => state.authorization);\r\n  const [view, setView] = useState<Array<any> | undefined>(undefined);\r\n  const [searchCriteria, setSearchCriteria] = useState({ text: '' });\r\n  const [loading, setLoading] = useState(false);\r\n  const [queryParam, setQueryParam] = useState<any>();\r\n\r\n  useEffect(() => {\r\n    const queryParam = queryString.parse(props.location.search);\r\n    if (queryParam.space) {\r\n      window.location.href = `${process.env.REACT_APP_ONEAUTH_URL}/#/space/${queryParam.space}/login?type=signin&appId=${process.env.REACT_APP_ONEAUTH_APP_ID}&asset=${props.asset}&from=${queryParam.from}`;\r\n    }\r\n    setQueryParam(queryParam);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchSpace().then(response => {\r\n      setView(search(response.data, searchCriteria.text));\r\n      setLoading(false);\r\n    });\r\n  }, [searchCriteria]);\r\n\r\n  const search = (existingSpace, criteria) => {\r\n    if (isEmptyOrSpaces(criteria)) {\r\n      return existingSpace;\r\n    }\r\n    return existingSpace.filter(\r\n      item => item.name.toLowerCase().indexOf(criteria.toLowerCase()) !== -1\r\n    );\r\n  };\r\n\r\n  const handleSearchCriteria = event => {\r\n    setSearchCriteria({\r\n      ...searchCriteria,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (authorization.isAuth) {\r\n      props.history.push(`/${props.asset}/article`);\r\n    }\r\n  }, [authorization]);\r\n\r\n  const goBack = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  const getHeadingLinks = () => {\r\n    const links: any[] = [];\r\n    if (props.history.length > 2) {\r\n      links.push({\r\n        label: 'Go back',\r\n        icon: 'reply',\r\n        action: () => goBack(),\r\n      });\r\n    }\r\n    return links;\r\n  };\r\n\r\n  return (\r\n    <OakPage>\r\n      <OakSection>\r\n        <div className=\"view-asset-item\">\r\n          <div className=\"page-header\">\r\n            <OakHeading\r\n              title=\"Login via Oneauth\"\r\n              subtitle=\"You will be redirected to oneauth for signing in to your space\"\r\n              links={getHeadingLinks()}\r\n              linkSize=\"large\"\r\n            />\r\n          </div>\r\n\r\n          {loading && <OakSpinner />}\r\n\r\n          {!loading && view && view.length > 0 && (\r\n            <OakText\r\n              label=\"Type company name to filter\"\r\n              handleChange={handleSearchCriteria}\r\n              id=\"text\"\r\n              data={searchCriteria}\r\n            />\r\n          )}\r\n\r\n          {!loading &&\r\n            view &&\r\n            view.length === 0 &&\r\n            'No space found. Check with Oneauth administrator.'}\r\n\r\n          <div className=\"list-spaces\">\r\n            <div className=\"list-spaces--content\">\r\n              {view?.map(space => (\r\n                <SpaceItem\r\n                  history={props.history}\r\n                  space={space}\r\n                  key={space._id}\r\n                  asset={props.asset}\r\n                  from={queryParam && queryParam.from ? queryParam.from : null}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </OakSection>\r\n    </OakPage>\r\n  );\r\n};\r\n\r\nexport default OneAuth;\r\n","import React, { useState } from 'react';\r\nimport { useApolloClient } from '@apollo/react-hooks';\r\nimport OakText from '../../../oakui/OakText';\r\nimport OakButton from '../../../oakui/OakButton';\r\nimport { isEmptyOrSpaces, isEmptyAttributes } from '../../Utils';\r\nimport { NEW_EMAIL_SESSION } from '../../Types/schema';\r\nimport './style.scss';\r\nimport OakHeading from '../../../oakui/OakHeading';\r\n\r\ninterface Props {\r\n  history: any;\r\n  tokenLogin: Function;\r\n  newAccount: Function;\r\n}\r\n\r\nconst EmailItem = (props: Props) => {\r\n  const gqlClient = useApolloClient();\r\n  const [state, setState] = useState({ email: '' });\r\n  const [formErrors, setFormErrors] = useState<any>({\r\n    email: '',\r\n  });\r\n\r\n  const [isTokenSent, setIsTokenSent] = useState(false);\r\n\r\n  // Temporary until email functionality is implemented\r\n  const [token, setToken] = useState('');\r\n\r\n  const handleChange = event => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const login = async event => {\r\n    event.preventDefault();\r\n    const errorFields: any = { email: '' };\r\n\r\n    if (isEmptyOrSpaces(state.email)) {\r\n      errorFields.email = 'Email cannot be empty';\r\n    }\r\n    if (\r\n      !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(\r\n        state.email.trim().toLowerCase()\r\n      )\r\n    ) {\r\n      errorFields.email = 'Invalid email';\r\n    }\r\n    setFormErrors(errorFields);\r\n    if (isEmptyAttributes(errorFields)) {\r\n      const { data } = await gqlClient.query({\r\n        query: NEW_EMAIL_SESSION,\r\n        variables: { email: state.email },\r\n      });\r\n      if (data?.newEmailSession) {\r\n        setToken(data?.newEmailSession.sessionId);\r\n        setIsTokenSent(true);\r\n      } else {\r\n        props.newAccount();\r\n      }\r\n    }\r\n  };\r\n\r\n  const cancelLogin = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isTokenSent && (\r\n        <>\r\n          <div className=\"page-header\">\r\n            <OakHeading\r\n              title=\"Email authentication\"\r\n              subtitle=\"You will receive an authentication token to your email\"\r\n            />\r\n          </div>\r\n          <div className=\"typhography-4 hyperlink-inline\">\r\n            Authentication token is generated and sent to your email. You can\r\n            click on the login link from your email instruction or copy paste{' '}\r\n            {token} the token id&nbsp;\r\n            <div className=\"hyperlink\" onClick={() => props.tokenLogin()}>\r\n              here\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n      {!isTokenSent && (\r\n        <>\r\n          <div className=\"page-header\">\r\n            <OakHeading\r\n              title=\"Email authentication\"\r\n              subtitle=\"You will receive an authentication token to your email\"\r\n            />\r\n            <div className=\"action-header position-right\">\r\n              <OakButton action={login} theme=\"primary\" variant=\"appear\">\r\n                <i className=\"material-icons\">double_arrow</i>Submit\r\n              </OakButton>\r\n              {props.history.length > 2 && (\r\n                <OakButton\r\n                  action={() => cancelLogin()}\r\n                  theme=\"default\"\r\n                  variant=\"appear\"\r\n                >\r\n                  <i className=\"material-icons\">close</i>Cancel\r\n                </OakButton>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <form method=\"GET\" onSubmit={login} noValidate>\r\n            <OakText\r\n              label=\"Email\"\r\n              data={state}\r\n              errorData={formErrors}\r\n              id=\"email\"\r\n              handleChange={e => handleChange(e)}\r\n            />\r\n          </form>\r\n          <div className=\"email-login-footer\">\r\n            <div>or</div>\r\n            <div className=\"hyperlink\" onClick={() => props.tokenLogin()}>\r\n              Enter authentication token, if you already have one\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmailItem;\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport OakText from '../../../oakui/OakText';\r\nimport OakButton from '../../../oakui/OakButton';\r\nimport { isEmptyOrSpaces, isEmptyAttributes } from '../../Utils';\r\n\r\nimport { CREATE_EMAIL_ACCOUNT } from '../../Types/schema';\r\nimport { UserPayload } from '../../../types/graphql';\r\nimport OakHeading from '../../../oakui/OakHeading';\r\n\r\ninterface Props {\r\n  history: any;\r\n  emailLogin: Function;\r\n}\r\nconst AccountItem = (props: Props) => {\r\n  const [createEmailAccount] = useMutation(CREATE_EMAIL_ACCOUNT);\r\n  const [state, setState] = useState({\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  });\r\n  const [formErrors, setFormErrors] = useState<any>({\r\n    email: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  });\r\n\r\n  const [message, setMessage] = useState(false);\r\n\r\n  const handleChange = event => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const cancelLogin = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  const submit = event => {\r\n    console.log('*********');\r\n    event.preventDefault();\r\n    const errorFields: any = { email: '', firstName: '', lastName: '' };\r\n\r\n    if (isEmptyOrSpaces(state.firstName)) {\r\n      errorFields.firstName = 'First name cannot be empty';\r\n    }\r\n    if (isEmptyOrSpaces(state.lastName)) {\r\n      errorFields.lastName = 'Last name cannot be empty';\r\n    }\r\n    if (isEmptyOrSpaces(state.email)) {\r\n      errorFields.email = 'Email cannot be empty';\r\n    }\r\n    if (\r\n      !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(\r\n        state.email.trim().toLowerCase()\r\n      )\r\n    ) {\r\n      errorFields.email = 'Invalid email';\r\n    }\r\n    setFormErrors(errorFields);\r\n    if (isEmptyAttributes(errorFields)) {\r\n      const payload: UserPayload = {\r\n        firstName: state.firstName,\r\n        lastName: state.lastName,\r\n        email: state.email,\r\n      };\r\n      createEmailAccount({\r\n        variables: {\r\n          payload,\r\n        },\r\n      }).then(() => {\r\n        setMessage(!message);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {message && (\r\n        <div className=\"typhography-4\">\r\n          Thank you for creating account. You are ready to go! follow the\r\n          instruction provided in the email or click on\r\n          <div className=\"hyperlink\" onClick={() => props.emailLogin()}>\r\n            Login with email\r\n          </div>\r\n        </div>\r\n      )}\r\n      {!message && (\r\n        <form method=\"GET\" onSubmit={submit} noValidate>\r\n          <div className=\"page-header\">\r\n            <OakHeading\r\n              title=\"Email authentication\"\r\n              subtitle=\"You don't have an user account yet. Signup now\"\r\n            />\r\n\r\n            <div className=\"action-header position-right\">\r\n              <OakButton action={submit} theme=\"primary\" variant=\"appear\">\r\n                <i className=\"material-icons\">double_arrow</i>Save\r\n              </OakButton>\r\n              {props.history.length > 2 && (\r\n                <OakButton\r\n                  action={() => cancelLogin()}\r\n                  theme=\"default\"\r\n                  variant=\"appear\"\r\n                >\r\n                  <i className=\"material-icons\">close</i>Cancel\r\n                </OakButton>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"user-form\">\r\n            <OakText\r\n              label=\"First Name\"\r\n              data={state}\r\n              errorData={formErrors}\r\n              id=\"firstName\"\r\n              handleChange={e => handleChange(e)}\r\n            />\r\n            <OakText\r\n              label=\"Last name\"\r\n              data={state}\r\n              errorData={formErrors}\r\n              id=\"lastName\"\r\n              handleChange={e => handleChange(e)}\r\n            />\r\n            <OakText\r\n              label=\"Email\"\r\n              data={state}\r\n              errorData={formErrors}\r\n              id=\"email\"\r\n              handleChange={e => handleChange(e)}\r\n            />\r\n          </div>\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AccountItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport OakButton from '../../../oakui/OakButton';\r\nimport OakText from '../../../oakui/OakText';\r\nimport { isEmptyOrSpaces, isEmptyAttributes } from '../../Utils';\r\nimport OakHeading from '../../../oakui/OakHeading';\r\n\r\ninterface Props {\r\n  history: any;\r\n  emailLogin: Function;\r\n  asset: string;\r\n  queryParam: any;\r\n  cookies: any;\r\n}\r\nconst TokenItem = (props: Props) => {\r\n  const [state, setState] = useState({ token: '' });\r\n  const [formErrors, setFormErrors] = useState<any>({\r\n    token: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (props.queryParam.auth_token) {\r\n      console.log(props.queryParam.auth_token);\r\n\r\n      props.cookies.set(\r\n        `mirror_${props.asset}`,\r\n        `email ${props.queryParam.auth_token}`\r\n      );\r\n      props.history.push(`/${props.asset}/article`);\r\n    }\r\n  }, [props.queryParam]);\r\n\r\n  const handleChange = event => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const login = event => {\r\n    event.preventDefault();\r\n    const errorFields: any = { token: '' };\r\n\r\n    if (isEmptyOrSpaces(state.token)) {\r\n      errorFields.token = 'Token cannot be empty';\r\n    }\r\n    setFormErrors(errorFields);\r\n    if (isEmptyAttributes(errorFields)) {\r\n      props.history.push(\r\n        `/${props.asset}/login/email?type=token&auth_token=${state.token}`\r\n      );\r\n    }\r\n  };\r\n\r\n  const cancelLogin = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-header\">\r\n        <OakHeading\r\n          title=\"Email authentication\"\r\n          subtitle=\"You would have received an authentication token in your email\"\r\n        />\r\n        <div className=\"action-header position-right\">\r\n          <OakButton action={login} theme=\"primary\" variant=\"appear\">\r\n            <i className=\"material-icons\">double_arrow</i>Submit\r\n          </OakButton>\r\n          {props.history.length > 2 && (\r\n            <OakButton\r\n              action={() => cancelLogin()}\r\n              theme=\"default\"\r\n              variant=\"appear\"\r\n            >\r\n              <i className=\"material-icons\">close</i>Cancel\r\n            </OakButton>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <form method=\"GET\" onSubmit={login} noValidate>\r\n        <OakText\r\n          label=\"Token\"\r\n          data={state}\r\n          errorData={formErrors}\r\n          id=\"token\"\r\n          handleChange={e => handleChange(e)}\r\n        />\r\n      </form>\r\n      <div className=\"email-login-footer\">\r\n        <div>or</div>\r\n        <div className=\"hyperlink\" onClick={() => props.emailLogin()}>\r\n          Get a token to your email, if you did not receive one\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TokenItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport EmailItem from './EmailItem';\r\nimport AccountItem from './AccountItem';\r\nimport TokenItem from './TokenItem';\r\nimport OakPage from '../../../oakui/OakPage';\r\nimport OakSection from '../../../oakui/OakSection';\r\n\r\ninterface Props {\r\n  history: any;\r\n  location: any;\r\n  asset: string;\r\n  cookies: any;\r\n}\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst Email = (props: Props) => {\r\n  const authorization = useSelector(state => state.authorization);\r\n  const [state, setState] = useState({ type: 'email' });\r\n  const [queryParam, setQueryParam] = useState<any>({});\r\n\r\n  useEffect(() => {\r\n    const query = queryString.parse(props.location.search);\r\n    query.type ? setState({ type: query.type }) : setState({ type: 'email' });\r\n    setQueryParam(query);\r\n  }, [props.location.search]);\r\n\r\n  const emailLogin = () => {\r\n    props.history.push(\r\n      `/${props.asset}/login/email?type=email&from=${queryParam.from}`\r\n    );\r\n  };\r\n\r\n  const tokenLogin = () => {\r\n    props.history.push(\r\n      `/${props.asset}/login/email?type=token&from=${queryParam.from}`\r\n    );\r\n  };\r\n\r\n  const newAccount = () => {\r\n    props.history.push(\r\n      `/${props.asset}/login/email?type=new&from=${queryParam.from}`\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (authorization.isAuth) {\r\n      props.history.push(queryParam.from || `/${props.asset}/article`);\r\n    }\r\n  }, [authorization]);\r\n\r\n  return (\r\n    <OakPage>\r\n      <OakSection>\r\n        <div className=\"view-asset-item\">\r\n          {state.type === 'email' && (\r\n            <EmailItem\r\n              history={props.history}\r\n              tokenLogin={tokenLogin}\r\n              newAccount={newAccount}\r\n            />\r\n          )}\r\n          {state.type === 'token' && (\r\n            <TokenItem\r\n              history={props.history}\r\n              emailLogin={emailLogin}\r\n              asset={props.asset}\r\n              queryParam={queryParam}\r\n              cookies={props.cookies}\r\n            />\r\n          )}\r\n          {state.type === 'new' && (\r\n            <AccountItem history={props.history} emailLogin={emailLogin} />\r\n          )}\r\n        </div>\r\n      </OakSection>\r\n    </OakPage>\r\n  );\r\n};\r\n\r\nexport default Email;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\ninterface Props {\r\n  action: Function;\r\n  label: string;\r\n  icon?: string;\r\n  svgIcon?: any;\r\n}\r\n\r\nconst LoginMethod = (props: Props) => {\r\n  return (\r\n    <div className=\"login-method\" onClick={() => props.action()}>\r\n      {props.icon && <i className=\"material-icons\">{props.icon}</i>}\r\n      {props.svgIcon && (\r\n        <img\r\n          className=\"login-method--icon\"\r\n          src={props.svgIcon}\r\n          alt={`Login via ${props.label}`}\r\n        />\r\n      )}\r\n      <div className=\"typography-7\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginMethod;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './style.scss';\r\nimport LoginMethod from './LoginMethod';\r\nimport OakHeading from '../../oakui/OakHeading';\r\nimport OakPage from '../../oakui/OakPage';\r\nimport OakSection from '../../oakui/OakSection';\r\nimport oaBlack from '../../images/oneauth_black_small.svg';\r\nimport oaWhite from '../../images/oneauth_white_small.svg';\r\n\r\ninterface Props {\r\n  history: any;\r\n  match: any;\r\n  params: string;\r\n  asset: string;\r\n  location: any;\r\n}\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst Login = (props: Props) => {\r\n  const authorization = useSelector(state => state.authorization);\r\n  const profile = useSelector(state => state.profile);\r\n  const [from, setFrom] = useState<string | undefined>();\r\n  const oaLogin = () => {\r\n    props.history.push(\r\n      `/${props.asset}/login/oa${from ? `?from=${from}` : ''}`\r\n    );\r\n  };\r\n  const emailLogin = () => {\r\n    props.history.push(\r\n      `/${props.asset}/login/email${from ? `?from=${from}` : ''}`\r\n    );\r\n  };\r\n\r\n  const mirrorLogin = () => {\r\n    console.log('not yet implemented');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (authorization.isAuth) {\r\n      props.history.push(`/${props.asset}/article`);\r\n    }\r\n  }, [authorization]);\r\n\r\n  useEffect(() => {\r\n    const query = queryString.parse(props.location.search);\r\n    query.from ? setFrom(query.from) : setFrom(undefined);\r\n  }, [props.location.search]);\r\n\r\n  return (\r\n    <OakPage>\r\n      <OakSection>\r\n        <OakHeading\r\n          title=\"Sign in\"\r\n          subtitle=\"Choose the preferred authentication method to continue\"\r\n        />\r\n        <div className=\"view-asset-item\">\r\n          <div className=\"space-top-3 mirror-signin\">\r\n            <div className=\"login-home\">\r\n              <LoginMethod\r\n                action={oaLogin}\r\n                icon=\"corporate_fare\"\r\n                label=\"Enterprise Login\"\r\n              />\r\n              <LoginMethod\r\n                action={mirrorLogin}\r\n                icon=\"people\"\r\n                label=\"Individual Login\"\r\n              />\r\n              <LoginMethod\r\n                action={emailLogin}\r\n                icon=\"email\"\r\n                label=\"OTP via Email\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </OakSection>\r\n    </OakPage>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Login.scss';\r\nimport { useApolloClient } from '@apollo/react-hooks';\r\n\r\nimport { NEW_EXTERN_SESSION } from '../Types/schema';\r\nimport OakPage from '../../oakui/OakPage';\r\nimport OakSection from '../../oakui/OakSection';\r\n\r\nconst queryString = require('query-string');\r\n\r\ninterface Props {\r\n  cookies: any;\r\n  history: any;\r\n  location: any;\r\n  asset: string;\r\n}\r\n\r\nconst ExternLogin = (props: Props) => {\r\n  const gqlClient = useApolloClient();\r\n  const [isInvalidToken, setIsInvalidToken] = useState(false);\r\n  useEffect(() => {\r\n    if (props.location.search) {\r\n      const query = queryString.parse(props.location.search);\r\n      createSession(query.token);\r\n    }\r\n  }, []);\r\n\r\n  const createSession = async (token: string) => {\r\n    const { data } = await gqlClient.query({\r\n      query: NEW_EXTERN_SESSION,\r\n      variables: { token, asset: props.asset },\r\n    });\r\n    if (data?.newExternSession?.sessionId) {\r\n      props.cookies.set(\r\n        `mirror_${props.asset}`,\r\n        `extern ${data?.newExternSession?.sessionId}`\r\n      );\r\n      props.history.push(`/${props.asset}/article`);\r\n    } else {\r\n      setIsInvalidToken(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isInvalidToken && (\r\n        <OakPage>\r\n          <OakSection>\r\n            <div className=\"extern-login\">Invalid token</div>\r\n          </OakSection>\r\n        </OakPage>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExternLogin;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useMutation, useQuery } from '@apollo/react-hooks';\r\nimport OakText from '../../../oakui/OakText';\r\nimport OakEditor from '../../../oakui/OakEditor';\r\nimport OakButton from '../../../oakui/OakButton';\r\nimport { isEmptyOrSpaces } from '../../Utils';\r\nimport { sendMessage } from '../../../events/MessageService';\r\nimport { Post, PostPayload } from '../../../types/graphql';\r\nimport OakChipGroup from '../../../oakui/OakChipGroup';\r\nimport { UPDATE_POST } from '../../Types/PostSchema';\r\nimport OakHeading from '../../../oakui/OakHeading';\r\n\r\ninterface Props {\r\n  id: string;\r\n  history: any;\r\n  asset: any;\r\n  post: Post;\r\n}\r\n\r\nconst EditItem = (props: Props) => {\r\n  const [updatePost] = useMutation(UPDATE_POST);\r\n  const [state, setState] = useState<any>({\r\n    id: '',\r\n    title: '',\r\n    description: '',\r\n    tags: [],\r\n    addTags: [],\r\n    removeTags: [],\r\n  });\r\n  const [view, setView] = useState<any>({\r\n    tags: [],\r\n  });\r\n\r\n  const globalTags = [\r\n    'int',\r\n    'lorem',\r\n    'ipsum',\r\n    'dolor',\r\n    'wrsedfdsf',\r\n    'fgfdgyy',\r\n    'ujku',\r\n    'fre546',\r\n    'yudsf',\r\n    'uiasedas',\r\n    'y78sd',\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const tags: string[] = [];\r\n    props.post.tags?.map(item => {\r\n      tags.push(item?.name || '');\r\n    });\r\n    setState({\r\n      id: props.post.id,\r\n      title: props.post.title,\r\n      description: props.post.description,\r\n      tags,\r\n      addTags: [],\r\n      removeTags: [],\r\n    });\r\n  }, []);\r\n\r\n  useEffect(\r\n    () =>\r\n      setView({\r\n        ...view,\r\n        tags: [...state.tags, ...state.addTags].filter(\r\n          item => !state.removeTags.includes(item)\r\n        ),\r\n      }),\r\n    [state.addTags, state.tags, state.removeTags]\r\n  );\r\n\r\n  const handleChange = event => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const validateEmptyText = (text, message) => {\r\n    if (isEmptyOrSpaces(text)) {\r\n      sendMessage('notification', true, {\r\n        type: 'failure',\r\n        message,\r\n        duration: 5000,\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleTagAddition = key => {\r\n    if (!state.tags.includes(key)) {\r\n      setState({\r\n        ...state,\r\n        addTags: [...state.addTags, key],\r\n        removeTags: state.removeTags.filter(item => item !== key),\r\n      });\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        removeTags: state.removeTags.filter(item => item !== key),\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleTagRemoval = key => {\r\n    if (state.tags.includes(key)) {\r\n      setState({\r\n        ...state,\r\n        removeTags: [...state.removeTags, key],\r\n        addTags: state.addTags.filter(item => item !== key),\r\n      });\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        addTags: state.addTags.filter(item => item !== key),\r\n      });\r\n    }\r\n  };\r\n\r\n  const update = async () => {\r\n    if (\r\n      validateEmptyText(state.title, 'Title is not provided') &&\r\n      validateEmptyText(\r\n        state.description,\r\n        'Provide details for the mentioned title'\r\n      )\r\n    ) {\r\n      const payload: PostPayload = {\r\n        id: props.post.id,\r\n        title: state.title,\r\n        description: state.description,\r\n        addTags: state.addTags,\r\n        removeTags: state.removeTags,\r\n      };\r\n      updatePost({\r\n        variables: {\r\n          payload,\r\n        },\r\n      }).then(response => {\r\n        if (props.history.length > 2) props.history.goBack();\r\n      });\r\n    }\r\n  };\r\n\r\n  const cancelCreation = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-header\">\r\n        <OakHeading title=\"Edit post\" />\r\n        <div className=\"action-header position-right\">\r\n          <OakButton action={update} theme=\"primary\" variant=\"appear\">\r\n            <i className=\"material-icons\">double_arrow</i>Save\r\n          </OakButton>\r\n          {props.history.length > 2 && (\r\n            <OakButton\r\n              action={() => cancelCreation()}\r\n              theme=\"default\"\r\n              variant=\"appear\"\r\n            >\r\n              <i className=\"material-icons\">close</i>Cancel\r\n            </OakButton>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"create-post-item\">\r\n        <div className=\"user-form\">\r\n          <OakText\r\n            label=\"Title\"\r\n            data={state}\r\n            id=\"title\"\r\n            handleChange={e => handleChange(e)}\r\n          />\r\n          <OakEditor\r\n            label=\"Description\"\r\n            data={state}\r\n            id=\"description\"\r\n            handleChange={handleChange}\r\n          />\r\n          <OakChipGroup\r\n            handleAddition={handleTagAddition}\r\n            handleRemoval={handleTagRemoval}\r\n            elements={globalTags}\r\n            data={view}\r\n            id=\"tags\"\r\n            label=\"Tags\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default EditItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './style.scss';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport EditItem from './EditItem';\r\nimport OakSpinner from '../../../oakui/OakSpinner';\r\nimport { GET_POST } from '../../Types/PostSchema';\r\nimport OakPage from '../../../oakui/OakPage';\r\nimport OakSection from '../../../oakui/OakSection';\r\n\r\ninterface Props {\r\n  asset: string;\r\n  location: any;\r\n  history?: any;\r\n}\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst EditPost = (props: Props) => {\r\n  const [urlParam, setUrlParam] = useState({\r\n    id: '',\r\n  });\r\n\r\n  const { loading, error, data } = useQuery(GET_POST, {\r\n    variables: { id: urlParam.id },\r\n  });\r\n\r\n  useEffect(() => {\r\n    setUrlParam(queryString.parse(props.location.search));\r\n  }, [props.location.search]);\r\n\r\n  return (\r\n    <OakPage>\r\n      <OakSection>\r\n        {!loading && !error && (\r\n          <EditItem\r\n            history={props.history}\r\n            id={urlParam.id}\r\n            asset={props.asset}\r\n            post={data.post}\r\n          />\r\n        )}\r\n        {loading && <OakSpinner />}\r\n      </OakSection>\r\n    </OakPage>\r\n  );\r\n};\r\n\r\nexport default EditPost;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { gql } from 'apollo-boost';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport OakText from '../../../oakui/OakText';\r\nimport OakEditor from '../../../oakui/OakEditor';\r\nimport OakButton from '../../../oakui/OakButton';\r\nimport { isEmptyOrSpaces, isEmptyAttributes } from '../../Utils';\r\nimport OakChipGroup from '../../../oakui/OakChipGroup';\r\nimport { PostPayload } from '../../../types/graphql';\r\nimport OakHeading from '../../../oakui/OakHeading';\r\n\r\ninterface Props {\r\n  history: any;\r\n  asset: any;\r\n}\r\n\r\nconst ADD_POST = gql`\r\n  mutation AddPost($payload: PostPayload!) {\r\n    addPost(payload: $payload) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst CreateItem = (props: Props) => {\r\n  const [addPost, { data: savedPost }] = useMutation(ADD_POST);\r\n  const [state, setState] = useState<any>({\r\n    title: '',\r\n    description: '',\r\n    tags: [],\r\n    addTags: [],\r\n    removeTags: [],\r\n  });\r\n  const [formErrors, setFormErrors] = useState<any>({\r\n    title: null,\r\n    description: null,\r\n  });\r\n  const [view, setView] = useState<any>({\r\n    tags: [],\r\n  });\r\n\r\n  const globalTags = [\r\n    'int',\r\n    'lorem',\r\n    'ipsum',\r\n    'dolor',\r\n    'wrsedfdsf',\r\n    'fgfdgyy',\r\n    'ujku',\r\n    'fre546',\r\n    'yudsf',\r\n    'uiasedas',\r\n    'y78sd',\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setState({\r\n      title: '',\r\n      description: '',\r\n      tags: [],\r\n      addTags: [],\r\n      removeTags: [],\r\n    });\r\n  }, []);\r\n\r\n  useEffect(\r\n    () =>\r\n      setView({\r\n        ...view,\r\n        tags: [...state.tags, ...state.addTags].filter(\r\n          item => !state.removeTags.includes(item)\r\n        ),\r\n      }),\r\n    [state.addTags, state.tags, state.removeTags]\r\n  );\r\n\r\n  const handleChange = event => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleTagAddition = key => {\r\n    if (!state.tags.includes(key)) {\r\n      setState({\r\n        ...state,\r\n        addTags: [...state.addTags, key],\r\n        removeTags: state.removeTags.filter(item => item !== key),\r\n      });\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        removeTags: state.removeTags.filter(item => item !== key),\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleTagRemoval = key => {\r\n    if (state.tags.includes(key)) {\r\n      setState({\r\n        ...state,\r\n        removeTags: [...state.removeTags, key],\r\n        addTags: state.addTags.filter(item => item !== key),\r\n      });\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        addTags: state.addTags.filter(item => item !== key),\r\n      });\r\n    }\r\n  };\r\n\r\n  const submit = () => {\r\n    const errorFields: any = { title: null, description: '' };\r\n    if (isEmptyOrSpaces(state.title)) {\r\n      errorFields.title = 'Title cannot be empty';\r\n    }\r\n    if (isEmptyOrSpaces(state.description)) {\r\n      errorFields.description = 'Description cannot be empty';\r\n    }\r\n    setFormErrors(errorFields);\r\n    if (isEmptyAttributes(errorFields)) {\r\n      const payload: PostPayload = {\r\n        title: state.title,\r\n        description: state.description,\r\n        addTags: state.addTags,\r\n        removeTags: state.removeTags,\r\n      };\r\n      addPost({\r\n        variables: {\r\n          payload,\r\n        },\r\n      }).then(response => {\r\n        props.history.length > 2\r\n          ? props.history.goBack()\r\n          : props.history.push(`/${props.asset}/post`);\r\n      });\r\n    }\r\n  };\r\n\r\n  const cancelCreation = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"page-header\">\r\n        <OakHeading\r\n          title=\"Create post\"\r\n          subtitle=\"Submit your question, and you will receive an answer shortly\"\r\n        />\r\n        <div className=\"action-header position-right\">\r\n          <OakButton action={submit} theme=\"primary\" variant=\"appear\">\r\n            <i className=\"material-icons\">double_arrow</i>Save\r\n          </OakButton>\r\n          {props.history.length > 2 && (\r\n            <OakButton\r\n              action={() => cancelCreation()}\r\n              theme=\"default\"\r\n              variant=\"appear\"\r\n            >\r\n              <i className=\"material-icons\">close</i>Cancel\r\n            </OakButton>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"create-post-item\">\r\n        <div className=\"user-form\">\r\n          <OakText\r\n            label=\"Title\"\r\n            data={state}\r\n            errorData={formErrors}\r\n            id=\"title\"\r\n            handleChange={e => handleChange(e)}\r\n          />\r\n          <OakEditor\r\n            label=\"Description\"\r\n            data={state}\r\n            errorData={formErrors}\r\n            id=\"description\"\r\n            handleChange={e => handleChange(e)}\r\n          />\r\n          <OakChipGroup\r\n            handleAddition={handleTagAddition}\r\n            handleRemoval={handleTagRemoval}\r\n            elements={globalTags}\r\n            data={view}\r\n            id=\"tags\"\r\n            label=\"Tags\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default CreateItem;\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport CreateItem from './CreateItem';\r\nimport OakPage from '../../../oakui/OakPage';\r\nimport OakSection from '../../../oakui/OakSection';\r\n\r\ninterface Props {\r\n  history: any;\r\n  asset: string;\r\n}\r\n\r\nconst CreatePost = (props: Props) => {\r\n  return (\r\n    <OakPage>\r\n      <OakSection>\r\n        <CreateItem history={props.history} asset={props.asset} />\r\n      </OakSection>\r\n    </OakPage>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","import React from 'react';\r\n\r\ninterface Props {\r\n  name: string;\r\n  history: any;\r\n  asset: string;\r\n}\r\n\r\nconst TagItem = (props: Props) => {\r\n  const viewTag = event => {\r\n    props.history.push(`/${props.asset}/post/tag?name=${props.name}`);\r\n  };\r\n  return (\r\n    <div className=\"tag-item\" onClick={viewTag}>\r\n      <div className=\"tag-content\">\r\n        <i className=\"material-icons\">local_offer</i>\r\n        {props.name}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagItem;\r\n","import React from 'react';\r\nimport Maybe from 'graphql/tsutils/Maybe';\r\nimport { PostTag } from '../../../types/graphql';\r\nimport TagItem from './TagItem';\r\n\r\ninterface Props {\r\n  tags: Array<Maybe<PostTag>>;\r\n  history: any;\r\n  asset: string;\r\n}\r\n\r\nconst TagContainer = (props: Props) => {\r\n  return (\r\n    <div className=\"tag-container\">\r\n      {props.tags.map((item: Maybe<PostTag>) => (\r\n        <div key={item?.id}>\r\n          {item && (\r\n            <TagItem\r\n              name={item.name || ''}\r\n              history={props.history}\r\n              asset={props.asset}\r\n            />\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagContainer;\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport OakPrompt from '../../../oakui/OakPrompt';\r\nimport { Post } from '../../../types/graphql';\r\nimport OakViewer from '../../../oakui/OakViewer';\r\nimport TagContainer from './TagContainer';\r\nimport { DELETE_POST } from '../../Types/PostSchema';\r\nimport OakHeading from '../../../oakui/OakHeading';\r\n\r\ninterface Props {\r\n  id: string;\r\n  history: any;\r\n  post: Post;\r\n  asset: string;\r\n}\r\n\r\nconst PostItem = (props: Props) => {\r\n  const [deletePost] = useMutation(DELETE_POST, {\r\n    variables: { id: props.post.id },\r\n  });\r\n  const [confirmDelete, setConfirmDelete] = useState(false);\r\n\r\n  const editPost = () => {\r\n    props.history.push(`/${props.asset}/post/edit?id=${props.id}`);\r\n  };\r\n\r\n  const goBack = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  const searchPost = () => {\r\n    props.history.push(`/${props.asset}/post/search`);\r\n  };\r\n\r\n  const deletePostPrompt = () => {\r\n    setConfirmDelete(true);\r\n  };\r\n\r\n  const deletePostdata = async () => {\r\n    deletePost().then(() => {\r\n      if (props.history.length > 2) {\r\n        goBack();\r\n      } else {\r\n        searchPost();\r\n      }\r\n    });\r\n  };\r\n\r\n  const getHeadingLinks = () => {\r\n    const links: any[] = [];\r\n    if (props.history.length > 2) {\r\n      links.push({\r\n        label: 'Go back',\r\n        icon: 'reply',\r\n        action: () => goBack(),\r\n      });\r\n    }\r\n    links.push({ label: 'Edit', icon: 'edit', action: () => editPost() });\r\n    links.push({\r\n      label: 'Delete',\r\n      icon: 'delete_outline',\r\n      action: () => deletePostPrompt(),\r\n    });\r\n    return links;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"view-post-item\">\r\n        <OakHeading\r\n          title={props.post.title || ''}\r\n          links={getHeadingLinks()}\r\n          linkSize=\"large\"\r\n        />\r\n        <TagContainer\r\n          tags={props.post.tags || []}\r\n          history={props.history}\r\n          asset={props.asset}\r\n        />\r\n        <OakViewer>{props.post.description}</OakViewer>\r\n      </div>\r\n      <OakPrompt\r\n        action={() => deletePostdata()}\r\n        visible={confirmDelete}\r\n        toggleVisibility={() => setConfirmDelete(!confirmDelete)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { Post } from '../../../types/graphql';\r\nimport {\r\n  ADD_POST_FEEDBACK,\r\n  REMOVE_POST_FEEDBACK,\r\n  GET_POST,\r\n} from '../../Types/PostSchema';\r\nimport { sendMessage } from '../../../events/MessageService';\r\n\r\ninterface Props {\r\n  post: Post;\r\n}\r\n\r\nconst FeedbackView = (props: Props) => {\r\n  const [addPostFeedback, { data: addedFeedback }] = useMutation(\r\n    ADD_POST_FEEDBACK\r\n  );\r\n  const [removePostFeedback, { data: removedFeedback }] = useMutation(\r\n    REMOVE_POST_FEEDBACK\r\n  );\r\n  const [providedFeedbacks, setProvidedFeedbacks] = useState<any[]>([]);\r\n\r\n  const feedback = type => {\r\n    if (providedFeedbacks.includes(type)) {\r\n      removePostFeedback({\r\n        variables: {\r\n          postId: props.post.id,\r\n          type,\r\n        },\r\n      }).then(() => {\r\n        sendMessage('notification', true, {\r\n          type: 'success',\r\n          message: 'You have withdrawn your feedback',\r\n        });\r\n      });\r\n    } else {\r\n      addPostFeedback({\r\n        variables: {\r\n          postId: props.post.id,\r\n          type,\r\n        },\r\n      }).then(() => {\r\n        sendMessage('notification', true, {\r\n          type: 'success',\r\n          message: 'Thank you for sharing your feedback',\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.post?.feedback) {\r\n      setProvidedFeedbacks(props.post.feedback.map((item: any) => item.type));\r\n    } else {\r\n      setProvidedFeedbacks([]);\r\n    }\r\n  }, [props.post.feedback]);\r\n\r\n  return (\r\n    <div className=\"action-footer position-right space-top-4 post-feedback align-horizontal\">\r\n      <div className=\"align-horizontal\">\r\n        <i\r\n          className={`material-icons helpful ${\r\n            providedFeedbacks.includes('helpful') ? ' active' : ''\r\n          }`}\r\n          onClick={() => feedback('helpful')}\r\n        >\r\n          thumb_up\r\n        </i>\r\n        <div className=\"typography-5\">{props.post.helpful}</div>\r\n      </div>\r\n      <div className=\"align-horizontal\">\r\n        <i\r\n          className={`material-icons not-helpful ${\r\n            providedFeedbacks.includes('notHelpful') ? ' active' : ''\r\n          }`}\r\n          onClick={() => feedback('notHelpful')}\r\n        >\r\n          thumb_down\r\n        </i>\r\n        <div className=\"typography-5\">{props.post.notHelpful}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackView;\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport OakEditor from '../../../../oakui/OakEditor';\r\nimport OakButton from '../../../../oakui/OakButton';\r\nimport { UPDATE_POST_COMMENT } from '../../../Types/PostSchema';\r\nimport { isEmptyOrSpaces, isEmptyAttributes } from '../../../Utils';\r\nimport { PostCommentPayload } from '../../../../types/graphql';\r\n\r\ninterface Props {\r\n  postId: string;\r\n  parentid?: string;\r\n  closeEdit: Function;\r\n}\r\n\r\nconst NewCommentItem = (props: Props) => {\r\n  const [createComment] = useMutation(UPDATE_POST_COMMENT);\r\n  const [state, setState] = useState({ comment: '' });\r\n  const [formErrors, setFormErrors] = useState<any>({\r\n    comment: '',\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const submit = () => {\r\n    const errorFields: any = { comment: '' };\r\n    if (isEmptyOrSpaces(state.comment)) {\r\n      errorFields.comment = 'Add comment to reply';\r\n    }\r\n    setFormErrors(errorFields);\r\n    if (isEmptyAttributes(errorFields)) {\r\n      const payload: PostCommentPayload = {\r\n        parentId: props.parentid,\r\n        postId: props.postId,\r\n        text: state.comment,\r\n      };\r\n      createComment({\r\n        variables: {\r\n          payload,\r\n        },\r\n      }).then(response => {\r\n        if (response.data.updatePostComment.id) {\r\n          props.closeEdit();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <OakEditor\r\n        data={state}\r\n        errorData={formErrors}\r\n        id=\"comment\"\r\n        handleChange={e => handleChange(e)}\r\n      />\r\n      <div className=\"action-header position-right\">\r\n        <OakButton\r\n          action={() => props.closeEdit()}\r\n          theme=\"default\"\r\n          variant=\"appear\"\r\n        >\r\n          <i className=\"material-icons\">close</i>Cancel\r\n        </OakButton>\r\n        <OakButton action={submit} theme=\"primary\" variant=\"appear\">\r\n          <i className=\"material-icons\">double_arrow</i>Save\r\n        </OakButton>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewCommentItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { PostComment, User } from '../../../../types/graphql';\r\nimport OakViewer from '../../../../oakui/OakViewer';\r\nimport { formatDateText } from '../../../Lib/DateUtils';\r\nimport { htmlToText } from '../../../Utils';\r\nimport OakAvatar from '../../../../oakui/OakAvatar';\r\n\r\ninterface Props {\r\n  parentComment: PostComment;\r\n  users: User[];\r\n}\r\n\r\nconst ParentCommentPreview = (props: Props) => {\r\n  const [showFullText, setShowFullText] = useState(false);\r\n  const [user, setUser] = useState<User | undefined>();\r\n\r\n  useEffect(() => {\r\n    setUser(\r\n      props.users?.find(item => item.id === props.parentComment?.createdBy)\r\n    );\r\n  }, [props.parentComment]);\r\n\r\n  return (\r\n    <div className=\"parent-comment-preview\">\r\n      <div className=\"parent-comment-preview-header\">\r\n        <div\r\n          className=\"hyperlink align-horizontal\"\r\n          onClick={() => setShowFullText(!showFullText)}\r\n        >\r\n          In reply to {`${user?.firstName} ${user?.lastName}`}\r\n          &apos;s post on {formatDateText(props.parentComment.createdAt)}\r\n        </div>\r\n        {!showFullText && (\r\n          <div className=\"one-liner\">\r\n            {htmlToText(props.parentComment.text)}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {showFullText && (\r\n        <div className=\"parent-comment-preview-content\">\r\n          <OakViewer>{props.parentComment.text}</OakViewer>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ParentCommentPreview;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { PostComment } from '../../../../types/graphql';\r\nimport {\r\n  ADD_POST_FEEDBACK,\r\n  REMOVE_POST_FEEDBACK,\r\n  GET_POST,\r\n  ADD_POST_COMMENT_FEEDBACK,\r\n  REMOVE_POST_COMMENT_FEEDBACK,\r\n} from '../../../Types/PostSchema';\r\nimport { sendMessage } from '../../../../events/MessageService';\r\n\r\ninterface Props {\r\n  comment: PostComment;\r\n}\r\n\r\nconst FeedbackView = (props: Props) => {\r\n  const [addPostCommentFeedback, { data: addedCommentFeedback }] = useMutation(\r\n    ADD_POST_COMMENT_FEEDBACK\r\n  );\r\n  const [\r\n    removePostCommentFeedback,\r\n    { data: removedCommentFeedback },\r\n  ] = useMutation(REMOVE_POST_COMMENT_FEEDBACK);\r\n  const [providedFeedbacks, setProvidedFeedbacks] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (props.comment?.feedback) {\r\n      setProvidedFeedbacks(\r\n        props.comment.feedback.map((item: any) => item.type)\r\n      );\r\n    } else {\r\n      setProvidedFeedbacks([]);\r\n    }\r\n  }, [props.comment.feedback]);\r\n\r\n  const feedback = type => {\r\n    if (providedFeedbacks.includes(type)) {\r\n      removePostCommentFeedback({\r\n        variables: {\r\n          commentId: props.comment.id,\r\n          type,\r\n        },\r\n      }).then(() => {\r\n        sendMessage('notification', true, {\r\n          type: 'success',\r\n          message: 'You have withdrawn your feedback',\r\n        });\r\n      });\r\n    } else {\r\n      addPostCommentFeedback({\r\n        variables: {\r\n          commentId: props.comment.id,\r\n          type,\r\n        },\r\n      }).then(() => {\r\n        sendMessage('notification', true, {\r\n          type: 'success',\r\n          message: 'Thank you for sharing your feedback',\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (props.comment?.feedback) {\r\n  //     setProvidedFeedbacks(\r\n  //       props.comment.feedback.map((item: any) => item.type)\r\n  //     );\r\n  //   } else {\r\n  //     setProvidedFeedbacks([]);\r\n  //   }\r\n  // }, [props.comment.feedback]);\r\n\r\n  return (\r\n    <div className=\"action-footer position-left comment-feedback align-horizontal\">\r\n      <div className=\"align-horizontal\">\r\n        <i\r\n          className={`material-icons helpful ${\r\n            providedFeedbacks.includes('helpful') ? ' active' : ''\r\n          }`}\r\n          onClick={() => feedback('helpful')}\r\n        >\r\n          thumb_up\r\n        </i>\r\n        <div className=\"typography-5\">{props.comment.helpful}</div>\r\n      </div>\r\n      <div className=\"align-horizontal\">\r\n        <i\r\n          className={`material-icons not-helpful ${\r\n            providedFeedbacks.includes('notHelpful') ? ' active' : ''\r\n          }`}\r\n          onClick={() => feedback('notHelpful')}\r\n        >\r\n          thumb_down\r\n        </i>\r\n        <div className=\"typography-5\">{props.comment.notHelpful}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackView;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { PostComment, PostCommentPayload } from '../../../../types/graphql';\r\nimport OakEditor from '../../../../oakui/OakEditor';\r\nimport OakButton from '../../../../oakui/OakButton';\r\nimport { UPDATE_POST_COMMENT } from '../../../Types/PostSchema';\r\nimport { isEmptyOrSpaces, isEmptyAttributes } from '../../../Utils';\r\n\r\ninterface Props {\r\n  postId: string;\r\n  comment: PostComment;\r\n  closeEdit: Function;\r\n}\r\nconst EditCommentItem = (props: Props) => {\r\n  const [updateComment] = useMutation(UPDATE_POST_COMMENT);\r\n  const [state, setState] = useState<any>({ comment: '' });\r\n  const [formErrors, setFormErrors] = useState<any>({\r\n    comment: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    setState({ comment: props.comment?.text });\r\n  }, [props.comment]);\r\n\r\n  const handleChange = event => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const submit = () => {\r\n    const errorFields: any = { comment: '' };\r\n    if (isEmptyOrSpaces(state.comment)) {\r\n      errorFields.comment = 'Add comment to reply';\r\n    }\r\n    setFormErrors(errorFields);\r\n    if (isEmptyAttributes(errorFields)) {\r\n      const payload: PostCommentPayload = {\r\n        id: props.comment.id,\r\n        parentId: props.comment.parentId,\r\n        postId: props.postId,\r\n        text: state.comment,\r\n      };\r\n      updateComment({\r\n        variables: {\r\n          payload,\r\n        },\r\n      }).then(response => {\r\n        if (response.data.updatePostComment.id) {\r\n          props.closeEdit();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <OakEditor\r\n        data={state}\r\n        errorData={formErrors}\r\n        id=\"comment\"\r\n        handleChange={e => handleChange(e)}\r\n      />\r\n      <div className=\"action-footer position-right\">\r\n        <OakButton action={props.closeEdit} theme=\"default\" variant=\"appear\">\r\n          <i className=\"material-icons\">close</i>Cancel\r\n        </OakButton>\r\n        <OakButton action={submit} theme=\"primary\" variant=\"appear\">\r\n          <i className=\"material-icons\">double_arrow</i>Save\r\n        </OakButton>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditCommentItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport {\r\n  MARK_POSTCOMMENT_AS_ANSWER,\r\n  UNMARK_POSTCOMMENT_AS_ANSWER,\r\n} from '../../../Types/PostSchema';\r\nimport { sendMessage } from '../../../../events/MessageService';\r\nimport { PostComment } from '../../../../types/graphql';\r\n\r\ninterface Props {\r\n  comment: PostComment;\r\n}\r\n\r\nconst MarkComment = (props: Props) => {\r\n  const [markAnswer] = useMutation(MARK_POSTCOMMENT_AS_ANSWER);\r\n  const [unMarkAnswer] = useMutation(UNMARK_POSTCOMMENT_AS_ANSWER);\r\n  const [isAnswer, setIsAnswer] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsAnswer(!!props.comment.isAnswer);\r\n  }, [props.comment.isAnswer]);\r\n\r\n  const answer = () => {\r\n    markAnswer({\r\n      variables: {\r\n        id: props.comment.id,\r\n        isAnswer,\r\n      },\r\n    }).then(() => {\r\n      sendMessage('notification', true, {\r\n        type: 'success',\r\n        message: 'You marked a comment as answer',\r\n      });\r\n    });\r\n  };\r\n\r\n  const removeAnswer = () => {\r\n    unMarkAnswer({\r\n      variables: {\r\n        id: props.comment.id,\r\n        isAnswer,\r\n      },\r\n    }).then(() => {\r\n      sendMessage('notification', true, {\r\n        type: 'success',\r\n        message: 'You removed a comment as answer',\r\n      });\r\n    });\r\n  };\r\n  return (\r\n    <div\r\n      className=\"mark-comment\"\r\n      onClick={() => (isAnswer ? removeAnswer() : answer())}\r\n    >\r\n      <div className={`mark-action ${isAnswer ? 'active' : ''}`}>\r\n        <div className=\"followers-count\">\r\n          <i className=\"material-icons-outlined\">check</i>\r\n        </div>\r\n        {isAnswer && <>Remove Answer</>}\r\n        {!isAnswer && <>Mark Answer</>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarkComment;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useApolloClient } from '@apollo/react-hooks';\r\nimport OakViewer from '../../../../oakui/OakViewer';\r\nimport NewCommentItem from './NewCommentItem';\r\nimport ParentCommentPreview from './ParentCommentPreview';\r\nimport './style.scss';\r\nimport { formatDateText } from '../../../Lib/DateUtils';\r\nimport { PostComment, User } from '../../../../types/graphql';\r\nimport FeedbackView from './FeedbackView';\r\nimport EditCommentItem from './EditCommentItem';\r\nimport { POST_COMMENT } from '../../../Types/PostSchema';\r\nimport OakAvatar from '../../../../oakui/OakAvatar';\r\nimport MarkComment from './MarkComment';\r\n\r\ninterface Props {\r\n  postId: string;\r\n  comment: PostComment;\r\n  comments?: PostComment[];\r\n  users: User[];\r\n}\r\nfunction ViewComment(props: Props) {\r\n  const gqlClient = useApolloClient();\r\n  const [actionType, setActionType] = useState('none');\r\n  const [parentComment, setParentComment] = useState<PostComment | undefined>();\r\n  const [user, setUser] = useState<User | undefined>();\r\n\r\n  useEffect(() => {\r\n    (async function anonymous() {\r\n      const matchingComment = props.comments?.find(\r\n        item => item.id === props.comment.parentId\r\n      );\r\n      setParentComment(matchingComment);\r\n      if (!matchingComment) {\r\n        const { data: response } = await gqlClient.query({\r\n          query: POST_COMMENT,\r\n          variables: { id: props.comment.parentId },\r\n        });\r\n        setParentComment(response?.postComment);\r\n      }\r\n\r\n      setUser(props.users?.find(item => item.id === props.comment?.createdBy));\r\n    })();\r\n  }, [props.comment]);\r\n\r\n  return (\r\n    <div className={`view-comment ${props.comment.isAnswer ? 'answer' : ''}`}>\r\n      <div className=\"view-comment-header\">\r\n        <div className=\"view-comment-meta\">\r\n          {user && (\r\n            <OakAvatar\r\n              firstName={user.firstName || ''}\r\n              lastName={user.lastName || ''}\r\n              showName\r\n              size=\"small\"\r\n            />\r\n          )}{' '}\r\n          replied on {formatDateText(props.comment?.createdAt)}\r\n        </div>\r\n        <div className=\"view-comment-actions\">\r\n          <MarkComment comment={props.comment} />\r\n          <div className=\"hyperlink-container\">\r\n            <i className=\"material-icons typography-6\">edit</i>\r\n            <div\r\n              className=\"hyperlink\"\r\n              onClick={() => setActionType('editcomment')}\r\n            >\r\n              Edit\r\n            </div>\r\n          </div>\r\n          <div className=\"hyperlink-container\">\r\n            <i className=\"material-icons typography-6\">reply</i>\r\n            <div className=\"hyperlink\" onClick={() => setActionType('reply')}>\r\n              Reply\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {['none', 'reply'].includes(actionType) && (\r\n        <>\r\n          {parentComment && (\r\n            <ParentCommentPreview\r\n              parentComment={parentComment}\r\n              users={props.users}\r\n            />\r\n          )}\r\n          <OakViewer>{props.comment?.text}</OakViewer>\r\n          {actionType === 'none' && (\r\n            <div className=\"action-footer position-between space-top-4\">\r\n              <FeedbackView comment={props.comment} />\r\n              {props.comment.isAnswer && (\r\n                <div className=\"align-horizontal accepted-answer-container\">\r\n                  <div className=\"accepted-answer-label typography-4\">\r\n                    Accepted answer\r\n                  </div>\r\n                  <i className=\"answered-answer-icon material-icons-outlined\">\r\n                    verified\r\n                  </i>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n      {actionType === 'reply' && (\r\n        <NewCommentItem\r\n          postId={props.postId}\r\n          closeEdit={() => setActionType('none')}\r\n          parentid={props.comment.id}\r\n        />\r\n      )}\r\n      {actionType === 'editcomment' && (\r\n        <EditCommentItem\r\n          postId={props.postId}\r\n          closeEdit={() => setActionType('none')}\r\n          comment={props.comment}\r\n        />\r\n      )}\r\n      {/* {actionType === 'markcomment' && <MarkComment postId={props.postId} />} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewComment;\r\n","import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport OakInfiniteScroll from '../../../../oakui/OakInfiniteScroll';\r\nimport { POST_COMMENTS } from '../../../Types/PostSchema';\r\nimport OakSpinner from '../../../../oakui/OakSpinner';\r\nimport { PostComment } from '../../../../types/graphql';\r\nimport ViewComment from './ViewComment';\r\nimport { USERS } from '../../../Types/schema';\r\n\r\ninterface Props {\r\n  postId: string;\r\n}\r\n\r\nconst CommentList = (props: Props) => {\r\n  const { loading, data, fetchMore } = useQuery(POST_COMMENTS, {\r\n    variables: {\r\n      postId: props.postId,\r\n      pageSize: 10,\r\n      pageNo: 0,\r\n    },\r\n    fetchPolicy: 'cache-and-network',\r\n  });\r\n  const { loading: usersLoading, data: usersData } = useQuery(USERS);\r\n\r\n  const fetchMoreComments = () => {\r\n    if (data?.postComments?.hasMore) {\r\n      fetchMore({\r\n        variables: {\r\n          pageNo: data?.postComments?.pageNo,\r\n        },\r\n        updateQuery: (prev: any, { fetchMoreResult }: any) => {\r\n          return {\r\n            postComments: {\r\n              ...prev.postComments,\r\n              results: [\r\n                ...prev.postComments.results,\r\n                ...fetchMoreResult.postComments.results,\r\n              ],\r\n              pageNo: fetchMoreResult.postComments.pageNo,\r\n              hasMore: fetchMoreResult.postComments.hasMore,\r\n            },\r\n          };\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <OakInfiniteScroll handleChange={fetchMoreComments} selector=\".oak-page\">\r\n      <div className=\"comment-list\">\r\n        {data?.postComments?.results?.map((item: PostComment) => (\r\n          <ViewComment\r\n            postId={props.postId}\r\n            comment={item}\r\n            comments={data.postComments?.results}\r\n            users={usersData?.users}\r\n            key={item.id}\r\n          />\r\n        ))}\r\n\r\n        {data?.postComments?.results?.length === 0 && (\r\n          <div className=\"typography-6\">No comments</div>\r\n        )}\r\n      </div>\r\n      <div>{loading ? <OakSpinner /> : ''}</div>\r\n    </OakInfiniteScroll>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n","import React, { useState } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport NewCommentItem from './NewCommentItem';\r\nimport CommentList from './CommentList';\r\nimport { POST_COMMENTS } from '../../../Types/PostSchema';\r\nimport './style.scss';\r\nimport OakSubheading from '../../../../oakui/OakSubheading';\r\n\r\ninterface Props {\r\n  postId: string;\r\n}\r\n\r\nconst CommentSection = (props: Props) => {\r\n  const { loading, data, fetchMore } = useQuery(POST_COMMENTS, {\r\n    variables: {\r\n      postId: props.postId,\r\n    },\r\n    fetchPolicy: 'network-only',\r\n  });\r\n  const [newComment, setNewComment] = useState(false);\r\n  const [viewComments, setViewComments] = useState(true);\r\n\r\n  const getSectionLinks = () => {\r\n    return [\r\n      {\r\n        label: 'New comment',\r\n        icon: 'add_comment',\r\n        action: () => setNewComment(!newComment),\r\n      },\r\n      {\r\n        label: viewComments ? 'Hide' : 'Show',\r\n        icon: viewComments ? 'expand_less' : 'expand_more',\r\n        action: () => setViewComments(!viewComments),\r\n      },\r\n    ];\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"section-header\">\r\n        <OakSubheading\r\n          title={`Comments (${data?.postComments?.results?.length})`}\r\n          links={getSectionLinks()}\r\n          linkSize=\"large\"\r\n        />\r\n      </div>\r\n\r\n      {newComment && (\r\n        <NewCommentItem\r\n          postId={props.postId}\r\n          closeEdit={() => setNewComment(false)}\r\n        />\r\n      )}\r\n      <div className={viewComments ? 'comment-list show' : 'comment-list hide'}>\r\n        <CommentList postId={props.postId} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommentSection;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { Post } from '../../../types/graphql';\r\nimport { FOLLOW_POST, UNFOLLOW_POST } from '../../Types/PostSchema';\r\nimport { sendMessage } from '../../../events/MessageService';\r\n\r\ninterface Props {\r\n  post: Post;\r\n}\r\nconst FollowerView = (props: Props) => {\r\n  const authorization = useSelector(state => state.authorization);\r\n  const [addFollower] = useMutation(FOLLOW_POST);\r\n  const [removeFollower] = useMutation(UNFOLLOW_POST);\r\n  const [isFollowing, setIsFollowing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsFollowing(\r\n      !!props.post.followerList?.find(item => item?.userId === authorization.id)\r\n    );\r\n  }, [props.post.followerList]);\r\n\r\n  const follow = () => {\r\n    addFollower({\r\n      variables: {\r\n        postId: props.post.id,\r\n      },\r\n    }).then(() => {\r\n      sendMessage('notification', true, {\r\n        type: 'success',\r\n        message: 'You are now following the post',\r\n      });\r\n    });\r\n  };\r\n\r\n  const unfollow = () => {\r\n    removeFollower({\r\n      variables: {\r\n        postId: props.post.id,\r\n      },\r\n    }).then(() => {\r\n      sendMessage('notification', true, {\r\n        type: 'success',\r\n        message: 'You are no more following the post',\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"follower-view\"\r\n      onClick={() => (isFollowing ? unfollow() : follow())}\r\n    >\r\n      <div className={`follow-action ${isFollowing ? 'active' : ''}`}>\r\n        <div className=\"followers-count\">\r\n          {/* {props.post.followers} */}\r\n          <i className=\"material-icons-outlined\">rss_feed</i>\r\n        </div>\r\n        {isFollowing && <>Stop following</>}\r\n        {!isFollowing && <>Follow</>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FollowerView;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\ninterface Props {\r\n  label: string;\r\n  icon: string;\r\n  color:\r\n    | 'primary'\r\n    | 'secondary'\r\n    | 'tertiary'\r\n    | 'success'\r\n    | 'warning'\r\n    | 'failure';\r\n}\r\n\r\nconst StatusChip = (props: Props) => {\r\n  return (\r\n    <div className=\"status-chip-container\">\r\n      <div className={`status-chip ${props.color}`}>\r\n        <i className=\"material-icons\">{props.icon}</i>\r\n        {props.label}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatusChip;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { Post } from '../../../types/graphql';\r\nimport { FOLLOW_POST, UNFOLLOW_POST } from '../../Types/PostSchema';\r\nimport { sendMessage } from '../../../events/MessageService';\r\nimport StatusChip from '../../Common/StatusChip';\r\nimport { days, formatDateText } from '../../Lib/DateUtils';\r\n\r\ninterface Props {\r\n  post: Post;\r\n}\r\nconst StatusView = (props: Props) => {\r\n  return (\r\n    <div className=\"post-status-view\">\r\n      {props.post.isAnswered && (\r\n        <div className=\"post-status\">\r\n          <StatusChip label=\"Closed\" color=\"success\" icon=\"check_circle\" />\r\n          <div className=\"typography-4 post-status-label desktop-only\">\r\n            {`Answered on ${formatDateText(props.post.answeredOn)}`}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {!props.post.isAnswered && (\r\n        <div className=\"post-status\">\r\n          <StatusChip label=\"Open\" color=\"failure\" icon=\"help\" />\r\n          <div className=\"typography-4 post-status-label desktop-only\">\r\n            {`Asked ${Math.round(\r\n              Math.abs(days(props.post.createdAt))\r\n            )} days ago`}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatusView;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, connect } from 'react-redux';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport './style.scss';\r\nimport PostItem from './PostItem';\r\nimport { GET_POST } from '../../Types/PostSchema';\r\nimport OakButton from '../../../oakui/OakButton';\r\nimport FeedbackView from './FeedbackView';\r\nimport OakSpinner from '../../../oakui/OakSpinner';\r\nimport CommentSection from './CommentSection';\r\nimport StatusChip from '../../Common/StatusChip';\r\nimport { days } from '../../Lib/DateUtils';\r\nimport FollowerView from './FollowerView';\r\nimport StatusView from './StatusView';\r\nimport OakPage from '../../../oakui/OakPage';\r\nimport OakSection from '../../../oakui/OakSection';\r\n\r\ninterface Props {\r\n  location: any;\r\n  history: any;\r\n  asset: string;\r\n}\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst ViewPost = (props: Props) => {\r\n  const authorization = useSelector(state => state.authorization);\r\n  const [urlParam, setUrlParam] = useState({\r\n    id: '',\r\n  });\r\n  const { loading, error, data } = useQuery(GET_POST, {\r\n    variables: { id: urlParam.id },\r\n    fetchPolicy: 'cache-and-network',\r\n  });\r\n\r\n  useEffect(() => {\r\n    setUrlParam(queryString.parse(props.location.search));\r\n  }, [props.location.search]);\r\n\r\n  return (\r\n    <OakPage>\r\n      <OakSection>\r\n        {loading && <OakSpinner />}\r\n        {!loading && !error && (\r\n          <>\r\n            <div className=\"post-status-header\">\r\n              <StatusView post={data.post} />\r\n              <FollowerView post={data.post} />\r\n            </div>\r\n            <PostItem\r\n              history={props.history}\r\n              id={urlParam.id}\r\n              asset={props.asset}\r\n              post={data.post}\r\n            />\r\n            <FeedbackView post={data.post} />\r\n          </>\r\n        )}\r\n        {error && <div className=\"typography-6\">Post does not exist</div>}\r\n      </OakSection>\r\n\r\n      <OakSection>\r\n        <div className=\"comment-section-wrapper\">\r\n          <CommentSection postId={urlParam.id} />\r\n        </div>\r\n      </OakSection>\r\n    </OakPage>\r\n  );\r\n};\r\n\r\nexport default ViewPost;\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport { PostTagCloud } from '../../../../types/graphql';\r\n\r\ninterface Props {\r\n  tag: PostTagCloud;\r\n  handleClick: any;\r\n}\r\n\r\nconst TagLink = (props: Props) => {\r\n  return (\r\n    <div className=\"tag-link\">\r\n      <div className=\"hyperlink-drama\" onClick={props.handleClick}>\r\n        {props.tag.name}{' '}\r\n      </div>\r\n      <div>{`\\u00A0(${props.tag.count})`}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagLink;\r\n","import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport './style.scss';\r\nimport { POST_TAG_CLOUD } from '../../../Types/PostSchema';\r\nimport TagLink from './TagLink';\r\nimport OakHeading from '../../../../oakui/OakHeading';\r\nimport OakSection from '../../../../oakui/OakSection';\r\n\r\ninterface Props {\r\n  handleChange: Function;\r\n  history: any;\r\n  asset: string;\r\n}\r\n\r\nconst TagSection = (props: Props) => {\r\n  const { data } = useQuery(POST_TAG_CLOUD, {\r\n    fetchPolicy: 'cache-and-network',\r\n  });\r\n\r\n  const searchPost = () => {\r\n    props.history.push(`/${props.asset}/post/search`);\r\n  };\r\n\r\n  return (\r\n    <OakSection>\r\n      <OakHeading\r\n        title=\"Posts by tag\"\r\n        links={[{ label: 'Or Search instead', action: () => searchPost() }]}\r\n      />\r\n      <div className=\"tag-section\">\r\n        {data?.postTagCloud?.map(item => (\r\n          <TagLink\r\n            key={item.name}\r\n            tag={item}\r\n            handleClick={() => props.handleChange(item.name)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </OakSection>\r\n  );\r\n};\r\n\r\nexport default TagSection;\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport { Post } from '../../types/graphql';\r\nimport { formatDateText } from '../Lib/DateUtils';\r\nimport { htmlToText } from '../Utils';\r\n\r\ninterface Props {\r\n  post: Post;\r\n  history: any;\r\n  asset: string;\r\n}\r\n\r\nconst PostLink = (props: Props) => {\r\n  const viewPost = () => {\r\n    props.history.push(`/${props.asset}/post/view?id=${props.post.id}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"post-link\">\r\n      <div className=\"post-title typography-7\">\r\n        <div className=\"link hyperlink-drama\" onClick={viewPost}>\r\n          {props.post?.title}\r\n        </div>\r\n      </div>\r\n      <div className=\"post-meta\">\r\n        {props.post?.isAnswered && (\r\n          <div className=\"answered-post\">\r\n            <i className=\"material-icons-outlined\">verified</i>\r\n          </div>\r\n        )}\r\n        {props.post?.createdAt && (\r\n          <div className=\"post-date\">\r\n            Published on {formatDateText(props.post?.createdAt)}\r\n          </div>\r\n        )}\r\n        {props.post?.views > 0 && (\r\n          <div className=\"post-statistic-chip\">\r\n            {`${props.post?.views} ${\r\n              props.post?.views === 1 ? 'view' : 'views'\r\n            }`}\r\n          </div>\r\n        )}\r\n        {props.post?.comments > 0 && (\r\n          <div className=\"post-statistic-chip comments\">\r\n            {props.post?.comments}\r\n            <i className=\"material-icons\">forum</i>\r\n          </div>\r\n        )}\r\n        {props.post?.helpful > 0 && (\r\n          <div className=\"post-statistic-chip helpful\">\r\n            {props.post?.helpful}\r\n            <i className=\"material-icons\">thumb_up</i>\r\n          </div>\r\n        )}\r\n        {props.post?.notHelpful > 0 && (\r\n          <div className=\"post-statistic-chip not-helpful\">\r\n            {props.post?.notHelpful}\r\n            <i className=\"material-icons\">thumb_down</i>\r\n          </div>\r\n        )}\r\n        {props.post?.followers > 0 && (\r\n          <div className=\"post-statistic-chip follower\">\r\n            {props.post?.followers}\r\n            <i className=\"material-icons\">rss_feed</i>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"post-description typography-4 three-liner\">\r\n        {htmlToText(props.post.description)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostLink;\r\n","import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport './style.scss';\r\nimport { POSTS_BY_TAG } from '../../../Types/PostSchema';\r\nimport OakInfiniteScroll from '../../../../oakui/OakInfiniteScroll';\r\nimport PostLink from '../../PostLink';\r\nimport { Post, PostTag } from '../../../../types/graphql';\r\nimport OakSpinner from '../../../../oakui/OakSpinner';\r\nimport OakHeading from '../../../../oakui/OakHeading';\r\nimport OakSection from '../../../../oakui/OakSection';\r\n\r\ninterface Props {\r\n  tag: string;\r\n  asset: string;\r\n  history: any;\r\n}\r\n\r\nconst PostSection = (props: Props) => {\r\n  const { loading, error, data, fetchMore, refetch } = useQuery(POSTS_BY_TAG, {\r\n    variables: { tag: props.tag, pageSize: 10, pageNo: 0 },\r\n    fetchPolicy: 'cache-and-network',\r\n  });\r\n\r\n  const fetchMorePosts = () => {\r\n    if (data?.postsByTag?.hasMore) {\r\n      fetchMore({\r\n        variables: {\r\n          pageNo: data?.postsByTag?.pageNo,\r\n        },\r\n        updateQuery: (prev: any, { fetchMoreResult }: any) => {\r\n          return {\r\n            postsByTag: {\r\n              ...prev.postsByTag,\r\n              results: [\r\n                ...prev.postsByTag.results,\r\n                ...fetchMoreResult.postsByTag.results,\r\n              ],\r\n              pageNo: fetchMoreResult.postsByTag.pageNo,\r\n              hasMore: fetchMoreResult.postsByTag.hasMore,\r\n            },\r\n          };\r\n        },\r\n      });\r\n    }\r\n  };\r\n  const goBack = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  const viewByTags = () => {\r\n    props.history.push(`/${props.asset}/post/tag`);\r\n  };\r\n\r\n  const getHeadingLinks = () => {\r\n    return [\r\n      {\r\n        label: 'Go back',\r\n        icon: 'reply',\r\n        action: () => goBack(),\r\n      },\r\n      {\r\n        label: 'See other tags',\r\n        icon: 'local_offer',\r\n        action: () => viewByTags(),\r\n      },\r\n    ];\r\n  };\r\n\r\n  return (\r\n    <OakSection>\r\n      <OakHeading\r\n        title=\"Posts by tag\"\r\n        subtitle={`Showing posts for tag \"${props.tag}\"`}\r\n        links={getHeadingLinks()}\r\n      />\r\n      <div className=\"tag-post-section\">\r\n        <OakInfiniteScroll handleChange={fetchMorePosts} selector=\".oak-page\">\r\n          <div className=\"search-results-section\">\r\n            <div className=\"search-results-container\">\r\n              {data?.postsByTag?.results?.map((item: PostTag, index) => (\r\n                <div key={item?.post?.id || index}>\r\n                  {item?.post && (\r\n                    <PostLink\r\n                      post={item.post}\r\n                      asset={props.asset}\r\n                      history={props.history}\r\n                    />\r\n                  )}\r\n                </div>\r\n              ))}\r\n              {/* {data?.postsByTag?.results?.length === 0 &&\r\n              props.text &&\r\n              !loading && (\r\n                <AlternateSection history={props.history} asset={props.asset} />\r\n              )} */}\r\n            </div>\r\n            <div>{loading ? <OakSpinner /> : ''}</div>\r\n          </div>\r\n        </OakInfiniteScroll>\r\n      </div>\r\n    </OakSection>\r\n  );\r\n};\r\n\r\nexport default PostSection;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './style.scss';\r\nimport TagSection from './TagSection';\r\nimport PostSection from './PostSection';\r\nimport OakPage from '../../../../oakui/OakPage';\r\n\r\ninterface Props {\r\n  setProfile: Function;\r\n  profile: any;\r\n  match: any;\r\n  location: any;\r\n  history: any;\r\n  asset: string;\r\n}\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst PostsByTag = (props: Props) => {\r\n  const [urlParam, setUrlParam] = useState({\r\n    name: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    setUrlParam(queryString.parse(props.location.search));\r\n  }, [props.location.search]);\r\n\r\n  const handleChange = name => {\r\n    props.history.push(`/${props.asset}/post/tag?name=${name}`);\r\n  };\r\n\r\n  return (\r\n    <OakPage>\r\n      {/* <div className=\"typography-4 align-horizontal\">\r\n            Find your questions answered, from the knowledge base. If you\r\n            don&apos;t get your desired answers, you can post your question for\r\n            response from our customer support team or a community member\r\n          </div> */}\r\n      {!urlParam.name && (\r\n        <TagSection\r\n          handleChange={handleChange}\r\n          asset={props.asset}\r\n          history={props.history}\r\n        />\r\n      )}\r\n      {urlParam.name && (\r\n        <PostSection\r\n          tag={urlParam.name}\r\n          asset={props.asset}\r\n          history={props.history}\r\n        />\r\n      )}\r\n    </OakPage>\r\n  );\r\n};\r\n\r\nexport default PostsByTag;\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport OakSubheading from '../../../../oakui/OakSubheading';\r\n\r\ninterface Props {\r\n  asset: string;\r\n  history: any;\r\n}\r\n\r\nconst AlternateSection = (props: Props) => {\r\n  const browsePost = () => {\r\n    props.history.push(`/${props.asset}/post/browse`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-alternate-section\">\r\n      <div className=\"typography-4 no-post-match-message\">\r\n        No posts found matching your search criteria\r\n      </div>\r\n      <OakSubheading\r\n        title=\"Here is what you can do next\"\r\n        subtitle=\"Other ways of getting answer\"\r\n      />\r\n      <div className=\"no-post-match-action\">\r\n        <div className=\"hyperlink\" onClick={browsePost}>\r\n          Browse posts by timeline\r\n        </div>\r\n        <div className=\"hyperlink\" onClick={browsePost}>\r\n          Submit your question\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlternateSection;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport './style.scss';\r\nimport { Post } from '../../../../types/graphql';\r\nimport OakInfiniteScroll from '../../../../oakui/OakInfiniteScroll';\r\nimport OakSpinner from '../../../../oakui/OakSpinner';\r\nimport PostLink from '../../PostLink';\r\nimport { SEARCH_POSTS } from '../../../Types/PostSchema';\r\nimport OakText from '../../../../oakui/OakText';\r\nimport AlternateSection from './AlternateSection';\r\nimport OakSubheading from '../../../../oakui/OakSubheading';\r\n\r\ninterface Props {\r\n  asset: string;\r\n  history: any;\r\n  text: string;\r\n  handleSearchTextChange: Function;\r\n}\r\n\r\nconst SearchSection = (props: Props) => {\r\n  const [state, setState] = useState({ text: '' });\r\n\r\n  const { loading, error, data, fetchMore, refetch } = useQuery(SEARCH_POSTS, {\r\n    variables: { text: props.text, pageSize: 10, pageNo: 0 },\r\n    // fetchPolicy: 'cache-and-network',\r\n  });\r\n\r\n  useEffect(() => {\r\n    setState({ text: props.text || '' });\r\n    refetch();\r\n  }, [props.text]);\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    if (state.text) {\r\n      props.handleSearchTextChange(state.text);\r\n    }\r\n  };\r\n\r\n  const fetchMorePosts = () => {\r\n    if (data?.searchPosts?.hasMore) {\r\n      fetchMore({\r\n        variables: {\r\n          pageNo: data?.searchPosts?.pageNo,\r\n        },\r\n        updateQuery: (prev: any, { fetchMoreResult }: any) => {\r\n          return {\r\n            searchPosts: {\r\n              ...prev.searchPosts,\r\n              results: [\r\n                ...prev.searchPosts.results,\r\n                ...fetchMoreResult.searchPosts.results,\r\n              ],\r\n              pageNo: fetchMoreResult.searchPosts.pageNo,\r\n              hasMore: fetchMoreResult.searchPosts.hasMore,\r\n            },\r\n          };\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setState({ ...state, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-section\">\r\n      <form method=\"GET\" onSubmit={onSubmit} noValidate>\r\n        <OakText\r\n          data={state}\r\n          id=\"text\"\r\n          handleChange={handleChange}\r\n          label=\"Type your question\"\r\n        />\r\n      </form>\r\n      <OakInfiniteScroll handleChange={fetchMorePosts} selector=\".oak-page\">\r\n        <div className=\"search-results-section\">\r\n          <div className=\"search-results-container\">\r\n            {data?.searchPosts?.results?.length > 0 && (\r\n              <OakSubheading\r\n                title=\"Search results\"\r\n                subtitle={`Showing results for \"${props.text}\"`}\r\n              />\r\n            )}\r\n            {data?.searchPosts?.results?.map((item: Post) => (\r\n              <PostLink\r\n                key={item.id}\r\n                post={item}\r\n                asset={props.asset}\r\n                history={props.history}\r\n              />\r\n            ))}\r\n            {data?.searchPosts?.results?.length === 0 &&\r\n              props.text &&\r\n              !loading && (\r\n                <AlternateSection history={props.history} asset={props.asset} />\r\n              )}\r\n          </div>\r\n          <div>{loading ? <OakSpinner /> : ''}</div>\r\n        </div>\r\n      </OakInfiniteScroll>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchSection;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './style.scss';\r\nimport SearchSection from './SearchSection';\r\nimport OakHeading from '../../../../oakui/OakHeading';\r\nimport OakPage from '../../../../oakui/OakPage';\r\nimport OakSection from '../../../../oakui/OakSection';\r\n\r\ninterface Props {\r\n  setProfile: Function;\r\n  profile: any;\r\n  match: any;\r\n  location: any;\r\n  history: any;\r\n  asset: string;\r\n}\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst SearchPost = (props: Props) => {\r\n  const [urlParam, setUrlParam] = useState({\r\n    text: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    setUrlParam(queryString.parse(props.location.search));\r\n  }, [props.location.search]);\r\n\r\n  const browsePost = () => {\r\n    props.history.push(`/${props.asset}/post/browse`);\r\n  };\r\n\r\n  const handleSearchTextChange = text => {\r\n    props.history.push(`/${props.asset}/post/search?text=${text}`);\r\n  };\r\n\r\n  return (\r\n    <OakPage>\r\n      <OakSection>\r\n        <div className=\"browse-post\">\r\n          <OakHeading\r\n            title=\"Search posts\"\r\n            links={[\r\n              {\r\n                label: 'Or Browse by timeline instead',\r\n                action: () => browsePost(),\r\n              },\r\n            ]}\r\n          />\r\n          {/* <div className=\"typography-4 align-horizontal\">\r\n            Find your questions answered, from the knowledge base. If you\r\n            don&apos;t get your desired answers, you can post your question for\r\n            response from our customer support team or a community member\r\n          </div> */}\r\n          <SearchSection\r\n            asset={props.asset}\r\n            history={props.history}\r\n            text={urlParam.text}\r\n            handleSearchTextChange={handleSearchTextChange}\r\n          />\r\n        </div>\r\n      </OakSection>\r\n    </OakPage>\r\n  );\r\n};\r\n\r\nexport default SearchPost;\r\n","import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport './style.scss';\r\nimport { Post } from '../../../../types/graphql';\r\nimport OakInfiniteScroll from '../../../../oakui/OakInfiniteScroll';\r\nimport OakSpinner from '../../../../oakui/OakSpinner';\r\nimport PostLink from '../../PostLink';\r\nimport OakButton from '../../../../oakui/OakButton';\r\nimport { LIST_POSTS } from '../../../Types/PostSchema';\r\nimport OakSubheading from '../../../../oakui/OakSubheading';\r\n\r\ninterface Props {\r\n  history: any;\r\n  asset: string;\r\n}\r\n\r\nconst PostSection = (props: Props) => {\r\n  const { loading, data, fetchMore } = useQuery(LIST_POSTS, {\r\n    variables: { pageSize: 10, pageNo: 0 },\r\n    fetchPolicy: 'cache-and-network',\r\n  });\r\n\r\n  const fetchMorePosts = () => {\r\n    if (data?.posts?.hasMore) {\r\n      fetchMore({\r\n        variables: {\r\n          pageNo: data?.posts?.pageNo,\r\n        },\r\n        updateQuery: (prev: any, { fetchMoreResult }: any) => {\r\n          return {\r\n            posts: {\r\n              ...prev.posts,\r\n              results: [\r\n                ...prev.posts.results,\r\n                ...fetchMoreResult.posts.results,\r\n              ],\r\n              pageNo: fetchMoreResult.posts.pageNo,\r\n              hasMore: fetchMoreResult.posts.hasMore,\r\n            },\r\n          };\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const createPostLink = event => {\r\n    props.history.push(`/${props.asset}/post/create`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"section-header\">\r\n        <OakSubheading title=\"Posts\" />\r\n        <div>\r\n          <OakButton theme=\"primary\" variant=\"regular\" action={createPostLink}>\r\n            New post\r\n          </OakButton>\r\n        </div>\r\n      </div>\r\n      <OakInfiniteScroll handleChange={fetchMorePosts} selector=\".oak-page\">\r\n        <div className=\"post-section\">\r\n          <div className=\"post-list-container\">\r\n            {data?.posts?.results?.map((item: Post) => (\r\n              <PostLink\r\n                key={item.id}\r\n                post={item}\r\n                asset={props.asset}\r\n                history={props.history}\r\n              />\r\n            ))}\r\n            {data?.posts?.results?.length === 0 && (\r\n              <div className=\"typography-6\">No posts</div>\r\n            )}\r\n          </div>\r\n          <div>{loading ? <OakSpinner /> : ''}</div>\r\n        </div>\r\n      </OakInfiniteScroll>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostSection;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './style.scss';\r\nimport PostSection from './PostSection';\r\nimport OakHeading from '../../../../oakui/OakHeading';\r\nimport OakPage from '../../../../oakui/OakPage';\r\nimport OakSection from '../../../../oakui/OakSection';\r\n\r\ninterface Props {\r\n  setProfile: Function;\r\n  profile: any;\r\n  history: any;\r\n  asset: string;\r\n}\r\n\r\nconst BrowsePost = (props: Props) => {\r\n  const searchPost = () => {\r\n    props.history.push(`/${props.asset}/post/search`);\r\n  };\r\n\r\n  return (\r\n    <OakPage>\r\n      <OakSection>\r\n        <div className=\"browse-post\">\r\n          <OakHeading\r\n            title=\"Browse posts by timeline\"\r\n            links={[{ label: 'Or search instead', action: () => searchPost() }]}\r\n          />\r\n          <div className=\"typography-4\">\r\n            Here you can explore the posts in forum, by publication month of the\r\n            post\r\n          </div>\r\n          <div className=\"section-close\" />\r\n          <PostSection history={props.history} asset={props.asset} />\r\n        </div>\r\n      </OakSection>\r\n    </OakPage>\r\n  );\r\n};\r\n\r\nexport default BrowsePost;\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport OakButton from '../../../oakui/OakButton';\r\nimport OakHeading from '../../../oakui/OakHeading';\r\nimport OakPage from '../../../oakui/OakPage';\r\nimport OakSection from '../../../oakui/OakSection';\r\n\r\ninterface Props {\r\n  setProfile: Function;\r\n  profile: any;\r\n  match: any;\r\n  location: any;\r\n  history: any;\r\n  asset: string;\r\n}\r\n\r\nconst PostHome = (props: Props) => {\r\n  const browsePost = event => {\r\n    props.history.push(`/${props.asset}/post/browse`);\r\n  };\r\n\r\n  const searchPost = event => {\r\n    props.history.push(`/${props.asset}/post/search`);\r\n  };\r\n\r\n  const viewByTags = event => {\r\n    props.history.push(`/${props.asset}/post/tag`);\r\n  };\r\n\r\n  const createPost = event => {\r\n    props.history.push(`/${props.asset}/post/create`);\r\n  };\r\n\r\n  return (\r\n    <OakPage>\r\n      <OakSection>\r\n        <OakHeading\r\n          title=\"Customer support forum\"\r\n          subtitle=\"Connecting seekers, contributors and customer support\"\r\n        />\r\n        <div className=\"typography-4 space-bottom-4\">\r\n          <ol>\r\n            <div className=\"typography-6\">\r\n              Report a problem and wait for a solution\r\n            </div>\r\n            <li>Post your problem</li>\r\n            <li>A customer support should respond to you with a solution</li>\r\n            <li>\r\n              A community member like you would provide a solution, if they know\r\n              the answer\r\n            </li>\r\n            <li>\r\n              Either case, you should receive an email notification once someone\r\n              responds to your post\r\n            </li>\r\n          </ol>\r\n          <ol>\r\n            <div className=\"typography-6 space-top-2\">\r\n              Search for already answered posts or similar posts\r\n            </div>\r\n            <li>Search posts that are similar to your problem</li>\r\n            <li>\r\n              Find an instant answer based on the already answered problem\r\n            </li>\r\n          </ol>\r\n        </div>\r\n        <div className=\"action-header\">\r\n          <OakButton theme=\"primary\" variant=\"appear\" action={searchPost}>\r\n            Search forum\r\n          </OakButton>\r\n          <OakButton theme=\"primary\" variant=\"appear\" action={browsePost}>\r\n            Browse by timeline\r\n          </OakButton>\r\n          <OakButton theme=\"primary\" variant=\"appear\" action={viewByTags}>\r\n            View by tags\r\n          </OakButton>\r\n        </div>\r\n        <div className=\"space-top-2 space-bottom-2 action-header\">or</div>\r\n        <div className=\"action-header\">\r\n          <OakButton theme=\"secondary\" variant=\"drama\" action={createPost}>\r\n            Post your problem\r\n          </OakButton>\r\n        </div>\r\n      </OakSection>\r\n    </OakPage>\r\n  );\r\n};\r\n\r\nexport default PostHome;\r\n","import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { GET_ASSET } from '../../Types/schema';\r\nimport OakViewer from '../../../oakui/OakViewer';\r\nimport OakHeading from '../../../oakui/OakHeading';\r\nimport OakPage from '../../../oakui/OakPage';\r\nimport OakSection from '../../../oakui/OakSection';\r\n\r\ninterface Props {\r\n  location: any;\r\n  search: string;\r\n}\r\nconst queryString = require('query-string');\r\n\r\nconst AssetCreateSuccess = (props: Props) => {\r\n  const { loading, error, data } = useQuery(GET_ASSET, {\r\n    variables: {\r\n      assetId: queryString.parse(props.location.search).id,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <OakPage>\r\n      <OakSection>\r\n        <div className=\"view-asset-item\">\r\n          <OakHeading title=\"Asset details\" />\r\n          {!loading && !error && (\r\n            <>\r\n              <div className=\"typography-5 align-horizontal\">\r\n                Asset Id:\r\n                <OakViewer>{data.asset.assetId}</OakViewer>\r\n              </div>\r\n\r\n              <div className=\"typography-5 align-horizontal\">\r\n                Asset Name:\r\n                <OakViewer>{data.asset.name}</OakViewer>\r\n              </div>\r\n\r\n              <div className=\"typography-5 \">\r\n                Asset Description:\r\n                <OakViewer>{data.asset.description}</OakViewer>\r\n              </div>\r\n              <div className=\"typography-5 align-horizontal\">\r\n                JWT Password:\r\n                <OakViewer>{data.asset.jwtPassword}</OakViewer>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </OakSection>\r\n    </OakPage>\r\n  );\r\n};\r\n\r\nexport default AssetCreateSuccess;\r\n","import React from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport OakPage from '../../../oakui/OakPage';\r\nimport OakSection from '../../../oakui/OakSection';\r\nimport OakSpinner from '../../../oakui/OakSpinner';\r\nimport { MY_POSTS } from '../../Types/PostSchema';\r\nimport OakHeading from '../../../oakui/OakHeading';\r\nimport PostLink from '../PostLink';\r\nimport './style.scss';\r\n\r\ninterface Props {\r\n  history: any;\r\n  asset: string;\r\n}\r\n\r\nconst MyPosts = (props: Props) => {\r\n  const { loading, error, data } = useQuery(MY_POSTS, {\r\n    variables: { pageSize: 10, pageNo: 0 },\r\n    fetchPolicy: 'cache-and-network',\r\n  });\r\n\r\n  return (\r\n    <OakPage>\r\n      <OakSection>\r\n        <OakHeading\r\n          title=\"My posts\"\r\n          subtitle=\"Posts submitted by me. Posts that I am following\"\r\n        />\r\n        {loading && <OakSpinner />}\r\n        {!loading && !error && (\r\n          <div className=\"my-posts\">\r\n            {data.myPosts.results.map(item => (\r\n              <PostLink\r\n                post={item}\r\n                asset={props.asset}\r\n                history={props.history}\r\n                key={item.id}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n        {error && <div className=\"typography-6\">Post does not exist</div>}\r\n      </OakSection>\r\n    </OakPage>\r\n  );\r\n};\r\nexport default MyPosts;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, connect } from 'react-redux';\r\n\r\nimport { InMemoryCache } from 'apollo-boost';\r\nimport ApolloClient from 'apollo-client';\r\nimport { createHttpLink } from 'apollo-link-http';\r\nimport { setContext } from 'apollo-link-context';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport { Route } from 'react-router-dom';\r\nimport './style.scss';\r\nimport { HashRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { withCookies } from 'react-cookie';\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport Home from '../Home';\r\nimport OaLogin from '../Auth/OaLogin';\r\nimport Landing from '../Landing';\r\nimport { getUser, addUser } from '../../actions/UserActions';\r\nimport { getProfile, setProfile } from '../../actions/ProfileActions';\r\n\r\nimport Notification from '../Notification';\r\nimport Navigation from '../Navigation';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport Tenant from '../Tenant';\r\nimport ArticleHome from '../Article/ArticleHome';\r\nimport OakRouteGraph from '../Auth/OakRouteGraph';\r\nimport Unauthorized from '../Auth/Unauthorized';\r\nimport CreateArticle from '../Article/CreateArticle';\r\nimport ViewArticle from '../Article/ViewArticle';\r\nimport EditArticle from '../Article/EditArticle';\r\nimport BrowseArticle from '../Article/ArticleHome/BrowseArticle';\r\nimport SearchArticle from '../Article/ArticleHome/SearchArticle';\r\nimport ArticlesByTag from '../Article/ArticleHome/ArticlesByTag';\r\nimport CreateAsset from '../Asset/CreateAsset/index';\r\nimport ViewAsset from '../Asset/ViewAsset/index';\r\nimport EditAsset from '../Asset/EditAsset';\r\nimport OneAuth from '../Login/OneAuth/index';\r\nimport Email from '../Login/Email/index';\r\nimport Login from '../Login/index';\r\nimport ExternLogin from '../Auth/ExternLogin';\r\nimport { receiveMessage } from '../../events/MessageService';\r\nimport EditPost from '../Post/EditPost';\r\nimport CreatePost from '../Post/CreatePost';\r\nimport ViewPost from '../Post/ViewPost';\r\nimport PostsByTag from '../Post/PostHome/PostsByTag';\r\nimport SearchPost from '../Post/PostHome/SearchPost';\r\nimport BrowsePost from '../Post/PostHome/BrowsePost';\r\nimport PostHome from '../Post/PostHome';\r\nimport AssetCreateSuccess from '../Asset/CreateAsset/AssetCreateSuccess';\r\nimport MyPosts from '../Post/MyPosts/index';\r\n\r\nconst themes = {\r\n  themecolor1: getTheme('#69A7BF'),\r\n  themecolor2: getTheme('#99587B'),\r\n  themecolor3: getTheme('#A66C26'),\r\n  themecolor4: getTheme('#37AE82'),\r\n};\r\n\r\nfunction getTheme(color: string) {\r\n  return createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: color,\r\n      },\r\n      secondary: {\r\n        main: color,\r\n      },\r\n    },\r\n  });\r\n}\r\n\r\ninterface Props {\r\n  getProfile: Function;\r\n  setProfile: Function;\r\n  getAuth: Function;\r\n  addAuth: Function;\r\n  removeAuth: Function;\r\n  getUser: Function;\r\n  addUser: Function;\r\n  cookies: any;\r\n\r\n  // event: PropTypes.object,\r\n  profile: any;\r\n  authorization: Authorization;\r\n}\r\n\r\nconst Content = (props: Props) => {\r\n  const authorization = useSelector(state => state.authorization);\r\n  const [asset, setAsset] = useState('');\r\n\r\n  useEffect(() => {\r\n    receiveMessage().subscribe(event => {\r\n      if (event.name === 'spaceChange') {\r\n        setAsset(event.data);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const httpLink = createHttpLink({\r\n    uri: process.env.REACT_APP_GRAPHQL_URL,\r\n  });\r\n\r\n  const authLink = setContext((_, { headers }) => {\r\n    return {\r\n      headers: {\r\n        ...headers,\r\n        authorization: `${asset} ${authorization?.token}` || '',\r\n      },\r\n    };\r\n  });\r\n\r\n  const client = new ApolloClient({\r\n    link: authLink.concat(httpLink),\r\n    cache: new InMemoryCache(),\r\n  });\r\n\r\n  useEffect(() => {\r\n    props.getProfile();\r\n  }, []);\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <div\r\n        className={`App ${props.profile.theme} ${props.profile.textSize} ${props.profile.themeColor}`}\r\n      >\r\n        <HashRouter>\r\n          <div className=\"body\">\r\n            <div className=\"body-content\">\r\n              <Notification />\r\n              <MuiThemeProvider theme={themes.themecolor1}>\r\n                <Navigation {...props} />\r\n                <Route\r\n                  path=\"/login\"\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={OaLogin}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/:asset/unauthorized\"\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={Unauthorized}\r\n                      middleware={['isAuthenticated']}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/\"\r\n                  exact\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={Landing}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/home\"\r\n                  exact\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={Landing}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/tenant\"\r\n                  exact\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={Tenant}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/asset/create\"\r\n                  exact\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={CreateAsset}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/asset/summary\"\r\n                  exact\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={AssetCreateSuccess}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/:asset/home\"\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={Home}\r\n                      middleware={['readAuthentication']}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/:asset/login/home\"\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={Login}\r\n                      middleware={['readAuthentication']}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/:asset/login/extern\"\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={ExternLogin}\r\n                      middleware={['readAuthentication']}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/:asset/login/oa\"\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={OneAuth}\r\n                      middleware={['readAuthentication']}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/:asset/login/email\"\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={Email}\r\n                      middleware={['readAuthentication']}\r\n                    />\r\n                  )}\r\n                />\r\n                {/* Article URLs */}\r\n                <Route\r\n                  path=\"/:asset/article\"\r\n                  exact\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={ArticleHome}\r\n                      middleware={['authenticate']}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/:asset/article/browse\"\r\n                  exact\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={BrowseArticle}\r\n                      middleware={['authenticate']}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/:asset/article/search\"\r\n                  exact\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={SearchArticle}\r\n                      middleware={['authenticate']}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/:asset/article/tag\"\r\n                  exact\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={ArticlesByTag}\r\n                      middleware={['authenticate']}\r\n                    />\r\n                  )}\r\n                />\r\n\r\n                <Route\r\n                  path=\"/:asset/article/view\"\r\n                  exact\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={ViewArticle}\r\n                      middleware={['authenticate']}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/:asset/article/create\"\r\n                  exact\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={CreateArticle}\r\n                      middleware={['authenticate']}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/:asset/article/edit\"\r\n                  exact\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={EditArticle}\r\n                      middleware={['authenticate']}\r\n                    />\r\n                  )}\r\n                />\r\n\r\n                {/* Post URLs */}\r\n                <Route\r\n                  path=\"/:asset/post\"\r\n                  exact\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={PostHome}\r\n                      middleware={['authenticate']}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/:asset/post/browse\"\r\n                  exact\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={BrowsePost}\r\n                      middleware={['authenticate']}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/:asset/post/search\"\r\n                  exact\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={SearchPost}\r\n                      middleware={['authenticate']}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/:asset/post/tag\"\r\n                  exact\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={PostsByTag}\r\n                      middleware={['authenticate']}\r\n                    />\r\n                  )}\r\n                />\r\n\r\n                <Route\r\n                  path=\"/:asset/post/view\"\r\n                  exact\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={ViewPost}\r\n                      middleware={['authenticate']}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/:asset/post/create\"\r\n                  exact\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={CreatePost}\r\n                      middleware={['authenticate']}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/:asset/post/edit\"\r\n                  exact\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={EditPost}\r\n                      middleware={['authenticate']}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/:asset/mypost/mypost\"\r\n                  exact\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={MyPosts}\r\n                      middleware={['authenticate']}\r\n                    />\r\n                  )}\r\n                />\r\n\r\n                <Route\r\n                  path=\"/:asset/asset/view\"\r\n                  exact\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={ViewAsset}\r\n                      middleware={['readAuthentication']}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/:asset/asset/edit\"\r\n                  exact\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={EditAsset}\r\n                      middleware={['readAuthentication']}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/:asset\"\r\n                  exact\r\n                  render={propsLocal => (\r\n                    <OakRouteGraph\r\n                      {...propsLocal}\r\n                      {...props}\r\n                      component={Home}\r\n                      middleware={['readAuthentication']}\r\n                    />\r\n                  )}\r\n                />\r\n              </MuiThemeProvider>\r\n            </div>\r\n          </div>\r\n        </HashRouter>\r\n      </div>\r\n    </ApolloProvider>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  user: state.user,\r\n  profile: state.profile, // ,\r\n  //   event: state.event\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getProfile,\r\n  setProfile,\r\n  getUser,\r\n  addUser,\r\n})(withCookies(Content));\r\n","import { GET_USER, ADD_USER, FETCH_ALL_USERS } from './types';\r\nimport { httpGet, httpPut } from '../components/Lib/RestTemplate';\r\nimport { sendMessage } from '../events/MessageService';\r\nimport constants from '../components/Constants';\r\n\r\nconst domain = 'user';\r\n\r\nexport const getUser = () => dispatch => {\r\n  dispatch({\r\n    type: GET_USER,\r\n  });\r\n};\r\n\r\nexport const addUser = data => dispatch => {\r\n  dispatch({\r\n    type: ADD_USER,\r\n    payload: data,\r\n  });\r\n};\r\n\r\nexport const fetchAllUsers = (tenant, authorization) => dispatch => {\r\n  httpGet(`${constants.API_URL_USER}/${tenant}/all`, {\r\n    headers: {\r\n      Authorization: authorization.token,\r\n    },\r\n  }).then(response => {\r\n    dispatch({\r\n      type: FETCH_ALL_USERS,\r\n      payload: { users: response.data.data },\r\n    });\r\n  });\r\n};\r\n\r\nexport const saveUser = (tenant, authorization, payload) => dispatch => {\r\n  httpPut(`${constants.API_URL_USER}/${tenant}/`, payload, {\r\n    headers: {\r\n      Authorization: authorization.token,\r\n    },\r\n  })\r\n    .then(response => {\r\n      if (response.status === 200) {\r\n        sendMessage(domain, true, {\r\n          action: payload.id ? 'updated' : 'created',\r\n        });\r\n        dispatch(fetchAllUsers(tenant, authorization));\r\n      }\r\n    })\r\n    .catch(error => {\r\n      if (error.response.status === 401) {\r\n        sendMessage('session expired');\r\n      }\r\n    });\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, connect, useDispatch } from 'react-redux';\r\nimport './style.scss';\r\nimport mirrorWhite from '../../images/mirror_white.svg';\r\n\r\nconst Logo = () => {\r\n  const authorization = useSelector(state => state.authorization);\r\n\r\n  const profile = useSelector(state => state.profile);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"logo\">\r\n      <img className=\"logo--image\" src={mirrorWhite} alt=\"Oneauth logo\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Logo from '../Logo';\r\nimport './HealthCheckFailed.scss';\r\n\r\nconst HealthCheckFailed = () => {\r\n  return (\r\n    <div className=\"health-check-failed\">\r\n      <div className=\"health-check-failed--logo\">\r\n        <Logo />\r\n      </div>\r\n      <div className=\"health-check-failed--message\">\r\n        We are working on improving your experience. We will be back soon. Check\r\n        back in few hours.\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HealthCheckFailed;\r\n","import React, { useEffect, useState } from 'react';\r\nimport OakSpinner from '../../oakui/OakSpinner';\r\nimport './HealthCheckProgress.scss';\r\n\r\nconst HealthCheckProgress = () => {\r\n  return (\r\n    <div className=\"health-check-progress\">\r\n      <OakSpinner />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HealthCheckProgress;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from '../../store';\r\nimport './style.scss';\r\nimport './metric.scss';\r\nimport Content from './Content';\r\nimport HealthCheckFailed from '../AppFallback/HealthCheckFailed';\r\nimport HealthCheckProgress from '../AppFallback/HealthCheckProgress';\r\nimport { httpGet } from '../Lib/RestTemplate';\r\nimport constants from '../Constants';\r\n\r\nconst App = props => {\r\n  const [healthCheck, setHealthCheck] = useState({\r\n    isVerified: false,\r\n    allowAccess: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    httpGet(\r\n      constants.API_HEALTHCHECK_HELLO,\r\n      null,\r\n      process.env.REACT_APP_ONEAUTH_API_URL\r\n    )\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          setHealthCheck({\r\n            ...healthCheck,\r\n            isVerified: true,\r\n            allowAccess: true,\r\n          });\r\n        } else {\r\n          setHealthCheck({\r\n            ...healthCheck,\r\n            isVerified: true,\r\n            allowAccess: false,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setHealthCheck({\r\n          ...healthCheck,\r\n          isVerified: true,\r\n          allowAccess: false,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      {healthCheck.isVerified && healthCheck.allowAccess && (\r\n        <Content {...props} />\r\n      )}\r\n      {healthCheck.isVerified && !healthCheck.allowAccess && (\r\n        <HealthCheckFailed />\r\n      )}\r\n      {!healthCheck.isVerified && <HealthCheckProgress />}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport { CookiesProvider } from 'react-cookie';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <CookiesProvider>\r\n    <App />\r\n  </CookiesProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/mirror_white.ff53f974.svg\";"],"sourceRoot":""}