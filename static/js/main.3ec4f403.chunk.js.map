{"version":3,"sources":["reducers/AuthReducer.ts","reducers/ProfileReducer.ts","reducers/index.ts","actions/types.ts","store.ts","events/SearchEvent.ts","components/Ux/SearchBar.tsx","events/MessageService.ts","components/Lib/RestTemplate.ts","components/Constants.ts","components/Home/index.tsx","components/Tenant/TenantService.ts","actions/AuthActions.ts","components/Ux/ArcText.tsx","components/Auth/AuthService.ts","components/Utils.ts","components/Auth/Login.tsx","components/Landing/index.tsx","components/Auth/PrivateRoute.tsx","components/Auth/AuthInit.tsx","actions/ProfileActions.ts","components/App/Backdrop.tsx","components/Notification/index.tsx","components/Navigation/Links.tsx","components/Navigation/Desktop.tsx","components/Navigation/Mobile.tsx","components/Navigation/index.tsx","components/Tenant/index.tsx","components/Ux/ViewResolver.tsx","components/Ux/View.tsx","components/Ux/Sidebar.tsx","components/Stages/index.tsx","components/Settings/index.tsx","components/App/Content.tsx","components/App/index.tsx","serviceWorker.js","index.tsx","images/mirror_white.svg","images/cover.jpg","images/mirror_white_small.svg"],"names":["initialState","isAuth","firstname","lastname","theme","tenant","combineReducers","authorization","state","arguments","length","undefined","action","type","console","log","_objectSpread","payload","profile","ProfileReducer_objectSpread","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","searchTextChangedEvent$","BehaviorSubject","searchEvent$","Subject","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_isMounted","onSubmit","event","preventDefault","next","searchText","handleChange","target","value","_this2","subscribe","data","setState","react_default","a","createElement","method","noValidate","className","alt","name","spellCheck","autoComplete","autoFocus","placeholder","required","onChange","xmlns","width","height","viewBox","d","Component","subject","sendMessage","signal","receiveMessage","asObservable","baseUrl","process","httpGet","endpoint","headers","axios","get","httpPost","post","constants","API_URL_TENANT","API_URL_TENANT_BANNER","API_URL_TENANT_CREATE","API_TENANT_URL","API_URL_PRESIGNUP","API_URL_RESET","API_URL_CODE","API_URL_USER_DETAILS","API_URL_STAGE","API_URL","API_SIGNIN","API_SIGNUP","API_KEYS","API_JWT","pageYOffsetCutoff","Home","handleScroll","currentScrollPos","window","pageYOffset","showMainSearchBar","prevScrollpos","banner","addEventListener","setProfile","Home_objectSpread","match","params","removeEventListener","nextProps","tenantName","_this3","Authorization","token","then","response","Promise","resolve","status","cover","catch","Fragment","src","components_Ux_SearchBar","React","getAuth","dispatch","addAuth","removeAuth","ArcText","label","disabled","errorFields","id","preSignup","signin","problem","solution","password","ciphertext","JSON","stringify","sjcl","decrypt","email","error","message","encrypt","salt","config","cipher","iter","ks","CryptoJS","enc","Base64","Utf8","parse","isEmptyOrSpaces","str","queryString","require","Login","loginViaJwt","jwt","jwtToken","duration","success","login","signup","that","assertThisInitialized","test","toggle","logout","cookies","remove","secret","set","history","push","newuser","Login_objectSpread","defineProperty","currentTarget","sentEmailWithCode","sentPasswordChangeEmail","rand","Math","random","resetCode","location","search","query","Ux_ArcText","e","onClick","connect","withCookies","Landing","react_router_dom","to","activeClassName","PrivateRoute","react_router","path","render","pathname","AuthInit","getProfile","Backdrop","backdrop","Notification","spinner","notification","lastNotificationType","setTimeout","Links","toggleMenu","menu","Desktop","showSearchBar","showSettings","transparent","mirror_white","Navigation_Links","toggleSettings","Mobile","mirror_white_small","Navigation","toggleDarkMode","Navigation_objectSpread","changeTextSize","size","textSize","changeThemeColor","color","themeColor","visible","mobilemenu","chooseTheme","transparentNavBar","firstLoad","Navigation_Desktop","assign","Navigation_Mobile","withRouter","Tenant","_objectSpread3","Tenant_objectSpread","sentTenantUrl","submit","clearError","validate","createTenant","handleImageChange","files","preSignupData","formData","FormData","append","jwtPassword","Content-Type","pageNo","created","gotoTenantPage","repeatPassword","fieldName","setError","accept","ViewResolver","viewPort","matchMedia","viewPortChange","port","mobileViewPort","matches","toggleSideView","showSide","views","children","initializeViews","addListener","Children","toArray","forEach","node","main","side","_this4","sideLabel","toUpperCase","View","Sidebar","show","hide","elements","map","item","key","icon","number","animate","Stages","handleAddStage","stage","concat","handleChangeStage","evt","idx","localStage","toConsumableArray","Stages_objectSpread","handleRemoveStage","filter","s","sidx","saveStages","put","resetStages","Settings","chooseSection","section","Settings_objectSpread","sidebarElements","user","ownerEmail","components_Ux_ViewResolver","Ux_View","Stages_Stages","components_Ux_Sidebar","themes","themecolor_1","getTheme","themecolor_2","themecolor_3","themecolor_4","createMuiTheme","palette","primary","secondary","Content","react_router_dom_min","Auth_AuthInit","App_Backdrop","components_Notification","ThemeProvider","components_Navigation","Home_Home","components_Auth_Login","exact","Landing_Landing","Tenant_Tenant","Auth_PrivateRoute","components_Settings","App","es","App_Content","Boolean","hostname","ReactDOM","es6","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.3ec4f403.chunk.js","sourcesContent":["import { GET_AUTH, ADD_AUTH, REMOVE_AUTH } from '../actions/types';\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    firstname: '',\r\n    lastname: ''\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_AUTH:\r\n            console.log('GET_AUTH reducer');\r\n            return {\r\n                ...state\r\n            };\r\n        case ADD_AUTH:\r\n            console.log('ADD_AUTH reducer');\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        \r\n        case REMOVE_AUTH:\r\n            console.log('REMOVE_AUTH reducer');\r\n            return {\r\n                ...state,\r\n                isAuth: false,\r\n                firstname: '',\r\n                lastname: ''\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_PROFILE, SET_PROFILE } from '../actions/types';\r\n\r\nconst initialState = {\r\n    theme: 'theme_light',\r\n    tenant: ''\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_PROFILE:\r\n            console.log('GET_PROFILE reducer');\r\n            return {\r\n                ...state\r\n            };\r\n        case SET_PROFILE:\r\n            console.log('SET_PROFILE reducer');\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport AuthReducer from './AuthReducer';\r\nimport ProfileReducer from './ProfileReducer';\r\n\r\nexport default combineReducers({\r\n    authorization: AuthReducer,\r\n    profile: ProfileReducer\r\n})","export const GET_AUTH = 'GET_AUTH';\r\nexport const ADD_AUTH = 'ADD_AUTH';\r\nexport const REMOVE_AUTH = 'REMOVE_AUTH';\r\n\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const SET_PROFILE = 'SET_PROFILE';","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware)//,\r\n        // (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;\r\n","import { BehaviorSubject, Subject } from 'rxjs';\r\n\r\nexport const searchTextChangedEvent$ = new BehaviorSubject<string>(\"\");\r\nexport const searchEvent$ = new Subject<string>();\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SearchBar.scss';\r\nimport { searchTextChangedEvent$, searchEvent$ } from '../../events/SearchEvent';\r\n\r\ninterface Props {\r\n  alt?: boolean\r\n}\r\n\r\ninterface State {\r\n  searchText: string\r\n}\r\n\r\nclass SearchBar extends Component<Props, State> {\r\n\r\n  _isMounted = false;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchText: \"\"\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    searchTextChangedEvent$.subscribe(data => {\r\n      if (this._isMounted) {\r\n        this.setState({\r\n          searchText: data\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n      this._isMounted = false;\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    searchEvent$.next(this.state.searchText);\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    searchTextChangedEvent$.next(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form method=\"GET\" onSubmit={this.onSubmit} noValidate>\r\n        <div className={\"search-bar\" + (this.props.alt ? \" alt\" : \"\")}>\r\n            <input name=\"searchText\" spellCheck={false} autoComplete=\"off\" autoFocus placeholder=\"Mirror, mirror, on the wall, who's the fairest of them all?\" required value={this.state.searchText} onChange={this.handleChange}></input>\r\n              <button className=\"icon\">\r\n                <i><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"></path></svg></i>\r\n              </button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import { Subject, Observable, BehaviorSubject } from 'rxjs';\r\nimport { Message } from '../components/Types/GeneralTypes';\r\n\r\nconst subject = new Subject<Message>();\r\n\r\nexport function sendMessage(name: string, signal: boolean = true, data?: {}) {\r\n    subject.next({\r\n        name: name,\r\n        signal: signal,\r\n        data: data\r\n    });\r\n}\r\n\r\nexport function clearMessages() {\r\n    subject.next();\r\n}\r\n\r\nexport function receiveMessage(): Observable<Message> {\r\n    return subject.asObservable();\r\n}","import axios from \"axios\";\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport function httpGet(endpoint: string, headers: any) {\r\n    return axios.get(baseUrl + endpoint, headers)\r\n        // .then(function(response) {\r\n        //     return Promise.resolve(response);\r\n        // }\r\n    // )\r\n}\r\n\r\nexport function httpPost(endpoint: string, payload: any, headers: any) {\r\n    return axios.post(baseUrl + endpoint, payload, headers)\r\n    //     .then(function(response) {\r\n    //         return Promise.resolve(response);\r\n    //     }\r\n    // )\r\n}\r\n\r\nexport function httpPut(endpoint: string, payload: any, headers: any) {\r\n    return axios.put(baseUrl + endpoint, payload, headers)\r\n    //     .then(function(response) {\r\n    //         return Promise.resolve(response);\r\n    //     }\r\n    // )\r\n}\r\n\r\nexport function httpDelete(endpoint: string, headers: any) {\r\n    return axios.delete(baseUrl + endpoint, headers)\r\n    //     .then(function(response) {\r\n    //         return Promise.resolve(response);\r\n    //     }\r\n    // )\r\n}\r\n","export const constants ={\r\n    API_URL_TENANT:\"/tenant\",\r\n    API_URL_TENANT_BANNER:\"/tenant/banner\",\r\n    API_URL_TENANT_CREATE:\"/tenant/create\",\r\n    API_TENANT_URL: \"/tenant/sendURL\",\r\n    \r\n    API_URL_PRESIGNUP: \"/auth/keys\",\r\n    API_URL_RESET: \"/auth/reset\",\r\n    API_URL_CODE:\"/auth/sendResetCode\",\r\n    API_URL_USER_DETAILS: \"/user/details\",\r\n\r\n    API_URL_STAGE:\"/stage\",\r\n    \r\n    API_URL:\"/auth/\",\r\n    API_SIGNIN:\"/signin\",\r\n    API_SIGNUP:\"/signup\",\r\n    API_KEYS:\"/keys\",\r\n    API_JWT: \"/signin/jwt\"\r\n}\r\n    ","import React from 'react';\r\nimport './style.scss';\r\nimport cover from '../../images/cover.jpg';\r\nimport SearchBar from '../Ux/SearchBar';\r\n\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\nimport { searchTextChangedEvent$, searchEvent$ } from '../../events/SearchEvent';\r\nimport { getBanner } from '../Tenant/TenantService';\r\n\r\n\r\nconst pageYOffsetCutoff = 10;\r\n\r\ninterface Props {\r\n  setProfile: Function,\r\n  profile: any,\r\n  match: any\r\n}\r\n\r\ninterface State {\r\n  banner: any,\r\n  prevScrollpos: number,\r\n  showMainSearchBar: boolean,\r\n  searchText: string\r\n}\r\n\r\nexport default class Home extends React.Component<Props, State> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      banner: null,\r\n      prevScrollpos: window.pageYOffset,\r\n      showMainSearchBar: true,\r\n      searchText: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // sendMessage('navbar-transparency', true);\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n    this.props.setProfile({\r\n      ...this.props.profile,\r\n      tenant: this.props.match.params.tenant\r\n    })\r\n\r\n    searchEvent$.subscribe(searchText => {\r\n      this.setState({\r\n        searchText: searchText\r\n      });\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.handleScroll);\r\n    sendMessage('show-navbar-element', false);\r\n    searchTextChangedEvent$.next(\"\");\r\n    // sendMessage('navbar-transparency', false);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n      if (nextProps.authorization) {\r\n        getBanner(this.props.match.params.tenant,  {\r\n          headers: {\r\n              Authorization: nextProps.authorization.token\r\n          }\r\n        }).then ((response) => {\r\n          if (response.status === 200 && response.data) {\r\n            this.setState({banner: 'data:image/jpeg;base64,' + response.data});\r\n          } else {\r\n            this.setState({banner: cover});\r\n          }\r\n        }).catch(() => {\r\n          this.setState({banner: cover});\r\n        })\r\n      }\r\n  }\r\n\r\n  handleScroll = () => {\r\n    // const { prevScrollpos } = this.state;\r\n  \r\n    const currentScrollPos = window.pageYOffset;\r\n    const showMainSearchBar = currentScrollPos < pageYOffsetCutoff;\r\n\r\n    if (this.state.showMainSearchBar !== showMainSearchBar) {\r\n      if (!showMainSearchBar) {\r\n        // sendMessage('navbar-transparency', false);\r\n        sendMessage('show-navbar-element', true);\r\n      } else {\r\n        // sendMessage('navbar-transparency', true);\r\n        sendMessage('show-navbar-element', false);\r\n      }\r\n    }\r\n  \r\n    this.setState({\r\n      prevScrollpos: currentScrollPos,\r\n      showMainSearchBar\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"home full\">\r\n            <div className='cover'>\r\n              {/* <img src={cover}/> */}\r\n              <img src={this.state.banner} alt=\"Red dot\" />\r\n            </div>\r\n            {this.state.showMainSearchBar && <SearchBar />}\r\n\r\n            <div className='search-results'>\r\n              Search results goes here\r\n              <br /> {this.state.searchText}\r\n            </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}","import { httpGet, httpPost, httpPut } from \"../Lib/RestTemplate\";\r\nimport { constants } from '../Constants';\r\n\r\nexport function createTenant(data) {\r\n    return httpPost(constants.API_URL_TENANT_CREATE, data, null)\r\n        .then(function(response) {\r\n            return Promise.resolve(response);\r\n        })\r\n}\r\n\r\nexport function sentTenantUrl(data) {\r\n    return httpPost(constants.API_TENANT_URL, data, null)\r\n        .then(function(response) {\r\n            return Promise.resolve(response.status);\r\n        })\r\n}\r\n    \r\n\r\n\r\nexport function getTenant(tenantName, headers) {\r\n    return httpGet(constants.API_URL_TENANT + '/' + tenantName, headers)\r\n        .then(function(response) {\r\n            return Promise.resolve(response);\r\n        })\r\n}\r\n\r\n\r\nexport function getBanner(tenantName, headers) {\r\n    return httpGet(constants.API_URL_TENANT_BANNER + '/' + tenantName, headers)\r\n        .then(function(response) {\r\n            return Promise.resolve(response);\r\n        })\r\n}","import { GET_AUTH, REMOVE_AUTH, ADD_AUTH } from './types';\r\n\r\nexport const getAuth = () => dispatch => {\r\n    dispatch({\r\n        type: GET_AUTH\r\n    });\r\n}\r\n\r\nexport const addAuth = (data) => dispatch => {\r\n    dispatch({\r\n        type: ADD_AUTH,\r\n        payload: data\r\n    });\r\n}\r\n\r\nexport const removeAuth = () => dispatch => {\r\n    dispatch({\r\n        type: REMOVE_AUTH\r\n    });\r\n}","import React from 'react';\r\nimport './ArcText.scss';\r\n\r\ninterface Props {\r\n    label: string,\r\n    id: string,\r\n    data: any,\r\n    type?: string,\r\n    handleChange: any,\r\n    errorFields?: any,\r\n    disabled?: boolean\r\n}\r\nfunction ArcText(props: Props) {\r\n    return (\r\n        <div className=\"arc-text-field\">\r\n            <label>{props.label}</label>\r\n            <input disabled={props.disabled} autoComplete=\"off\"\r\n                className={(props.errorFields && props.errorFields[props.id] ? \"error\" : \"\") + (props.disabled ? \" disabled\" : \"\")}\r\n                type={props.type ? props.type : \"text\"} name={props.id} value={props.data[props.id]} onChange={props.handleChange}></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nArcText.propTypes = {\r\n};\r\n\r\nexport default ArcText;\r\n","import { httpGet, httpPost, httpPut } from \"../Lib/RestTemplate\";\r\nimport sjcl from 'ioak-sjcl';\r\nimport CryptoJS from 'crypto-js';\r\nimport { constants } from '../Constants';\r\n\r\n\r\nexport function preSignup(data) {\r\n    return httpGet(constants.API_URL+data.name+constants.API_KEYS, null)\r\n        .then(function(response) {\r\n          return Promise.resolve(response);\r\n        })\r\n}\r\n\r\nexport function signup(data) {\r\n    return httpPost(constants.API_URL+data.tenantName+constants.API_SIGNUP, {\r\n        email: data.email,\r\n        problem: encrypt(data.password, data.solution, data.salt),\r\n        solution: data.solution\r\n        }, null)\r\n        .then(function(response) {\r\n            return Promise.resolve(response.status);\r\n        })\r\n}\r\n\r\nexport function createTenant(data) {\r\n    const formData = new FormData();\r\n    formData.append('tenantName', data.tenantName);\r\n    formData.append('email', data.email);\r\n    formData.append('jwtPassword', data.jwtPassword);\r\n    formData.append('problem', encrypt(data.password, data.solution, data.salt));\r\n    formData.append('solution', data.solution);\r\n    if(data.banner) {\r\n        formData.append('banner', data.banner, 'banner.jpg');\r\n    }\r\n    return httpPost(constants.API_URL_TENANT_CREATE, formData, {'Content-Type': 'multipart/form-data'})\r\n        .then(function(response) {\r\n            return Promise.resolve(response);\r\n        })\r\n}\r\n\r\nexport function preSignin(data) {\r\n    return httpGet(constants.API_URL+data.name+constants.API_KEYS + '/' + data.email, null)\r\n        .then(response => Promise.resolve(response))\r\n        .catch(error => Promise.resolve(error.response))\r\n}\r\n\r\nexport function signin(data, problem) {\r\n    try {\r\n        let solution = decrypt(data.password, JSON.stringify(problem));\r\n        return httpPost(constants.API_URL+data.name+constants.API_SIGNIN, {\r\n            email: data.email, \r\n            solution: solution\r\n            }, null)\r\n            .then(function(response) {\r\n                return Promise.resolve(response);\r\n            })\r\n        \r\n    } catch(error) {\r\n        if (error.message === \"ccm: tag doesn't match\") {\r\n            return Promise.resolve({\r\n                status: 401\r\n            });\r\n        } else {\r\n            return Promise.resolve(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function signinWithJwt(data){\r\n\r\n    return httpPost(constants.API_URL + data.tenantName + constants.API_JWT, {\r\n        jwtToken: data.jwt\r\n    }, null)\r\n        .then(function(response){\r\n            return Promise.resolve(response);\r\n        });\r\n}\r\n\r\nexport function sentPasswordChangeEmail(data, type) {\r\n\r\n    return httpPost(constants.API_URL_CODE, data, null)\r\n        .then(function(response) {\r\n            return Promise.resolve(response.status);\r\n        })\r\n}\r\n\r\nexport function resetPassword(data, type) {\r\n\r\n    return httpGet(constants.API_URL_PRESIGNUP, null)\r\n        .then(function(response) {\r\n            if (response.status === 200) {\r\n                let newData = {};\r\n                if (type && type === 'password') {\r\n                    newData = {\r\n                        problem: encrypt(data.password, response.data.solution, response.data.salt),\r\n                        solution: response.data.solution,\r\n                        resetCode: data.resetCode\r\n                    }\r\n\r\n                }\r\n\r\n                return httpPost(constants.API_URL_RESET, newData, null)\r\n                    .then(function(response) {\r\n                        return Promise.resolve(response.status);\r\n                    })\r\n\r\n\r\n            }\r\n        })\r\n}\r\n\r\n\r\n\r\nfunction encrypt(password, message, salt) {\r\n    const config = {\r\n        cipher: 'aes',\r\n        iter: '12000',\r\n        ks: 256,\r\n        salt: CryptoJS.enc.Base64.stringify((CryptoJS.enc.Utf8.parse(salt)))\r\n    }\r\n    return sjcl.encrypt(password, message, config);\r\n}\r\n\r\nfunction decrypt(password, ciphertext) {\r\n    return sjcl.decrypt(password, ciphertext);\r\n}\r\n","export function isEmptyOrSpaces(str){\r\n    return str === null || str.match(/^ *$/) !== null;\r\n}\r\n\r\nexport function match(text, words) {\r\n    let found = false;\r\n    if (words) {\r\n        words.split(' ').forEach(word => {\r\n            if (text.match(new RegExp('(\\\\w*'+ word +'\\\\w*)','gi'))) {\r\n                found = true;\r\n            }\r\n        });\r\n    }\r\n    return found;\r\n}\r\n\r\nexport function sort(array, property, isReverseOrder) {\r\n    const result = array.sort(function(o1,o2){\r\n        if (isReverseOrder) {\r\n            return o1[property] > o2[property] ? -1 : o1[property] < o2[property] ? 1 : 0;\r\n        } else {\r\n            return o1[property] < o2[property] ? -1 : o1[property] > o2[property] ? 1 : 0;\r\n        }\r\n    });\r\n\r\n    return result;\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport {withCookies} from 'react-cookie';\r\nimport './Login.scss';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport ArcText from '../Ux/ArcText';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport {signinWithJwt, signin, preSignin,sentPasswordChangeEmail, preSignup, signup} from './AuthService';\r\nimport {isEmptyOrSpaces} from \"../Utils\";\r\n\r\nconst queryString = require('query-string');\r\n\r\ninterface Props {\r\n    setProfile: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    cookies: any,\r\n    history: any,\r\n    profile:any,\r\n    match: any,\r\n    location:any,\r\n    authorization: Authorization\r\n}\r\n\r\ninterface State {\r\n    newuser: boolean,\r\n    name: string,\r\n    email: string,\r\n    password: string\r\n}\r\n\r\nclass Login extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newuser: false,\r\n            name:'',\r\n            email:'',\r\n            password:''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.location.search){\r\n            const query = queryString.parse(this.props.location.search)\r\n            if (query && query.type === 'signup') {\r\n                this.setState({\r\n                    newuser : true\r\n                })\r\n            }\r\n            if (query && query.jwt) {\r\n                this.loginViaJwt(query.jwt);\r\n            }\r\n        }\r\n\r\n        this.props.setProfile({\r\n            ...this.props.profile,\r\n            tenant: this.props.match.params.tenant\r\n        })\r\n    }\r\n\r\n    loginViaJwt = (jwt: string) => {\r\n        signinWithJwt({\r\n            tenantName: this.props.match.params.tenant,\r\n            jwt:jwt\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 200) {\r\n                sendMessage('notification', true, {message: 'Signed In successfully', type: 'success', duration: 3000});\r\n                this.success(response.data);\r\n            } else if (response.status === 500) {\r\n                sendMessage('notification', true, {message: 'Signature verification failed', type: 'failure', duration: 3000});\r\n            } else {\r\n                sendMessage('notification', true, {message: 'Unknown response from server. Please try again or at a later time', type: 'failure', duration: 3000});\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            sendMessage('notification', true, {'type': 'failure', message: 'Unknown error. Please try again or at a later time', duration: 3000});\r\n        });\r\n    }\r\n\r\n    login = (event) => {\r\n        event.preventDefault();\r\n        sendMessage('notification', false);\r\n        sendMessage('spinner');\r\n        if (this.state.email && this.state.password) {\r\n            preSignin({\r\n                name:this.props.profile.tenant,\r\n                email:this.state.email})\r\n                .then((response) => {\r\n                    if (response.status === 200) {\r\n                    signin({\r\n                        name:this.props.profile.tenant,\r\n                        email: this.state.email,\r\n                        password: this.state.password\r\n                        }, response.data)\r\n                        .then((response) => {\r\n                            if (response.status === 200) {\r\n                                sendMessage('notification', true, {message: 'Signed In successfully', type: 'success', duration: 3000});\r\n                                this.success(response.data);\r\n                            } else if (response.status === 401) {\r\n                                sendMessage('notification', true, {message: 'Incorrect passphrase', type: 'failure', duration: 3000});\r\n                            } else {\r\n                                sendMessage('notification', true, {message: 'Unknown response from server. Please try again or at a later time', type: 'failure', duration: 3000});\r\n                            }\r\n                        })\r\n                        .catch((error) => {\r\n                            sendMessage('notification', true, {'type': 'failure', message: 'Unknown error. Please try again or at a later time', duration: 3000});\r\n                        })\r\n                } else if (response.status === 404) {\r\n                    sendMessage('notification', true, {message: 'User name does not exist', type: 'failure', duration: 3000});\r\n                }\r\n            })\r\n\r\n            \r\n        } else {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Username/password cannot be empty', duration: 3000});\r\n        }\r\n    }\r\n\r\n    \r\n    signup =(event) =>{\r\n        event.preventDefault()\r\n        const that = this\r\n        sendMessage('notification', false)\r\n        sendMessage('spinner')\r\n        if(this.state.name && this.state.password && this.state.email){\r\n            if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.state.email))) {\r\n                sendMessage('notification', true, {type: 'failure', message: 'Email ID is invalid', duration: 3000});\r\n                return;\r\n            }\r\n            preSignup({name:that.props.profile.tenant}).then((response) =>{\r\n                if(response.status ===200){\r\n                    signup({\r\n                        tenantName: that.props.profile.tenant,\r\n                        email: that.state.email,\r\n                        password: that.state.password,\r\n                        solution: response.data.solution,\r\n                        salt: response.data.salt\r\n                    })\r\n                    .then(function(status){\r\n                        if(status===200){\r\n                            sendMessage('notification', true, {'type': 'success', message: 'Your account has been created. You can login now', duration: 3000});\r\n                            that.setState({\r\n                                email:'',\r\n                                password:''\r\n                            }); \r\n                            that.toggle();\r\n                        }\r\n                    })\r\n                    .catch((error) => {\r\n                        sendMessage('notification', true, {'type': 'failure', message: 'Unknown error. Please try again or at a later time', duration: 3000});\r\n                    });\r\n                }\r\n            });\r\n        }  else if (!this.state.name) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Name cannot be empty', duration: 3000});\r\n        } else if (!this.state.email) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Email cannot be empty', duration: 3000});\r\n        } else if (!this.state.password) {\r\n            sendMessage('notification', true, {type: 'failure', message: 'Password cannot be empty', duration: 3000});\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        this.props.removeAuth();\r\n        this.props.cookies.remove('isAuth');\r\n    }\r\n\r\n    success = (data) => {\r\n        this.props.addAuth({\r\n            isAuth: true,\r\n            token: data.token,\r\n            secret: data.secret,\r\n            name: data.name\r\n\r\n        });\r\n        sendMessage('loggedin', true);\r\n        console.log(data);\r\n        this.props.cookies.set('isAuth', true);\r\n        this.props.cookies.set('token', data.token);\r\n        this.props.cookies.set('secret', data.secret);\r\n        this.props.cookies.set('name', data.name);\r\n        this.props.cookies.set('email', data.email);\r\n        this.props.history.push(\"/\");    \r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            newuser: !this.state.newuser\r\n        });\r\n    }\r\n\r\n    handleChange= (event) => {\r\n        this.setState(\r\n            {\r\n                ...this.state,\r\n                [event.currentTarget.name]: event.currentTarget.value\r\n            }\r\n        )\r\n    }\r\n\r\n    sentEmailWithCode = () => {\r\n        if (isEmptyOrSpaces(this.state.email)) {\r\n            sendMessage('notification', true, {message: 'Email cannot be empty', type: 'failure', duration: 5000});\r\n            return;\r\n        }\r\n\r\n        this.sentPasswordChangeEmail('password');\r\n\r\n    }\r\n\r\n    sentPasswordChangeEmail = (type) => {\r\n        const min = 1;\r\n        const max = 100;\r\n        const rand = min + Math.random() * (max - min);\r\n        sentPasswordChangeEmail({\r\n            email: this.state.email,\r\n            resetCode: rand\r\n        }, type)\r\n            .then((response: any) => {\r\n                if (response === 200) {\r\n                    if (type === 'password') {\r\n                        sendMessage('notification', true, {message: 'Password sent successfully', type: 'success', duration: 3000});\r\n                    }\r\n                } else {\r\n                    sendMessage('notification', true, {'type': 'failure', message: 'Invalid Email error', duration: 3000});\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                sendMessage('notification', true, {'type': 'failure', message: 'Bad request', duration: 3000});\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"login\">\r\n                {!this.state.newuser && <div className=\"container\">\r\n                    <form method=\"GET\" onSubmit={this.login} noValidate>\r\n                        \r\n                        <div className=\"form\">\r\n                            <ArcText label=\"E-mail\" id=\"email\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                            <ArcText label=\"Password\" type=\"password\"  id=\"password\"   data={this.state} handleChange={e => this.handleChange(e)} />\r\n                        </div>\r\n                        <br />\r\n                        <button className=\"primary animate out right\"  onClick={this.login}>Sign In</button>\r\n                        <br /> <br />\r\n                        Don't have an account? <button className=\"default animate right small\"  onClick={this.toggle}>Sign Up</button>\r\n                    </form>\r\n                    <br />\r\n                    <button className=\"default animate right small\" onClick={this.sentEmailWithCode}>Forgot password ?</button>\r\n                </div>}\r\n\r\n                {this.state.newuser && <div className=\"container\">\r\n                    <form method=\"GET\" onSubmit={this.signup} noValidate>\r\n                        <h1>Sign Up</h1>\r\n                        <div className=\"form\">\r\n                        <ArcText label=\"Name\" id=\"name\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                        <ArcText label=\"E-mail\" id=\"email\" data={this.state} handleChange ={e=> this.handleChange(e)} />\r\n                        <ArcText label=\"Password\" type=\"password\" id=\"password\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                        <ArcText label=\"Repeat Password\" type=\"password\"  id=\"repeatpassword\" data={this.state} handleChange={e => this.handleChange(e)} />\r\n                        </div>\r\n                        <br />\r\n                        <button className=\"primary block\" onClick={this.signup}>Create Account</button>\r\n                        <br /> <br />\r\n                        Already have an account? <button className=\"secondary block\" onClick={this.toggle}>Sign In</button> \r\n                    </form>\r\n                </div>\r\n                }\r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authorization: state.authorization\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(withCookies(Login));","import React from 'react';\r\nimport './style.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default class Landing extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"space-bottom-4\">\r\n          <h3>Mirror rorriM</h3>\r\n          <p><em><b>Queen</b></em> Magic Mirror on the wall, who now is the fairest one of all?</p>\r\n          <p><em><b>Magic Mirror</b></em> Over the seven jewelled hills, beyond the seventh fall, in the cottage of the seven dwarfs, dwells Snow White, fairest one of all.</p>\r\n          <p><em><b>Queen</b></em> Snow White lies dead in the forest.  The huntsman has brought me proof. [holds up her opened box] Behold, her heart.</p>\r\n          <p><em><b>Magic Mirror</b></em> Snow White still lives, the fairest in the land. 'Tis the heart of a pig you hold in your hand.</p>\r\n          <p><em><b>Queen</b></em> [repulsed] The heart of a pig?! Then I've been tricked!</p>\r\n        </div>\r\n        <div className=\"action\">\r\n          <NavLink to=\"/tenant\" className=\"navitem\" activeClassName=\"active\"><button className=\"primary animate out right\">Create Tenant</button></NavLink>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth } from '../../actions/AuthActions';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n  authorization: Authorization,\r\n  getAuth: Function,\r\n  path: string,\r\n  render: any\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nclass PrivateRoute extends Component<Props, State> {\r\n  componentWillMount() {\r\n    this.props.getAuth();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.authorization.isAuth && <Route path={this.props.path} render={this.props.render} />}\r\n        {!this.props.authorization.isAuth && <Redirect to={{pathname: \"/home\"}} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  authorization: state.authorization\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth })(PrivateRoute);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport PropTypes from 'prop-types';\r\nimport {withCookies, ReactCookieProps} from 'react-cookie';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\n\r\ninterface Props extends ReactCookieProps {\r\n    authorization: Authorization,\r\n    addAuth: Function,\r\n    getAuth: Function,\r\n    removeAuth: Function,\r\n    cookies: any\r\n}\r\n\r\ninterface State {\r\n\r\n}\r\n\r\nclass AuthInit extends Component<Props, State> {\r\n    componentWillMount() {\r\n        if (!this.props.authorization.isAuth && this.props.cookies.get('isAuth')) {\r\n            this.props.addAuth({\r\n                isAuth: true,\r\n                token: this.props.cookies.get('token'),\r\n                secret: this.props.cookies.get('secret'),\r\n                name: this.props.cookies.get('name')\r\n            });\r\n        }\r\n        this.props.getAuth();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <></>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    authorization: state.authorization\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth })(withCookies(AuthInit));","import { GET_PROFILE, SET_PROFILE } from './types';\r\n\r\nexport const getProfile = () => dispatch => {\r\n    dispatch({\r\n        type: GET_PROFILE\r\n    });\r\n}\r\n\r\nexport const setProfile = (payload) => dispatch => {\r\n    dispatch({\r\n        type: SET_PROFILE,\r\n        payload: payload\r\n    });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { receiveMessage } from '../../events/MessageService';\r\nimport { Message } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n}\r\n\r\ninterface State {\r\n    backdrop: string\r\n}\r\n\r\nclass Backdrop extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            backdrop: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe(\r\n            message => {\r\n                if (message.name === 'dialog') {\r\n\r\n                }\r\n            }\r\n        )\r\n        // if (nextProps.event && nextProps.event.name === 'dialog') {\r\n        //     if (nextProps.event.signal) {\r\n        //         this.setState({\r\n        //             backdrop: 'backdrop-fade'\r\n        //         })\r\n        //     } else {\r\n        //         this.setState({\r\n        //             backdrop: ''\r\n        //         })\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.backdrop}></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Backdrop;","import React, { Component } from 'react';\r\nimport './style.scss';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n}\r\n\r\ninterface State {\r\n    notification: any,\r\n    spinner: boolean,\r\n    lastNotificationType?: string\r\n}\r\n\r\nclass Notification extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            spinner: false,\r\n            notification: null,\r\n            lastNotificationType: undefined\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        receiveMessage().subscribe(message => {\r\n            if (message.name === 'notification') {\r\n                if (!message.signal) {\r\n                    this.setState({\r\n                        notification: null,\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        notification: message.data,\r\n                        lastNotificationType: message.data.type,\r\n                        spinner: false\r\n                    })\r\n                    \r\n                    if (message.data && message.data.duration) {\r\n                        setTimeout(() => {\r\n                            sendMessage('notification', false);\r\n                        }, message.data.duration);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (message.name === 'spinner') {\r\n                this.setState({\r\n                    spinner: message.signal\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    processNextProps(nextProps) {\r\n        if (nextProps.event && nextProps.event.name === 'spinner') {\r\n            this.setState({\r\n                spinner: nextProps.event.signal\r\n            })\r\n        }\r\n\r\n        if (nextProps.event && nextProps.event.name === 'notification') {\r\n            if (!nextProps.event.signal) {\r\n                this.setState({\r\n                    notification: null,\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    notification: nextProps.event.data,\r\n                    lastNotificationType: nextProps.event.data.type,\r\n                    spinner: false\r\n                })\r\n                \r\n                if (nextProps.event.data.duration) {\r\n                    setTimeout(() => {\r\n                        // this.props.sendEvent('notification', false);\r\n                    }, nextProps.event.data.duration);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            {/* {this.state.notification && <div className={\"notification \" + this.state.notification.type}><div className=\"message\">{this.state.notification.message}</div></div>} */}\r\n            {<div className={\"notification \" + (this.state.notification ? \" show \" + this.state.notification.type : (\" hide \" + this.state.lastNotificationType))}><div className=\"message\">{this.state.notification? this.state.notification.message : \"\"}</div></div>}\r\n            {/* {this.state.spinner && <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>} */}\r\n            {/* {this.state.spinner && <div className=\"lds-facebook\"><div></div><div></div><div></div></div>} */}\r\n            {this.state.spinner && <div className=\"lds-dual-ring\"></div>}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Notification;","import React, { Component } from 'react';\r\n\r\nimport './style.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\n\r\ninterface Props {\r\n    authorization: Authorization,\r\n    profile: Profile\r\n}\r\n\r\ninterface State {\r\n    menu: boolean\r\n}\r\n\r\nclass Links extends Component<Props, State> {\r\n    toggleMenu = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"links\">\r\n                {this.props.authorization.isAuth &&\r\n                    <>\r\n                    <NavLink to={\"/\" + this.props.profile.tenant + \"/home\"} className=\"navitem\" activeClassName=\"active\">Home</NavLink>\r\n                    <NavLink to={\"/\" + this.props.profile.tenant + \"/settings\"} className=\"navitem\" activeClassName=\"active\">Settings</NavLink>\r\n                    </>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Links;","import React, { Component } from 'react';\r\n\r\nimport './style.scss';\r\nimport mirror_white from '../../images/mirror_white.svg';\r\nimport mirror_black from '../../images/mirror_black.svg';\r\nimport Links from './Links';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\n// import SearchBar from '../Ux/SearchBar';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\nimport SearchBar from '../Ux/SearchBar';\r\n\r\ninterface Props {    \r\n    sendEvent: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    authorization: Authorization\r\n    getProfile: Function,\r\n    profile: Profile,\r\n    login: Function,\r\n    transparent: boolean,\r\n    logout: Function,\r\n    toggleSettings: any\r\n}\r\n\r\ninterface State {\r\n    showSettings: boolean,\r\n    showSearchBar: boolean\r\n}\r\n\r\nclass Desktop extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.state = {\r\n            showSearchBar: false,\r\n            showSettings: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe(message => {\r\n            if (message.name === 'show-navbar-element') {\r\n                this.setState({\r\n                    showSearchBar: message.signal\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    signin = (type) => {\r\n        this.props.login(type);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={(this.props.transparent ? \"navbar desktop transparent\" : \"navbar desktop\")}>\r\n                <div className=\"left\">\r\n                    {!this.props.transparent && this.props.profile.theme === 'theme_light' && <img className=\"logo\" src={mirror_white} alt=\"Curate logo\" />}\r\n                    {(this.props.transparent || this.props.profile.theme === 'theme_dark') && <img className=\"logo\" src={mirror_white} alt=\"Curate logo\" />}\r\n                    <Links authorization={this.props.authorization} profile={this.props.profile}/>\r\n                    {this.state.showSearchBar && <SearchBar alt />}\r\n                </div>\r\n                <div className=\"right\">\r\n                    <div className=\"action\">\r\n                        {/* <button className=\"default disabled small\" onClick={this.props.toggleSettings}><i className=\"material-icons\">palette</i>Theme</button> */}\r\n                        {this.props.authorization.isAuth && \r\n                            <button className=\"primary animate in alt right align-left small\" onClick={this.props.toggleSettings}><i className=\"material-icons\">brush</i>Action 1</button>}\r\n                        {this.props.authorization.isAuth && \r\n                            <button className=\"primary animate out alt right align-right small\" onClick={this.props.logout()}><i className=\"material-icons\">power_settings_new</i>Logout</button>}\r\n                        {!this.props.authorization.isAuth && \r\n                            <button className=\"primary animate in alt right align-left small\" onClick={() => this.signin('signin')}><i className=\"material-icons\">person</i>Login</button>}\r\n                        {!this.props.authorization.isAuth && \r\n                            <button className=\"primary animate in alt right align-right small\" onClick={() => this.signin('signup')}><i className=\"material-icons\">person_add</i>Signup</button>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Desktop;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './style.scss';\r\nimport mirror_white from '../../images/mirror_white.svg';\r\nimport mirror_white_small from '../../images/mirror_white_small.svg';\r\nimport mirror_black from '../../images/mirror_black.svg';\r\nimport Links from './Links';\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport SearchBar from '../Ux/SearchBar';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\n// import SearchBar from '../Ux/SearchBar';\r\n\r\ninterface Props {    \r\n    sendEvent: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    authorization: Authorization\r\n    getProfile: Function,\r\n    profile: Profile,\r\n    login: Function,\r\n    transparent: boolean,\r\n    logout: Function,\r\n    toggleSettings: any\r\n}\r\n\r\ninterface State {\r\n    menu: boolean,\r\n    showSearchBar: boolean\r\n}\r\n\r\nclass Mobile extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.state = {\r\n            showSearchBar: false,\r\n            menu: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe(message => {\r\n            if (message.name === 'show-navbar-element') {\r\n                this.setState({\r\n                    showSearchBar: message.signal\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    signin = (type) => {\r\n        this.props.login(type);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className={(this.props.transparent ? \"navbar mobile transparent\" : \"navbar mobile\")}>\r\n                <div className=\"left\">\r\n                    {!this.state.showSearchBar && !this.props.transparent && this.props.profile.theme === 'theme_light' && <img className=\"logo\" src={mirror_white} alt=\"Mirror logo\" />}\r\n                    {!this.state.showSearchBar && (this.props.transparent || this.props.profile.theme === 'theme_dark') && <img className=\"logo\" src={mirror_white} alt=\"Mirror logo\" />}\r\n                    {this.state.showSearchBar && !this.props.transparent && this.props.profile.theme === 'theme_light' && <img className=\"logo\" src={mirror_white_small} alt=\"Mirror logo\" />}\r\n                    {this.state.showSearchBar && (this.props.transparent || this.props.profile.theme === 'theme_dark') && <img className=\"logo\" src={mirror_white_small} alt=\"Mirror logo\" />}\r\n                    {this.state.showSearchBar && <SearchBar alt />}\r\n                    {/* links */}\r\n                </div>\r\n                <div className=\"right\">\r\n                    {/* <div className=\"settings-icon\" onClick={this.props.toggleSettings}><i className=\"material-icons\">settings</i></div> */}\r\n                    <div className={(this.state.menu ? \"menu active\" : \"menu\")} onClick={this.toggleMenu}><div></div></div>\r\n                    {/* action login */}\r\n                </div>\r\n            </div>\r\n            <div className={(this.state.menu ? \"slider show\" : \"slider hide\")} onClick={this.toggleMenu}>\r\n                <div className={(this.state.menu ? \"container\": \"container hidetext\")} onClick={this.toggleMenu}>\r\n                    <div className=\"action\">\r\n                        <div className=\"settings-icon\" onClick={this.props.toggleSettings}>\r\n                            {this.props.authorization.isAuth && <button className=\"invert animate alt small\" onClick={this.props.toggleSettings}><i className=\"material-icons\">brush</i>Action 1</button>}\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                            {this.props.authorization.isAuth && <button className=\"invert animate alt small\" onClick={this.props.logout()}><i className=\"material-icons\">power_settings_new</i>Logout</button>}\r\n                            {!this.props.authorization.isAuth && <button className=\"invert animate alt small left\" onClick={() => this.signin('signin')}><i className=\"material-icons\">person</i>Login</button>}\r\n                            {!this.props.authorization.isAuth && <button className=\"invert animate alt small right\" onClick={() => this.signin('signup')}><i className=\"material-icons\">person_add</i>Signup</button>}\r\n                        </div>\r\n                    </div>\r\n                    <Links authorization={this.props.authorization} profile={this.props.profile}/>\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Mobile;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {withRouter} from 'react-router'\r\nimport { getProfile, setProfile } from '../../actions/ProfileActions';\r\nimport {withCookies} from 'react-cookie';\r\n\r\nimport './style.scss';\r\nimport Desktop from './Desktop';\r\nimport Mobile from './Mobile';\r\n\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\n\r\ninterface Props {    \r\n    sendEvent: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    authorization: Authorization,\r\n    getProfile: Function,\r\n    setProfile: Function,\r\n    profile: Profile,\r\n    login: Function,\r\n    transparent: boolean,\r\n    logout: Function,\r\n    toggleSettings: any,\r\n    history: any,\r\n    cookies: any,\r\n    location: any,\r\n    match: any\r\n}\r\n\r\ninterface State {\r\n    visible: boolean,\r\n    mobilemenu: string,\r\n    chooseTheme: boolean,\r\n    showSettings: boolean,\r\n    transparentNavBar: boolean,\r\n    firstLoad: boolean\r\n}\r\n\r\nclass Navigation extends Component<Props, State> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.state = {\r\n            visible: false,\r\n            mobilemenu: 'hide',\r\n            chooseTheme: false,\r\n            showSettings: false,\r\n            transparentNavBar: false,\r\n            firstLoad: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe(message => {\r\n            if (message.name === 'navbar-transparency') {\r\n                this.setState({\r\n                    transparentNavBar: message.signal\r\n                })\r\n            }\r\n            if (message.name === 'loggedin') {\r\n                // this.props.reloadProfile(nextProps.authorization);\r\n                this.setState({\r\n                    firstLoad: false\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.state.firstLoad && nextProps.authorization && nextProps.authorization.isAuth) {\r\n            // this.props.reloadProfile(nextProps.authorization);\r\n            this.setState({\r\n                firstLoad: false\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleDarkMode = () => {\r\n        if (this.props.profile.theme === 'theme_dark') {\r\n            this.props.setProfile({\r\n                ...this.props.profile,\r\n                theme: 'theme_light'\r\n            })   \r\n        } else  {\r\n            this.props.setProfile({\r\n                ...this.props.profile,\r\n                theme: 'theme_dark'\r\n            })   \r\n        }\r\n    }\r\n\r\n    changeTextSize = (size) => {\r\n        this.props.setProfile({\r\n            ...this.props.profile,\r\n            textSize: size\r\n        })\r\n    }\r\n\r\n    changeThemeColor = (color) => {\r\n        this.props.setProfile({\r\n            ...this.props.profile,\r\n            themeColor: color\r\n        })\r\n    }\r\n\r\n    login = (type) => {\r\n        this.props.history.push('/' + this.props.profile.tenant + '/login?type=' + type);\r\n    }\r\n\r\n    toggleSettings = () => {\r\n        this.setState({\r\n            showSettings: !this.state.showSettings\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"nav\">\r\n                <Desktop {...this.props} logout={this.props.logout} login={this.login} toggleSettings={this.toggleSettings} transparent={this.state.transparentNavBar} />\r\n                <Mobile {...this.props} logout={this.props.logout} login={this.login} toggleSettings={this.toggleSettings} transparent={this.state.transparentNavBar} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProfile, setProfile })(withCookies(withRouter(Navigation)));","import React from 'react';\r\nimport './style.scss';\r\nimport ArcText from '../Ux/ArcText';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport { sentTenantUrl } from './TenantService'\r\nimport {preSignup, createTenant } from '../Auth/AuthService'\r\nimport { Authorization, Profile } from '../Types/GeneralTypes';\r\nimport { isEmptyOrSpaces } from '../Utils';\r\n\r\ninterface Props {\r\n  getProfile: Function,\r\n  profile: Profile,\r\n  history: any\r\n}\r\ninterface State {\r\n  name: string,\r\n  email: string,\r\n  pageNo: number,\r\n  password: string,\r\n  repeatPassword: string,\r\n  jwtPassword:string,\r\n  banner: any,\r\n  created: boolean,\r\n  errorFields: {\r\n    name: boolean,\r\n    email: boolean,\r\n    password: boolean,\r\n    repeatPassword: boolean,\r\n    jwtPassword:boolean\r\n  }\r\n}\r\nexport default class Tenant extends React.Component<Props, State> {\r\n\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.props.getProfile();\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      repeatPassword: '',\r\n      jwtPassword:'',\r\n      banner: null,\r\n      pageNo: 1,\r\n      created: false,\r\n      errorFields: {\r\n        name: false,\r\n        email: false,\r\n        password: false,\r\n        repeatPassword: false,\r\n        jwtPassword: false\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n      this.setState(\r\n          {\r\n              ...this.state,\r\n              [event.currentTarget.name]: event.currentTarget.value,\r\n              errorFields: {\r\n                ...this.state.errorFields,\r\n                [event.currentTarget.name]: false\r\n              }\r\n          }\r\n      )\r\n  }\r\n\r\n  sentTenantUrl =() =>{\r\n    sentTenantUrl({\r\n      name: this.state.name,\r\n      })\r\n      .then((response: any) => {\r\n          if (response === 200) {\r\n            sendMessage('notification', true, {message: 'Password sent successfully', type: 'success', duration: 3000});\r\n          } else {\r\n            sendMessage('notification', true, {'type': 'failure', message: 'Invalid Email error', duration: 3000});\r\n          }\r\n      })\r\n      .catch((error) => {\r\n          sendMessage('notification', true, {'type': 'failure', message: 'Bad request', duration: 3000});\r\n      })\r\n  }\r\n\r\n  clearError() {\r\n    this.setState({\r\n      errorFields: {\r\n        name: false,\r\n        email: false,\r\n        password: false,\r\n        repeatPassword: false,\r\n        jwtPassword:false\r\n      }\r\n    })\r\n  }\r\n\r\n  setError(fieldName) {\r\n    this.setState({\r\n      errorFields: {\r\n        ...this.state.errorFields,\r\n        [fieldName]: true\r\n      }\r\n    })\r\n  }\r\n\r\n  validate() {\r\n    if (isEmptyOrSpaces(this.state.name)) {\r\n      this.setError('name');\r\n      sendMessage('notification', true, {type: 'failure', message: 'Tenant name cannot be empty', duration: 3000});\r\n      return false;\r\n    }\r\n    if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.state.email))) {\r\n      this.setError('email');\r\n      sendMessage('notification', true, {type: 'failure', message: 'Email ID is invalid', duration: 3000});\r\n      return false;\r\n    } \r\n    \r\n    if (isEmptyOrSpaces(this.state.password)){\r\n      this.setError('password');\r\n      sendMessage('notification', true, {'type': 'failure', message: 'Password cannot be empty', duration: 3000});\r\n      return false;\r\n    }\r\n\r\n    if (this.state.password !== this.state.repeatPassword){\r\n      this.setError('repeatPassword');\r\n      sendMessage('notification', true, {'type': 'failure', message: 'Password and repeat password should be same', duration: 3000});\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  submit = (event) => {\r\n    event.preventDefault();\r\n    sendMessage('spinner');\r\n    const that = this;\r\n    this.clearError();\r\n    \r\n    if (!this.validate()) {\r\n      return;\r\n    }\r\n\r\n    preSignup({name:that.state.name}).then((response) => {\r\n      if (response.status === 200) {\r\n        this.createTenant(response.data);\r\n      }\r\n    });\r\n  }\r\n\r\n  handleImageChange = (e) => {\r\n    this.setState({\r\n      banner: e.target.files[0]\r\n    })\r\n  };\r\n\r\n  createTenant = (preSignupData) => {\r\n    createTenant({\r\n      tenantName: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      jwtPassword:this.state.jwtPassword,\r\n      solution: preSignupData.solution,\r\n      salt: preSignupData.salt,\r\n      banner: this.state.banner\r\n    })\r\n    .then((response) => {\r\n      if (response.status === 200) {\r\n        sendMessage('notification', true, {'type': 'success', message: 'Tenant has been created. You can proceed now', duration: 3000});\r\n        this.setState({pageNo: this.state.pageNo+1, created: true});\r\n      } else {\r\n        sendMessage('notification', true, {message: 'We are facing some problem, please try after sometime', duration: 3000});\r\n        return\r\n      }\r\n    }).catch((error)=>{\r\n      sendMessage('notification', true, {'type': 'failure', message: 'Unknown error. Please try again or at a later time', duration: 3000});\r\n    });\r\n  }\r\n\r\n  gotoTenantPage = () => {\r\n    this.props.history.push(\"/\" + this.state.name + \"/home\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"tenant boxed\">\r\n        {!this.state.created && <div className=\"typography-3 space-bottom-4\">Tenant creation</div>}\r\n        {this.state.created && <div className=\"typography-3 space-bottom-4\">Tenant [{this.state.name}] available now</div>}\r\n        {this.state.pageNo === 1 && <div className=\"form\">\r\n          <ArcText id=\"name\" data={this.state} label=\"Tenant Name\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></ArcText>\r\n          <ArcText id=\"email\" data={this.state} label=\"Administrator Email\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></ArcText>\r\n          <ArcText id=\"password\" type=\"password\" data={this.state} label=\"Administrator Password\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></ArcText>\r\n          <ArcText id=\"repeatPassword\" type=\"password\" data={this.state} label=\"Repeat Password\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></ArcText>\r\n          <ArcText id=\"jwtPassword\" type=\"password\" data={this.state} label=\"JWT Password\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></ArcText>\r\n          <label className=\"file-upload space-top-1 space-bottom-4\">\r\n            <input type=\"file\" accept=\"image/png, image/jpeg\" onChange={this.handleImageChange} required/>\r\n            <i className=\"material-icons\">add_photo_alternate</i>\r\n            {!this.state.banner && \"Choose Banner/Cover Image\"}\r\n            {this.state.banner && this.state.banner.name}\r\n          </label>\r\n          <div className=\"action\">\r\n            <button className=\"primary animate in right\" onClick={this.submit}>Create Tenant</button>\r\n          </div>\r\n        </div>}\r\n        {this.state.created && <button className=\"primary animate out right\" onClick={this.gotoTenantPage}>Take me to my tenant</button>}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './ViewResolver.scss';\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n    sideLabel?: string\r\n}\r\n\r\ninterface State {\r\n    views: any,\r\n    main?: any,\r\n    side?: any,\r\n    showSide: boolean,\r\n    mobileViewPort: any\r\n}\r\n\r\nclass ViewResolver extends Component<Props, State> {\r\n\r\n    _isMounted = false;\r\n    \r\n    viewPort = window.matchMedia(\"(max-width: 767px)\");\r\n\r\n    viewPortChange = (port) => {\r\n        this.setState({\r\n            mobileViewPort: port.matches\r\n        });\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            views: this.props.children,\r\n            showSide: false,\r\n            mobileViewPort: false\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.initializeViews();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        this.viewPortChange(this.viewPort);\r\n        this.viewPort.addListener(this.viewPortChange);\r\n\r\n        receiveMessage().subscribe(message => {\r\n            if (this._isMounted) {\r\n                if (message.name === 'sidebar') {\r\n                    this.setState({\r\n                        showSide: message.signal\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    initializeViews() {\r\n        React.Children.toArray(this.state.views).forEach((node) => {\r\n            // node.type.name is minified after build and so static build result has different alphabet\r\n            // if (node.type.name === 'View') {\r\n                if (node.props.main) {\r\n                    this.setState({\r\n                        main: node\r\n                    })\r\n                } else if (node.props.side) {\r\n                    this.setState({\r\n                        side: node\r\n                    })\r\n                }\r\n            // }\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.children) {\r\n            this.setState({\r\n                views: nextProps.children\r\n            }, () => {\r\n                this.initializeViews();\r\n            })\r\n        }\r\n    }\r\n\r\n    toggleSideView = () => {\r\n        sendMessage('sidebar', !this.state.showSide);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            {!this.state.mobileViewPort && <div className=\"view-desktop\">\r\n                {this.state.side && <div className=\"view-side\">\r\n                    {this.state.side}\r\n                </div>}\r\n                <div className={'view-content' + (this.state.side ? ' side-present' : '')}>\r\n                    {this.state.main}\r\n                </div>\r\n            </div>}\r\n\r\n            {this.state.mobileViewPort && <div className=\"view-mobile\">\r\n                <div className={(this.state.showSide ? \"slider show\" : \"slider hide\")}>\r\n                    <div className=\"topbar\" onClick={this.toggleSideView}>\r\n                        <div>\r\n                            <button className=\"default block alt noborder\" onClick={this.toggleSideView}>\r\n                                {!this.state.showSide && <><i className=\"material-icons\">expand_more</i>{this.props.sideLabel ? this.props.sideLabel.toUpperCase() : 'MENU'}</>}\r\n                                {this.state.showSide && <><i className=\"material-icons\">expand_less</i>COLLAPSE</>}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"view-side\">\r\n                        {this.state.showSide && this.state.side}\r\n                    </div>\r\n                </div>\r\n                {!this.state.showSide && <div className=\"view-main\">\r\n                    {this.state.main}\r\n                </div>}\r\n            </div>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ViewResolver;","import React, { Component } from 'react';\r\n\r\ninterface Props {\r\n    main?: any,\r\n    side?: any\r\n}\r\n\r\ninterface State {\r\n}\r\n\r\nclass View extends Component<Props, State> {\r\n    render() {\r\n        return (\r\n            <div>\r\n               {/* {this.props} */}\r\n               {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default View;","import React, { Component } from 'react';\r\nimport './Sidebar.scss';\r\nimport { sendMessage, receiveMessage } from '../../events/MessageService';\r\n\r\ninterface Props {\r\n    show?: boolean,\r\n    elements?: Array<string>,\r\n    label: string,\r\n    icon: string,\r\n    number?: number,\r\n    animate?: boolean\r\n}\r\n\r\ninterface State {\r\n    show: boolean,\r\n    elements: Array<string>\r\n}\r\n\r\nclass Sidebar extends Component<Props, State> {\r\n\r\n    _isMounted = false;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: this.props.show ? true : false,\r\n            elements: this.props.elements ? this.props.elements : []\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            show: !this.state.show\r\n        }, () => sendMessage('sidebarExpanded', this.state.show, {label: this.props.label}));\r\n    }\r\n\r\n    hide = () => {\r\n        this.setState({\r\n            show: false\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        receiveMessage().subscribe(message => {\r\n            if (this._isMounted) {\r\n                if (message.name === 'sidebarExpanded' && message.signal && message.data && message.data.label !== this.props.label) {\r\n                    this.setState({\r\n                        show: false\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    render() {\r\n        const elements = this.state.elements.map((item: any) => (\r\n            <div key={item.label} className=\"element\" onClick={item.action}><i className=\"material-icons\">{item.icon}</i><div className=\"label-text\">{item.label}</div></div>\r\n        ))\r\n        return (            \r\n            <div className=\"sidebar\">\r\n                <div className={this.state.show ? \"header active\" : \"header\"} onClick={this.toggle}>\r\n                    <div className=\"label\">\r\n                        {/* <i className=\"material-icons\">{this.props.icon}</i> */}\r\n                        <div className=\"label-text\">\r\n                            {this.props.label}\r\n                            {this.props.number !== undefined && <div className=\"number\">{this.props.number}</div>}\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"aria\"><i className=\"material-icons\">{this.state.show ? 'expand_less' : 'expand_more'}</i></div> */}\r\n                    <div className=\"aria\"><i className={this.state.show ? \"material-icons collapse\" : \"material-icons\"}>keyboard_arrow_left</i></div>\r\n                </div>\r\n                <div className={this.state.show ? \"content show \" + (this.props.animate ? \"animate\" : \"static\") : \"content hide \" + (this.props.animate ? \"animate\" : \"static\")}>\r\n                    {elements}\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React, { Component } from 'react'\r\nimport './style.scss';\r\nimport ArcText from '../Ux/ArcText';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { httpGet, httpPost, httpPut } from \"../Lib/RestTemplate\";\r\nimport { constants } from '../Constants';\r\n\r\ninterface Props {\r\n    match: any,\r\n    authorization: Authorization\r\n}\r\n\r\ninterface State { \r\n    stage: any\r\n}\r\n    \r\nexport default class Stages extends Component<Props, State> {\r\n    constructor(props: Props){\r\n        super(props)\r\n        this.state = {\r\n            stage: [{name:''}]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        httpGet(constants.API_URL_STAGE + '/' + \r\n        this.props.match.params.tenant + '/', \r\n        {headers: {\r\n            Authorization: this.props.authorization.token\r\n        }}\r\n        ).then ((response) => {\r\n            this.setState({\r\n                stage: response.data\r\n                })\r\n            }).catch(() => {})\r\n    }\r\n\r\n    \r\n    handleAddStage = () => {\r\n        this.setState({\r\n            stage: this.state.stage.concat([{name: \"\" }])\r\n        })\r\n    }\r\n\r\n    handleChangeStage = (evt, idx) => {\r\n        const localStage = [...this.state.stage]\r\n        localStage[idx] = {...localStage[idx], name:evt.target.value}\r\n        this.setState({\r\n            stage: localStage\r\n        })\r\n    }\r\n\r\n    handleRemoveStage = idx => () => {\r\n        this.setState({\r\n            stage: this.state.stage.filter((s,sidx) => idx !== sidx)\r\n        })\r\n    } \r\n\r\n    saveStages = () => {\r\n        return httpPut(constants.API_URL_STAGE + '/' + this.props.match.params.tenant + '/', \r\n        this.state.stage ,{\r\n            headers: {\r\n                Authorization: this.props.authorization.token\r\n                }\r\n            })\r\n                .then(function(response){\r\n                    return Promise.resolve(response)\r\n                    })\r\n        }\r\n\r\n    resetStages = () => {\r\n        httpGet(constants.API_URL_STAGE + '/' + \r\n        this.props.match.params.tenant + '/', \r\n        {headers: {\r\n            Authorization: this.props.authorization.token\r\n        }}\r\n        ).then ((response) => {\r\n            this.setState({\r\n                stage: response.data\r\n                })\r\n                }).catch(() => {})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"form\">\r\n                    <button className=\"secondary animate out right align-left\" onClick={ this.handleAddStage }><i className=\"material-icons\">label_important</i>New Stage</button>\r\n                    <button className=\"primary animate out right align-center\" onClick={this.saveStages}><i className=\"material-icons\">save_alt</i>Save</button>\r\n                    <button className=\"default animate in right align-right\" onClick={this.resetStages}><i className=\"material-icons\">undo</i>Reset</button>\r\n                    <div className=\"space-bottom-2\"></div>\r\n                    {this.state.stage && this.state.stage.map((item, idx) => (\r\n                        <div className=\"stage-row\" key={idx}>\r\n                            <div><ArcText  id=\"name\" label={`Level ${idx+1}`} data={item} handleChange ={ (e) =>this.handleChangeStage(e, idx) } /></div>\r\n                            <div><button className=\"secondary animate in right space-bottom-2\" onClick={this.handleRemoveStage(idx)}><i className=\"material-icons\">delete</i>Remove</button></div>\r\n                            </div>\r\n                            ))}\r\n                            {(!this.state.stage || this.state.stage.length === 0) && <div>No custom stages defined</div>}\r\n                            </div>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './style.scss';\r\nimport { sendMessage } from '../../events/MessageService';\r\nimport ArcText from '../Ux/ArcText';\r\nimport { getTenant } from '../Tenant/TenantService';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport ViewResolver from '../Ux/ViewResolver';\r\nimport View from '../Ux/View';\r\nimport Sidebar from '../Ux/Sidebar';\r\nimport { any } from 'prop-types';\r\nimport Stages from '../Stages/index'\r\n\r\ninterface Props {\r\n    match: any,\r\n    setProfile: Function,\r\n    profile: any,\r\n    authorization: Authorization\r\n}\r\n\r\ninterface State { \r\n  name: string,\r\n  email: string,\r\n  jwtPassword:string,\r\n  banner: any,\r\n  errorFields: {\r\n    name: boolean,\r\n    email: boolean,\r\n    jwtPassword:boolean\r\n  },\r\n\r\n  section: String,\r\n\r\n  sidebarElements: any\r\n}\r\n\r\nclass Settings extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n          name: '',\r\n          email: '',\r\n          jwtPassword:'',\r\n          banner: null,\r\n          errorFields: {\r\n            name: false,\r\n            email: false,\r\n            jwtPassword: false\r\n          },\r\n          section: 'tenantProfile',\r\n          \r\n          sidebarElements: {\r\n            tenant: [\r\n                {\r\n                    label: 'Profile',\r\n                    action: () => this.chooseSection('tenantProfile'),\r\n                    icon: 'home'\r\n                },\r\n                {\r\n                    label:'Support levels',\r\n                    action: () => this.chooseSection('stage'),\r\n                    icon:'fast_forward'\r\n                },\r\n                {\r\n                    label:'Training dataset',\r\n                    action: () => this.chooseSection('trainingDataset'),\r\n                    icon:'bubble_chart'\r\n                },\r\n                {\r\n                    label:'Article categories',\r\n                    action: () => this.chooseSection('articleCategories'),\r\n                    icon:'compare'\r\n                }\r\n            ],\r\n            user: [\r\n                {\r\n                    label: 'Profile',\r\n                    action: () => this.chooseSection('userProfile'),\r\n                    icon: 'person'\r\n                },\r\n                {\r\n                    label: 'Password',\r\n                    action: () => this.chooseSection('userPassword'),\r\n                    icon: 'security'\r\n                }\r\n            ]\r\n          }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.props.setProfile({\r\n        ...this.props.profile,\r\n        tenant: this.props.match.params.tenant\r\n      })\r\n\r\n        getTenant(this.props.match.params.tenant,  {\r\n            headers: {\r\n                Authorization: this.props.authorization.token\r\n            }\r\n        }).then ((response) => {\r\n            this.setState({\r\n                name: response.data.name,\r\n                email: response.data.ownerEmail,\r\n                jwtPassword: response.data.jwtPassword\r\n            })\r\n        }).catch(() => {\r\n        })\r\n    }\r\n\r\n    chooseSection = (section: String) => {\r\n        this.setState({\r\n            section: section\r\n        });\r\n        sendMessage('sidebar', false);\r\n    }\r\n\r\n    handleImageChange = (e) => {\r\n      this.setState({\r\n        banner: e.target.files[0]\r\n      })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {\r\n                ...this.state,\r\n                [event.currentTarget.name]: event.currentTarget.value,\r\n                errorFields: {\r\n                  ...this.state.errorFields,\r\n                  [event.currentTarget.name]: false\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"settings\">\r\n                \r\n                <ViewResolver sideLabel='More options'>\r\n                    <View main>\r\n                        {this.state.section === 'tenantProfile' && \r\n                        <>\r\n                        <div className=\"typography-3 space-bottom-2\">Tenant Profile</div>\r\n                        <div className=\"form\">\r\n                            <ArcText id=\"email\" data={this.state} label=\"Administrator Email\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></ArcText>\r\n                            <ArcText id=\"jwtPassword\" type=\"password\" data={this.state} label=\"JWT Password\"  handleChange={e => this.handleChange(e)} errorFields={this.state.errorFields}></ArcText>\r\n                            <label className=\"file-upload space-top-1 space-bottom-4\">\r\n                                <input type=\"file\" accept=\"image/png, image/jpeg\" onChange={this.handleImageChange} required/>\r\n                                <i className=\"material-icons\">add_photo_alternate</i>\r\n                                {!this.state.banner && \"Choose Banner/Cover Image\"}\r\n                                {this.state.banner && this.state.banner.name}\r\n                            </label>\r\n                        </div>\r\n                        </>}\r\n\r\n                        {this.state.section === 'stage' &&\r\n                        <div className=\"stage\">\r\n                           <Stages match={this.props.match} authorization = {this.props.authorization} />   \r\n                        </div>}\r\n\r\n                        {this.state.section === 'userProfile' && \r\n                        <>\r\n                        <div className=\"typography-3 space-bottom-2\">User Profile</div>\r\n                        </>}\r\n\r\n                        {this.state.section === 'userPassword' && \r\n                        <>\r\n                        <div className=\"typography-3 space-bottom-2\">Change Login Password</div>\r\n                        </>}\r\n                    </View>\r\n                    <View side>\r\n                            <div className=\"filter-container\">\r\n                                <div className=\"section-main\">\r\n                                    <Sidebar label=\"Tenant\" elements={this.state.sidebarElements['tenant']} icon=\"home\" animate />\r\n                                    <Sidebar label=\"User\" elements={this.state.sidebarElements['user']} icon=\"account_circle\" animate />\r\n                                </div>\r\n                            </div>\r\n                    </View>\r\n                </ViewResolver>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Settings;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport './style.scss';\r\nimport Home from '../Home';\r\nimport { HashRouter } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport Login from '../Auth/Login';\r\nimport Landing from '../Landing';\r\nimport PrivateRoute from '../Auth/PrivateRoute';\r\nimport AuthInit from '../Auth/AuthInit';\r\nimport PropTypes from 'prop-types';\r\nimport { withCookies } from 'react-cookie';\r\nimport { connect } from 'react-redux';\r\nimport { getAuth, addAuth, removeAuth } from '../../actions/AuthActions';\r\nimport { getProfile, setProfile } from '../../actions/ProfileActions';\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport Backdrop from './Backdrop';\r\nimport Notification from '../Notification';\r\nimport Navigation from '../Navigation';\r\nimport store from '../../store';\r\nimport { Authorization } from '../Types/GeneralTypes';\r\nimport { receiveMessage, sendMessage } from '../../events/MessageService';\r\nimport Tenant from '../Tenant';\r\nimport Settings from './../Settings';\r\n\r\nconst themes = {\r\n    'themecolor_1': getTheme('#69A7BF'),\r\n    'themecolor_2': getTheme('#99587B'),\r\n    'themecolor_3': getTheme('#A66C26'),\r\n    'themecolor_4': getTheme('#37AE82')\r\n}\r\n\r\nfunction getTheme(color: string) {\r\n    return createMuiTheme({\r\n        palette: {\r\n          primary: {\r\n              main: color         \r\n          },\r\n          secondary: {\r\n              main: color\r\n          }\r\n        }\r\n      });\r\n}\r\n\r\n\r\n\r\ninterface Props {\r\n    getProfile: Function,\r\n    setProfile: Function,\r\n    getAuth: Function,\r\n    addAuth: Function,\r\n    removeAuth: Function,\r\n    cookies: any,\r\n\r\n    // event: PropTypes.object,\r\n    profile: any,\r\n    authorization: Authorization\r\n}\r\n\r\ninterface State {\r\n    authorization: Authorization,\r\n    profile: any,\r\n    event: any\r\n}\r\n\r\nclass Content extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.props.getProfile();\r\n        this.props.getAuth();\r\n\r\n\r\n        this.state = {\r\n            authorization: {\r\n                isAuth: false\r\n            },\r\n            event: {},\r\n            profile: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        receiveMessage().subscribe();\r\n    }\r\n    \r\n    logout = (event: any, type = 'success', message = 'You have been logged out') => {\r\n        this.props.removeAuth();\r\n        this.props.cookies.remove('isAuth');\r\n        this.props.cookies.remove('token');\r\n        this.props.cookies.remove('secret');\r\n        this.props.cookies.remove('name');\r\n        sendMessage('notification', true, {type: type, message: message, duration: 3000});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"App\"}>\r\n                \r\n                <HashRouter>\r\n                    <AuthInit />\r\n                    <Backdrop />\r\n                    <div className=\"body\">\r\n                        <div className=\"body-content\">\r\n                            <Notification />\r\n                            <MuiThemeProvider theme={themes['themecolor_1']}>\r\n                                <Navigation {...this.props} logout={() => this.logout} event={this.state.event} />\r\n                                <Route path=\"/:tenant/home\" render={(props: any) => <Home {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                <Route path=\"/:tenant/login\" render={(props: any) => <Login {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                <Route path=\"/\" exact render={(props: any) => <Landing {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                <Route path=\"/home\" exact render={(props: any) => <Landing {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                <Route path=\"/tenant\" exact render={(props: any) => <Tenant {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                                <PrivateRoute path=\"/:tenant/settings\" render={(props: any) => <Settings {...props} {...this.props} logout={() => this.logout} event={this.state.event} />} />\r\n                            </MuiThemeProvider>\r\n                        </div>\r\n                    </div>\r\n                </HashRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  authorization: state.authorization,\r\n  profile: state.profile//,\r\n//   event: state.event\r\n})\r\n\r\nexport default connect(mapStateToProps, { getAuth, addAuth, removeAuth, getProfile, setProfile })(withCookies(Content));\r\n","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from '../../store';\r\nimport './style.scss';\r\nimport './button.scss';\r\nimport './metric.scss';\r\nimport Content from './Content';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Content {...this.props} />\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {CookiesProvider} from \"react-cookie\";\r\n\r\nReactDOM.render(<CookiesProvider><App /></CookiesProvider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/mirror_white.ff53f974.svg\";","module.exports = __webpack_public_path__ + \"static/media/cover.b89312c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mirror_white_small.7aed2e38.svg\";"],"sourceRoot":""}